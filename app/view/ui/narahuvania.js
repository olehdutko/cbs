/*
 * File: app/view/ui/narahuvania.js
 * Date: Mon Sep 05 2011 19:04:54 GMT+0300 (FLE Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
 		var strUseother = false;
		var strUsekontragent = false;
		
var strDollar;
var strEuro;
var strGrivna;

	
	KursStore = Ext.create('Ext.data.JsonStore', {

       autoLoad: true,
            storeId: 'KursStore',
            proxy: {
                type: 'ajax',
                 url: '/php/kurs.php',
                reader: {
                    type: 'json',
                    root: 'results'
                }
            },
            fields: [
                {
                    name: 'grivna'
                },
				 {
                    name: 'euro'
                },
				 {
                    name: 'dollar'
                }
				
            ],
			listeners: {
						load: function() {
						strGrivna = parseFloat(KursStore.data.items[0].data.grivna); //global Vars
						strDollar = parseFloat(KursStore.data.items[0].data.dollar); //global Vars
						strEuro = parseFloat(KursStore.data.items[0].data.euro); //global Vars
						}
					}
    });
	
		
MaxNomer = Ext.create('Ext.data.JsonStore', {
       autoLoad: true,
            storeId: 'MaxNomer',
            proxy: {
                type: 'ajax',
                url: './php/SelectMaxNarah.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            fields: [
                {
                    name: 'Max'
                }
            ],
			listeners: {
						load: function() {
						
						Ext.getCmp("nomer").setValue(parseInt(MaxNomer.data.items[0].data.Max)+1);
						}
					}
    });
	
Ext.define('Borsuko.view.ui.narahuvania', {
    extend: 'Ext.form.Panel',

    autoRender: true,
    autoShow: true,
    frame: true,
    id: 'form',
    itemId: 'form',
    styleHtmlContent: true,
    autoScroll: true,
    maintainFlex: true,
    layout: {
        type: 'auto'
    },
    bodyPadding: 10,
    animCollapse: false,
    collapseFirst: false,
    collapsed: false,
    collapsible: true,
    frameHeader: false,
    title: 'Створення нового нарахування',
    titleCollapse: true,
    pollForChanges: true,
    paramsAsHash: true,
    standardSubmit: true,
    trackResetOnLoad: true,

    initComponent: function() {
        var me = this;
        me.items = [
            {
                xtype: 'fieldset',
                frame: true,
                padding: 10,
                width: 852,
                items: [
                    {
                        xtype: 'textfield',
                        id: 'nomer',
                        width: 350,
                        fieldLabel: 'Номер',
                        labelWidth: 150
                    },
					{
                        xtype: 'datefield',
						format : "d/m/Y",
                        id: 'date',
                        width: 500,
                        name: 'date',
                        fieldLabel: 'Дата',
                        labelWidth: 150,
						listeners: {
						render: function() {
							this.setValue(new Date());
						}
						}
                    },
					{
                        xtype: 'combobox',
                        id: 'pryznachennia',
						editable: false,
                        width: 500,
                        fieldLabel: 'Призначення платежу',
                        labelWidth: 150,
                        emptyText: 'Вибір...',
                        displayField: 'Type',
                        store: 'PryznachenniaStore',
                        valueField: 'Type',
						listeners: {
							select: {
								fn:function(combo, value) 
								{
								Ext.getCmp('add').setDisabled(false);
								Ext.getCmp('add_sklad_fondy').setDisabled(false);
								
									switch (combo.value)
									{
									
									case 'Контрагент':
										Ext.getCmp("kontr").setDisabled(false);
										Ext.getCmp("other").setDisabled(true);
										strUsekontragent = true	
										//Ext.getCmp('add').setDisabled(false);
										Ext.getCmp("other").reset();
										break;
									case 'Інші витрати':
										Ext.getCmp("other").setDisabled(false);
										Ext.getCmp("kontr").setDisabled(true);
										//Ext.getCmp('add').setDisabled(false);
										Ext.getCmp("kontr").reset();
										strUseother = true
										strUsekontragent = false
										break;
									default: 
										Ext.getCmp("kontr").reset();
										Ext.getCmp("other").reset();
										Ext.getCmp("kontr").setDisabled(true);
										Ext.getCmp("other").setDisabled(true);
										strUsekontragent = false
										strUseother = false
																				
										break;
									};
								}
							}
						
						}
                    },
					{
                        xtype: 'textfield',
                        id: 'other',
						disabled: true,
                        width: 500,
                        fieldLabel: 'Інші витрати',
                        labelWidth: 150,
                        emptyText: '...'
                    },
                    {
                        xtype: 'combobox',
                        id: 'kontr',
                        width: 500,
                        fieldLabel: 'Контрагент',
						disabled: true,
                        labelWidth: 150,
                        emptyText: 'Вибір...',
                        displayField: 'Type',
                        store: 'KontragentyStore',
                        valueField: 'Type'
                    },
					{
                        xtype: 'textfield',
                        id: 'Model',
                        width: 500,
                        name: 'Model',
                        fieldLabel: 'Назва',
                        labelWidth: 150,
                        emptyText: 'Назва моделі'
                    },
                    {
                        xtype: 'textareafield',
                        height: 85,
                        id: 'Description',
                        width: 500,
                        name: 'Description',
                        fieldLabel: 'Опис',
                        labelWidth: 150,
                        emptyText: 'Опис'
                    },

					{
                        xtype: 'textfield',
						//anchor:'20%',
                        id: 'count',
                        width: 300,
                        name: 'count',
                        fieldLabel: 'Кількість (для складу)',
                        labelWidth: 150
                    },
					{
                        xtype: 'combobox', editable: false,
                        id: 'OdVym',
                        width: 500,
                        name: 'OdVym',
                        fieldLabel: 'Одиниці виміру',
                        labelWidth: 150,
                        emptyText: 'Вибір...',
                        displayField: 'OdVymiru',
                        store: 'store_OdVymiru',
                        valueField: 'OdVymiru'
                    },
					{
                        xtype: 'combobox', 
						editable: false,
                        id: 'Valiuta',
                        width: 500,
                        fieldLabel: 'Валюта',
						allowBlank : false,
                        labelWidth: 150,
                        emptyText: 'Вибір...',
                        displayField: 'name',
                        queryMode: 'local',
                        store: 'ValiutaStore',
                        valueField: 'abbr'
                    },
                    {
                        xtype: 'textfield',
						allowBlank : false,
                        id: 'Price',
                        width: 500,
                        name: 'Price',
                        fieldLabel: 'Ціна',
                        labelWidth: 150,
                        emptyText: 'Ціна в валюті'
                    },
                     {
                        xtype: 'textareafield',
                        height: 85,
                        id: 'prymitky',
                        width: 500,
                        fieldLabel: 'Примітка',
                        labelWidth: 150,
                        emptyText: 'Примітка'
                    },
                   
				   
				   
				   
				   
				   
				   
				   
				   
				   
				   
				   
				   //ХЗ що з тим робити
                    /*{
                        xtype: 'textfield',
                        id: 'suma',
                        width: 500,
                        name: 'suma',
                        fieldLabel: 'Сума (грн.)',
                        labelWidth: 150,
                        emptyText: 'Сума нарахування (в гривнях)'
                    },*/
					
					{
                        xtype: 'combobox', editable: false,
                        id: 'Type',
                        width: 500,
                        name: 'Type',
                        fieldLabel: 'Тип Обладнання',
                        labelWidth: 150,
                        emptyText: 'Вибір...',
                        displayField: 'type',
                        store: 'TypObladnannia_Store',
                        valueField: 'type'
                    },
                    {
                        xtype: 'textfield',
                        id: 'Vendor',
                        width: 500,
                        name: 'Vendor',
                        fieldLabel: 'Виробник',
                        labelWidth: 150,
                        emptyText: 'Виробник'
                    }
					 
					//ХЗ що з тим робити
					
                   
                ]
            }
        ];
        me.dockedItems = [
            {
                xtype: 'toolbar',
                dock: 'top',
                items: [
                    {
                        xtype: 'button',
                        id: 'add',
                        text: 'Нарахувати',
						iconCls: 'money-up',
						disabled: true,
						handler : function(){
							AddFirstRecord()
						}
						
                    },
					 {
                        xtype: 'button',
                        id: 'add_sklad_fondy',
                        text: 'Нарахувати та додати на склад/в.фонди',
						iconCls: 'add',
						disabled: true,
						handler : function(){
							AddFirstRecord()
							AddToPriceSklad()
						}
						
                    }
                ]
            }
        ];
        me.callParent(arguments);
    }
});


function AddToPriceSklad(){
				
		var str_Type = Ext.getCmp("Type").getValue();
		var str_Tema = "";
		var str_Category = "";
		var str_CategoryId = "";
		var str_SubCategory = "";
		var str_SubCategoryId = "";
		var str_Model = Ext.getCmp("Model").getValue();
		var str_Description= Ext.getCmp("Description").getValue();
		var str_OdVym = Ext.getCmp("OdVym").getValue();
		var str_Vendor = Ext.getCmp("Vendor").getValue();
		var str_Price = Ext.getCmp("Price").getValue();
		var str_Valiuta = Ext.getCmp("Valiuta").getValue();
		var str_Nacinka = "";
		var str_Time = "";
		var str_count = Ext.getCmp("count").getValue();
	  
		switch (str_Type)
			{
			case 'монтажні':
				strTable = 'montazh';
				strTypeID = 2;
				break;
			case 'активні': 
				strTable = 'active';
				strTypeID = 1;
				break;
			}  
		  
	//Додавання в Каталог
	Ext.Ajax.request(
	{
		url: './php/insert_to_price-sklad.php',
		params: {
		Type: str_Type ,
		Tema: str_Tema , 
		Category: str_Category ,
		CountOnSklad: str_count,
		CategoryId: str_CategoryId ,
		SubCategory: str_SubCategory ,
		SubCategoryId: str_SubCategoryId ,
		Model: str_Model ,
		Description: str_Description,
		OdVym: str_OdVym ,
		Vendor: str_Vendor ,
		Price: str_Price ,
		Valiuta: str_Valiuta ,
		Nacinka: str_Nacinka ,
		Time: str_Time,
		Table:strTable,
		TypeID:strTypeID
			
		},
		success: function()
		{
			Ext.MessageBox.alert('товар доданий!', 'Товар доданий');
			
		},
		failure: function(response)
		{
			Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
		}
	})
	
					
	}
	
function AddFirstRecord(){		
		var str_nomer = Ext.getCmp("nomer").getValue();
		var str_date = Ext.getCmp("date").getValue();
		var str_prymitky = Ext.getCmp("prymitky").getValue();
		var str_pryznachennia= Ext.getCmp("pryznachennia").getValue();
		var str_count = Ext.getCmp("count").getValue();
		var str_Type = Ext.getCmp("Type").getValue();//oblad_Type
		var str_Model = Ext.getCmp("Model").getValue();
		var str_Description = Ext.getCmp("Description").getValue();
		var str_OdVym = Ext.getCmp("OdVym").getValue();
		var str_Vendor = Ext.getCmp("Vendor").getValue();
		var str_Price = Ext.getCmp("Price").getValue();
		//валюта в гривнях
		if (str_count == 0)
			{
			str_count = 1;
			}
			
		var str_Valiuta = Ext.getCmp("Valiuta").getValue();
		var str_suma_v_valiuti = str_Price*str_count;
		
		switch (str_Valiuta)
			{//Сума в гривнях
		case 'dollar':
			str_suma = strDollar*(str_Price*str_count);
			CyrValiuta = 'доллари';
			break;
		case 'euro':
			str_suma = strEuro*(str_Price*str_count);
			CyrValiuta = 'євро';
			break;	
		case 'grivna':
			str_suma = strGrivna*(str_Price*str_count);
			CyrValiuta = 'гривні';
			break;
			};
		//alert(str_suma);
			
			if (strUseother == true)
			{
			
			str_pryznachennia = Ext.getCmp("other").getValue();
			Ext.Ajax.request(
				{
				url: './php/insert_pryznachennia.php',
				params: { new_pryznachennia: str_pryznachennia},
				success: function()
				{ },
				failure: function(response)
				{ }
			}) 
			}

		//Якщо вибраний то відповідна сума повинна писатися в Kontragenty.Balans
		//При створенні виплати, відповідна сума повина бути віднята Kontragenty.Balans

		IsKontrAgent = 0;
		if (strUsekontragent == true)
			{
			str_pryznachennia = Ext.getCmp("kontr").getValue();
			IsKontrAgent = 1;
			Ext.Ajax.request(
				{
				url: './php/na_balans_kontragenta.php',
			
				params: { 
				p_Kontragent: str_pryznachennia,
				cina_spysanogo: str_suma
				
				},
				success: function()
				{ },
				failure: function(response)
				{ }
			}) 
			
			//Пишу на таблицю KontragentHistory
			var strType = "Нарахування";
			var strPrymitkaTMP = "На контрагента '"+ str_pryznachennia+"' нараховано '" +str_Price*str_count+ "' " +CyrValiuta+". Нарахування №"+ str_nomer;
			
			
			Ext.Ajax.request(
			{
				url: './php/na_kontragentHistory.php',
				params: {
					p_Kontragent: str_pryznachennia,
					price: str_suma,
					//price: str_Price,
					prymitka: strPrymitkaTMP,
					description: str_Description,
					count: str_count,
					type:strType
				},
				success: function()
				{
					var MyGrid = Ext.getCmp(GridName).getView();
					MyGrid.getStore().load();
				},
				failure: function(response)
				{
					Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
				}
			})
			}
		else
			{
			str_pryznachennia= Ext.getCmp("pryznachennia").getValue();
			}

		
		

	Ext.Ajax.request(
	{
		url: './php/Insert_Narahuvannia.php',
		params: {
			nomer: str_nomer,
			suma: str_suma,
			IsKontrAgent:IsKontrAgent,
			prymitky: str_prymitky,
			date: str_date,
			pryznachennia: str_pryznachennia,
					Valiuta: str_Valiuta,
					count: str_count,
					oblad_Type: str_Type,
					Model: str_Model,
					Description: str_Description,
					OdVym: str_OdVym,
					Vendor: str_Vendor,
					Price: str_Price
					
		},
		success: function()
		{
			Ext.MessageBox.alert('Дані Збережені!', 'Нарахування додано в стані "Невиплачено"');
			strUrl = "/narahuvania_view.php";
			window.location = strUrl;
		},
		failure: function(response)
		{
			Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
		}
	})
	}