/*
 * File: app/view/ui/edit_books.js
 * Date: Mon Sep 12 2011 16:32:25 GMT+0300 (FLE Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
Ext.Loader.setConfig({enabled: true});
Ext.grid.RowEditor.prototype.cancelBtnText = "Відмінити";
Ext.grid.RowEditor.prototype.saveBtnText = "Зберегти";
Ext.grid.RowEditor = new Ext.grid.RowEditor();
Ext.Loader.setPath('Ext.ux', '/ext-4.0.2a/examples/ux');
Ext.require([
    //'Ext.grid.*',
    //'Ext.data.*',
    'Ext.ux.grid.FiltersFeature',
    'Ext.toolbar.Paging'
]);

 var url = {
        local:  'grid-filter.json',  
        remote: 'grid-filter.php'
    };
var winInfo;

    var encode = false;
    var local = false;
    
Ext.define('book', {
    extend: 'Ext.data.Model',
    fields: [
            { name: 'id' },
            { name: 'statusid' },
            { name: 'book_name' },
            { name: 'status' },
            { name: 'format' },
            { name: 'book_outhors' },
            { name: 'pages' },
            { name: 'year' },
            { name: 'book_theme_name' },
            { name: 'publisher' },
            { name: 'date' },
            { name: 'other' },
            { name: 'books_history_id' },
            { name: 'ext_nomer' },
            { name: 'city' },
            { name: 'price' },
            { name: 'BBK' },
            { name: 'UDK' },
            { name: 'ISBN' }
    ]
});

    
var GridName = "Books" 
    
    var filters = {
        ftype: 'filters',
        encode: encode, 
        local: local,   

        filters: [
            
            { type: 'int', dataIndex: 'id' },
            { type: 'int', dataIndex: 'statusid' },
            { type: 'string',dataIndex: 'book_name' },
            { type: 'string',dataIndex: 'book_outhors' },
            { type: 'string',dataIndex: 'format' },
            { type: 'int', dataIndex: 'pages' },
            { type: 'int', dataIndex: 'year' },
            { type: 'string',dataIndex: 'book_theme_name' },
            { type: 'string',dataIndex: 'publisher' },
            { type: 'date', dataIndex: 'date' },
            { type: 'string',dataIndex: 'other' },
            { type: 'string',dataIndex: 'ISBN' }

            
            
        ]
    };

var editor = new Ext.grid.plugin.RowEditing({
    saveText: 'Зберегти'
});
 
booksAll = Ext.create('Ext.data.JsonStore', {
    autoLoad: true,
     pageSize: 20,
            autoSync: true,
            storeId: 'booksAll',
            proxy: {
                type: 'ajax',
                url: './php/booksAll.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            model: 'book'

    });


Ext.define('Borsuko.view.ui.edit_books', {
    extend: 'Ext.panel.Panel',


    initComponent: function() {
        var me = this;
        me.items = [
            {
                xtype: 'form',
                autoRender: true,
                autoShow: true,
                frame: true,
                height: 750,
                id: 'tabs',
                itemId: 'tabs',
                maintainFlex: true,
                bodyPadding: '',
                animCollapse: false,
                collapseFirst: false,
                collapsed: false,
                collapsible: true,
                frameHeader: false,
                title: '&#1050;&#1085;&#1080;&#1075;&#1080;',
                titleCollapse: true,
                pollForChanges: true,
                paramsAsHash: true,
                standardSubmit: true,
                trackResetOnLoad: true,
                items: [

                    {
                        xtype: 'gridpanel',
                        id: GridName,
                        height: 500,
                        //toFrontOnShow: false,
                        //suspendLayout: true,
                        bodyBorder: true,
                        frameHeader: false,
                        //forceFit: true,
                        store: 'booksAll',
                        selModel: Ext.create('Ext.selection.RowModel', {
                            allowDeselect: true
                        }),

                        columnLines: true,
                        features: [filters],
                        plugins: [editor],
                        
                                columns: [
                            {
                                xtype: 'gridcolumn',
                                width: 30,
                                //width: 41,
                                autoRender: true,
                                layout: {
                                    type: 'fit'
                                },
                                dataIndex: 'id',
                                text: 'id',
                                filtrable:true,
                                renderer: GreenGrtayColor
                            },
                       {
                                xtype: 'gridcolumn',
                                width: 30,
                                //width: 41,
                                autoRender: true,
                                layout: {
                                    type: 'fit'
                                },
                                dataIndex: 'statusid',
                                text: 'statusid',
                                filtrable:true,
                                renderer: GreenGrtayColor
                            },


{
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'ext_nomer',
                                text: '&#1042;&#1085;&#1091;&#1090;&#1088;&#1110;&#1096;&#1085;&#1110;&#1081; #',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 150,
                                //width: 41,
                                dataIndex: 'book_name',
                                text: 'Назва книжки',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
                                renderer: GreenGrtayColor
                            },



{
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'format',
                                text: '&#1092;&#1086;&#1088;&#1084;&#1072;&#1090;',
                                field: {
                                    xtype: 'combobox',
                                    editable: false,
                                    displayField: 'format',
                                    queryMode: 'local',
                                    store: 'format_store',
                                    valueField: 'format'
                                    
                                },
                                renderer: GreenGrtayColor
                            },


                            {
                                xtype: 'gridcolumn',
                                width: 150,
                                //width: 41,
                                dataIndex: 'book_outhors',
                                text: 'Автори',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 150,
                                dataIndex: 'pages',
                                text: 'Кількість сторінок',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 150,
                                dataIndex: 'year',
                                text: '&#1056;&#1110;&#1082;',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'book_theme_name',
                                text: 'Жанр',
                                field: {
                                    xtype: 'combobox',
                                    editable: false,
                                    displayField: 'book_theme_name',
                                    queryMode: 'local',
                                    store: 'book_theme_store',
                                    valueField: 'book_theme_name'
                                    
                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'publisher',
                                text: 'Видавець',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
                                renderer: GreenGrtayColor
                            },

                            {
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'city',
                                text: '&#1052;&#1110;&#1089;&#1090;&#1086; &#1074;&#1080;&#1076;&#1072;&#1085;&#1085;&#1103;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },{
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'price',
                                text: '&#1062;&#1110;&#1085;&#1072;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            }
,{
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'BBK',
                                text: '&#1041;&#1041;&#1050;',
                                field: {
                                    xtype: 'combobox',
                                    editable: false,
                                    displayField: 'book_theme_name',
                                    queryMode: 'local',
                                    store: 'book_theme_store',
                                    valueField: 'book_theme_name'
                                    
                                },
                                renderer: GreenGrtayColor
                            },{
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'UDK',
                                text: '&#1059;&#1044;&#1050;',
                                field: {
                                    xtype: 'combobox',
                                    editable: false,
                                    displayField: 'book_theme_name',
                                    queryMode: 'local',
                                    store: 'book_theme_store',
                                    valueField: 'book_theme_name'
                                    
                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 50,
                                dataIndex: 'ISBN',
                                text: 'ISBN',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'other',
                                text: 'Примітка',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
                                renderer: GreenGrtayColor
                            },
                            
                            {
                                xtype: 'datecolumn',
                                width: 100,
                                type: 'date', 
                                format: 'd/m/Y',                                
                                dataIndex: 'date',
                                text: 'Дата додавання',
                                field: {
                                    format: 'd-m-Y',
                                    xtype: 'datefield'
                                },
                                renderer: GreenGrtayColor
                            }
                          ],
                          
                          listeners: {
                            selectionchange: function(model, records) {
                                if (records[0]) {
                            
                                Ext.getCmp('export').setDisabled(false)
                                Ext.getCmp('del').setDisabled(false)
                                Ext.getCmp('lost').setDisabled(false)
                                Ext.getCmp('spysaty').setDisabled(false)
                                Ext.getCmp('restore').setDisabled(false)

                                
                                }
                            }
                        },
                        
                        viewConfig: {
                            width: 2000
                        },
                        
                        
                         dockedItems: [
                            {
                                xtype: 'toolbar',
                                id: 'toolbarTop',
                                dock: 'top',
                                items: [
                                {
                                    xtype: 'button',
                                    iconCls: 'save_columns', tooltip: 'Зберегти параметри колонок',
                                    handler : function(){
                                    //var MyGrid = Ext.getCmp(GridName).getView();
                                    getCount();
                                        }
                                },
                                {
                                    xtype: 'button',
                                    id: 'del',
                                    disabled: true,
                                    text: 'Видалити',
                                    iconCls: 'remove',
                                    handler : function(){
                                    Ext.Msg.confirm('Підтвердження', 'Дійсно хочете видалити книгу?',
                                    function(btn){
                                        if(btn == 'yes'){
                                        sendRemoveRequest();
                                        }
                                    }
                                    );
                                }
                                },
                                {
                                    xtype: 'button',
                                    id: 'lost',
                                    disabled: true,
                                    text: 'Позначити як втрачено',
                                    iconCls: 'remove',
                                    handler : function(){
                                    Ext.Msg.confirm('Підтвердження', 'Дійсно хочете цю книгу позначити як втрачено??',
                                    function(btn){
                                        if(btn == 'yes'){
                                        sendLostRequest();
                                        }
                                    }
                                    );
                                }
                                },



 {
                                    xtype: 'button',
                                    id: 'spysaty',
                                    disabled: true,
                                    text: '&#1057;&#1087;&#1080;&#1089;&#1072;&#1090;&#1080;',
                                    iconCls: 'remove',
                                    handler : function(){
                                    Ext.Msg.confirm('Підтвердження', '&#1042;&#1080; &#1076;&#1110;&#1081;&#1089;&#1085;&#1086; &#1073;&#1072;&#1078;&#1072;&#1108;&#1090;&#1077; &#1089;&#1087;&#1080;&#1089;&#1072;&#1090;&#1080; &#1094;&#1102; &#1082;&#1085;&#1080;&#1075;&#1091;?',
                                    function(btn){
                                        if(btn == 'yes'){
                                                var str_statusid = Ext.getCmp(GridName).getSelectionModel().selected.items[0].raw.statusid;
                                                 if(str_statusid == '8'){ alert('&#1050;&#1085;&#1080;&#1075;&#1072; &#1074;&#1078;&#1077; &#1089;&#1087;&#1080;&#1089;&#1072;&#1085;&#1072;') }
                                                 else{showSpysatyDialogForm();}
                                        }
                                    }
                                    );
                                }
                                },




                                








{
                                    xtype: 'button',
                                    id: 'restore',
                                    disabled: true,
                                    text: '&#1042;&#1110;&#1076;&#1085;&#1086;&#1074;&#1080;&#1090;&#1080;',
                                    iconCls: 'remove',
                                    handler : function(){
                                        Ext.Msg.confirm('&#1042;&#1110;&#1076;&#1085;&#1086;&#1074;&#1083;&#1077;&#1085;&#1085;&#1103;', '&#1042;&#1080; &#1076;&#1110;&#1081;&#1089;&#1085;&#1086; &#1073;&#1072;&#1078;&#1072;&#1108;&#1090;&#1077; &#1074;&#1110;&#1076;&#1085;&#1086;&#1074;&#1080;&#1090;&#1080; &#1082;&#1085;&#1080;&#1075;&#1091;?',
                                        function(btn){
                                            if(btn == 'yes'){
                                            restoreRequest();
                                            }
                                        }
                                        );
                                    }
                                },
                                
                                {
                                    xtype: 'button',
                                    id: 'export',
                                    disabled: true,
                                    text: 'Експорт',
                                    iconCls: 'member',
                                    handler : function()
                                    {
                    alert('&#1074; &#1087;&#1088;&#1086;&#1094;&#1077;&#1089;&#1110; &#1088;&#1086;&#1079;&#1088;&#1086;&#1073;&#1082;&#1080; :-)');
                                    }
                                }
                                    
                                    
                                ]
                            },
                            
                            {
                                xtype: 'pagingtoolbar',
                                pageSize: 20,
                                id: 'pagingtoolbar',
                                afterPageText: 'із {0}',
                                beforePageText: 'Сторінка',
                                displayInfo: true,
                                displayMsg: 'Показано {0} - {1} із {2}',
                                emptyMsg: 'Записи відсутні',
                                firstText: 'Перша сторінка',
                                lastText: 'Остання сторінка',
                                nextText: 'Наступна сторінка',
                                prependButtons: true,
                                prevText: 'Попередня сторінка',
                                refreshText: 'Оновити',
                                store: booksAll,
                                dock: 'bottom'
                            }
                        ]
                        
                       
                                                
                    }
                ]
            }
        ];
        me.callParent(arguments);
    }
});

function sendRemoveRequest(){
        var MyGrid = Ext.getCmp(GridName).getView();
        var cr = Ext.getCmp(GridName).getSelectionModel().selected;
        var statusid = Ext.getCmp(GridName).getSelectionModel().selected.items[0].raw.statusid;
        var str_id = cr.items[0].data.id;
        
        if(statusid == 2 || statusid == 8) {
            Ext.Ajax.request({
                url:'/php/delete_book.php', //php function that saves the data
                params: {id: str_id},
                success:function(responce, action) {
                MyGrid.getStore().load();
                },
                failure: function(form, action) {
                alert('Помилка при виделенні');
                }
            });
        
        
        }
        else
        {
            
            Ext.MessageBox.alert('Помилка!', 'Для того щоб видалити книгу її треба списати або позначити як втрачену.');          
        }
        
            
}
    
    function sendLostRequest(){
        var MyGrid = Ext.getCmp(GridName).getView();
        var cr = Ext.getCmp(GridName).getSelectionModel().selected;

        var str_id = cr.items[0].data.id;
        //alert(strnomer);
        Ext.Ajax.request({
            url:'/php/lost_book.php', //php function that saves the data
            params: {id: str_id},
            success:function(responce, action) {
            MyGrid.getStore().load();
            },
            failure: function(form, action) {
            alert('Помилка при виделенні');
            }
        });
    }
    
    function spysatyRequest(){


        prychyna_spysannia = Ext.getCmp("prychyna_spysannia").getValue();

        var MyGrid = Ext.getCmp(GridName).getView();
        var cr = Ext.getCmp(GridName).getSelectionModel().selected;

        var str_id = cr.items[0].data.id;
        Ext.Ajax.request({
            url:'/php/spysaty.php', 
            params: {id: str_id, prychyna_spysannia: prychyna_spysannia},
            success:function(responce, action) {
            MyGrid.getStore().load();
            },
            failure: function(form, action) {
            alert('Помилка при виделенні');
            }
        });
    }
    function restoreRequest(){
        var MyGrid = Ext.getCmp(GridName).getView();
        var cr = Ext.getCmp(GridName).getSelectionModel().selected;

        var str_id = cr.items[0].data.id;
        Ext.Ajax.request({
            url:'/php/restore.php', 
            params: {id: str_id},
            success:function(responce, action) {
            MyGrid.getStore().load();
            },
            failure: function(form, action) {
            alert('Помилка при виделенні');
            }
        });
    }
    
    
    function sendUpdateRequest(){
    
                var jsonData = new Array();       
    
        var cr = Ext.getCmp(GridName).getSelectionModel().selected;
        var Slenght = Ext.getCmp(GridName).getSelectionModel().selected.length;
        
                var strNomer = cr.items[0].data.nomer;
                /*var strStan1 = cr.items[0].data.Stan_objektu;

                switch(strStan1)
                {
                case "1":
                  var strStan = 1;
                  break;
                case "0":
                  var strStan = 0;
                  break;
                }*/
                
                var strid = cr.items[0].data.id;

                var strext_nomer = cr.items[0].data.ext_nomer;
                var strcity = cr.items[0].data.city;
                var strprice = cr.items[0].data.price;
                var strBBK = cr.items[0].data.BBK;
                var strUDK = cr.items[0].data.UDK;
                var strformat = cr.items[0].data.format;

                var strbook_name = cr.items[0].data.book_name;
                var strbook_outhors = cr.items[0].data.book_outhors;
                var strpages = cr.items[0].data.pages;
                var stryear = cr.items[0].data.year;
                var strbook_theme_name = cr.items[0].data.book_theme_name;
                var strpublisher = cr.items[0].data.publisher;
                var strdate = cr.items[0].data.date;
                var strISBN = cr.items[0].data.ISBN;

                Ext.Ajax.request(
                {
                    url: './php/updatebooks.php',
                    params: {
                        ext_nomer:strext_nomer,
                        city:strcity,
                        price:strprice,
                        BBK:strBBK,
                        format:strformat,

                        UDK:strUDK,
                        id:strid,
                        book_name:strbook_name,
                        book_outhors :strbook_outhors,
                        pages :strpages,
                        year :stryear,
                        book_theme_name :strbook_theme_name,
                        publisher :strpublisher,
                        date :strdate,
                        ISBN :strISBN
                    
                    },
                    success: function()
                    {
                    },
                    failure: function(response)
                    {
                        Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
                    }
                })
                var MyGrid = Ext.getCmp(GridName).getView();
                MyGrid.getStore().load();
                
    }
    
    function GreenGrtayColor (v, params, record) { 
        
        if(record.data.statusid  == '2') { 
            var color = 'black'; 
            var dekor =  'line-through';
        };
        
        if(record.data.statusid  == '8') { 
            var color = 'black'; 
            var dekor =  'line-through';
        };
        
        if(record.data.statusid  == '7') { 
            var color = 'gray'; 
            var dekor =  'line-through';
        };
        
        
        return '<span style="color:' + color + ';text-decoration:' + dekor + '">' + v + '</span>';
    }
    
    function getCount(){
    var jsonObj = { };
      var MyGrid = Ext.getCmp(GridName).getView();
      var ColumnSizeArray=new Array(); 
      var ColumnVisibleArray=new Array(); 
      var columns = MyGrid.getGridColumns();
      var columnsLength = MyGrid.getGridColumns().length;
      var columnsState = MyGrid.getHeaderCt().getGridColumns();
      for(var i = 0; i < columnsLength; i++){
            ColumnSizeArray[i]=MyGrid.getHeaderAtIndex(i).el.dom.firstChild.scrollWidth;
            jsonObj[ColumnSizeArray[i].id] = ColumnSizeArray[i].value;
            ColumnVisibleArray[i]=columnsState[i].hidden;
      } 

        var JsonColumnSize = array1dToJson(ColumnSizeArray, 'data', 'size');
        var JsonColumnVisible = array1dToJson(ColumnVisibleArray, 'data', 'hidden');
  
        Ext.Ajax.request(
                {
                    url: './php/SaveColumnSize.php',
                    params: {
                        GridName: GridName,
                        JsonColumnSize: JsonColumnSize,
                        JsonColumnVisible: JsonColumnVisible
                        
                    },
                    success: function()
                    {
                    Ext.MessageBox.alert('Виконано', 'Стан колонок успішно збережений');
                    },
                    failure: function(response)
                    {
                        Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
                    }
                })
        
        /*function array2dToJson(a, p, nl) {
          var i, j, s = '{"' + p + '":[';
          nl = nl || '';
          for (i = 0; i < a.length; ++i) {
            s += nl + array1dToJson(a[i]);
            if (i < a.length - 1) {
              s += ',';
            }
          }
          s += nl + ']}';
          return s;
        }*/
        
        function array1dToJson(a, p, value) {
          var i, s = '[';
          for (i = 0; i < a.length; ++i) {
            if (typeof a[i] == 'string') {
              s += '"' + a[i] + '"';
            }
            else { // assume number type
              s += "{\""+value+"\": "+a[i]+"}";
            }
            if (i < a.length - 1) {
              s += ',';
            }
          }
          s += ']';
          if (p) {
            return '{"' + p + '":' + s + '}';
          }
          return s;
        }
}

 ColumnSizeStore = Ext.create('Ext.data.JsonStore', {
    autoLoad: true,
    autoSync: true,
    storeId: 'ColumnSizeStore',
    proxy: {
        type: 'ajax',
        url: './php/SelectColumnSize.php?GridName='+GridName,
        reader: {
            type: 'json',
            root: 'data'
        }
    },
    fields: [
        {
            name: 'size'
        }
    ],
    listeners: {
                load: function() {
                    
                    var StoreLength = ColumnSizeStore.data.length;
                    for(var i = 0; i < StoreLength; i++){
                    //ColumnSizes[i] = ColumnSizeStore.data.items[i].data.size;
                    Ext.getCmp(GridName).columns[i].setWidth(ColumnSizeStore.data.items[i].data.size);
                    };
                }
            }
}); 

ColumnStateStore = Ext.create('Ext.data.JsonStore', {

    autoLoad: true,
    autoSync: true,
    storeId: 'ColumnStateStore',
    proxy: {
        type: 'ajax',
        url: './php/SelectColumnState.php?GridName='+GridName,
        reader: {
            type: 'json',
            root: 'data'
        }
    },
    fields: [
        {
            name: 'hidden'
        }
    ],
    listeners: {
                load: function() {
                    var StoreLength1 = ColumnStateStore.data.length;
                    for(var i = 0; i < StoreLength1; i++){
                    //ColumnSizes[i] = ColumnStateStore.data.items[i].data.hidden;
                    Ext.getCmp(GridName).columns[i].setVisible(!(ColumnStateStore.data.items[i].data.hidden));//працює на FF, але не на IE
                    };
                }
            }
});


    function showSpysatyDialogForm() {
        if (!winInfo) {
            var formInfo = Ext.widget('form', {
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                border: false,
                id: 'formInfo',
                bodyPadding: 10,

                fieldDefaults: {
                    labelAlign: 'top',
                    labelWidth: 100,
                    labelStyle: 'font-weight:bold'
                },
                defaults: {
                    margins: '0 0 10 0'
                },

                items: [

                  {
                        xtype: 'combobox',
                        id: 'prychyna_spysannia',
                        editable: false,
                        width: 500,
                        fieldLabel: '&#1055;&#1088;&#1080;&#1095;&#1080;&#1085;&#1072; &#1076;&#1083;&#1103; &#1089;&#1087;&#1080;&#1089;&#1072;&#1085;&#1085;&#1103;',
                        labelWidth: 150,
                        displayField: 'prychyna_spysannia',
                        store: 'prychyna_spysannia_store',
                        valueField: 'prychyna_spysannia',

                    }
                    ],

                buttons: [
                {
                    text: '&#1047;&#1072;&#1082;&#1088;&#1080;&#1090;&#1080;',
                    handler: function() {
                        formInfo.getForm().reset();
                        winInfo.hide();
                    }
                },

                {
                    text: '&#1057;&#1087;&#1080;&#1089;&#1072;&#1090;&#1080;',
                    handler: function() {

                    spysatyRequest();
                    formInfo.getForm().reset();
                    winInfo.hide();

                }

                }
                ]
            });

            winInfo = Ext.widget('window', {
                title: '&#1054;&#1073;&#1077;&#1088;&#1110;&#1090;&#1100; &#1087;&#1088;&#1080;&#1095;&#1080;&#1085;&#1091; &#1089;&#1087;&#1080;&#1089;&#1072;&#1085;&#1085;&#1103;',
                closeAction: 'hide',
                id:'winInfo',
                width: 300,
                height: 200,
                minHeight: 200,
                layout: 'fit',
                resizable: true,
                modal: true,
                items: formInfo
            });
        }
        winInfo.show();
    }
editor.on('afteredit', sendUpdateRequest);  			