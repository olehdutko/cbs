/*
 * File: app/view/ui/vyplaty_view.js
 * Date: Mon Sep 05 2011 19:04:54 GMT+0300 (FLE Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
var GridName = "vyplaty_view";
Ext.Loader.setConfig({enabled: true});
Ext.Loader.setPath('Ext.ux', '/ext-4.0.2a/examples/ux');
Ext.require([
    'Ext.grid.*',
    'Ext.data.*',
    'Ext.ux.grid.FiltersFeature',
    'Ext.toolbar.Paging'
]);
 
 Ext.define('Product', {
    extend: 'Ext.data.Model',
    fields: [ 
			{ type: 'string', name: 'Type'}, 
			{ type: 'numeric', name: 'ID'}, 
			{ type: 'numeric', name: 'Nomer_Narahuvannia'}, 
			{type: 'date', name: 'Date'}, 
			{type: 'string', name: 'Pryznachennia'}, 
			{type: 'numeric', name: 'Suma'}, 
			{type: 'string', name: 'Prymitky'},
			]
});

var url = {
        local:  'grid-filter.json',  
        remote: 'grid-filter.php'
    };

    var encode = false;
    var local = false;
	
	
    var filters = {
        ftype: 'filters',
        encode: encode, 
        local: local,   

        filters: [
			{ type: 'string', dataIndex: 'Type'}, 
			{ type: 'numeric', dataIndex: 'ID'}, 
			{ type: 'numeric', dataIndex: 'Nomer_Narahuvannia'}, 
			{type: 'date', dataIndex: 'Date'}, 
			{type: 'string', dataIndex: 'Pryznachennia'}, 
			{type: 'numeric', dataIndex: 'Suma'}, 
			{type: 'string', dataIndex: 'Prymitky'},
        ]
    };
	
Ext.define('Borsuko.view.ui.vyplaty_view', {
    extend: 'Ext.panel.Panel',

    height: 625,
    animCollapse: false,
    collapseFirst: false,
    frameHeader: false,
    overlapHeader: true,
    title: 'Перегляд здійснених виплат',

    initComponent: function() {
        var me = this;
        me.items = [
            {
                xtype: 'gridpanel',
                height: 600,
                id: GridName,
                toFrontOnShow: false,
                bodyBorder: true,
                animCollapse: false,
                collapseFirst: false,
                frameHeader: false,
				
                title: '',
                //forceFit: true,
                store: 'Vyplaty_store',
                columnLines: true,
                columns: [
                    {
                        xtype: 'gridcolumn',
                        width: 15,
                        dataIndex: 'Type',
                        groupable: true,
                        text: 'Тип'
                    },
                    {
                        xtype: 'gridcolumn',
                        width: 15,
                        dataIndex: 'ID',
                        text: 'Номер виплати'
                    },
                    {
                        xtype: 'gridcolumn',
                        id: 'Nomer_Narahuvannia',
                        width: 15,
                        dataIndex: 'Nomer_Narahuvannia',
                        text: 'Номер нарахування'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        hidden: true,
                        dataIndex: 'SubCategoryId',
                        text: 'СКІ'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
						renderer: dateFunction,
                        dataIndex: 'Date',
                        text: 'Дата виплати'
                    },
                    {
                        xtype: 'gridcolumn',
                        width: 15,
                        dataIndex: 'Pryznachennia',
                        text: 'Призначення'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        hidden: true,
                        dataIndex: 'IsKontrAgent',
                        text: 'IsKontrAgent'
                    },
                    {
                        xtype: 'numbercolumn',
						width: 15,
                        dataIndex: 'Suma',
                        groupable: true,
                        text: 'Сума'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'Prymitky',
                        text: 'Примітка'
                    }
                ],
				
                viewConfig: {
                    height: 600,
                    width: 2000,
                    autoScroll: true
                },
                features: [filters,
                    {
                        ftype: 'grouping'
                    }
                ],
                dockedItems: [
                    {
                        xtype: 'pagingtoolbar',
                        afterPageText: 'із {0}',
                        beforePageText: 'Сторінка',
                        displayInfo: true,
                        displayMsg: 'Показано {0} - {1} із {2}',
                        emptyMsg: 'Записи відсутні',
                        firstText: 'Перша сторінка',
                        lastText: 'Остання сторінка',
                        nextText: 'Наступна сторінка',
                        prependButtons: true,
                        prevText: 'Попередня сторінка',
                        refreshText: 'Оновити',
                        store: 'Vyplaty_store',
                        dock: 'bottom'
                    },
					{
							xtype: 'toolbar',
							dock: 'top',
							items: [
							{
								xtype: 'button',
								iconCls: 'save_columns', tooltip: 'Зберегти параметри колонок',
								handler : function(){
								getCount();
								}
							}
                            

                           
                        ]
                    }
                ]
            }
        ];
        me.callParent(arguments);
    }
});

	function dateFunction(val){ 
		//var ItemDate = Ext.DateTime.format(val, 'd/m/Y');
		//return ItemDate	;
		//2011-07-02 12:28:44
		//console.log(val)
		var dateArray = val.split("-");
		//new Date(dateArray[2], dateArray[1], dateArray[0]);
		var dateArray2 = dateArray[2].split(" ");
		dateArray[2] = dateArray2[0] 
		//console.log(dateArray[2]+"/"+dateArray[1]+"/"+dateArray[0]+" "+dateArray2[1])
		MyDate = dateArray[2]+"/"+dateArray[1]+"/"+dateArray[0]+" "+dateArray2[1];
		return MyDate;
	}

	
	function getCount(){
	var jsonObj = { };
	  var MyGrid = Ext.getCmp(GridName).getView();
	  var ColumnSizeArray=new Array(); 
	  var ColumnVisibleArray=new Array(); 
	  var columns = MyGrid.getGridColumns();
	  var columnsLength = MyGrid.getGridColumns().length;
	  var columnsState = MyGrid.getHeaderCt().getGridColumns();
	  for(var i = 0; i < columnsLength; i++){
			ColumnSizeArray[i]=MyGrid.getHeaderAtIndex(i).el.dom.firstChild.scrollWidth;
			jsonObj[ColumnSizeArray[i].id] = ColumnSizeArray[i].value;
			ColumnVisibleArray[i]=columnsState[i].hidden;
	  }	

		var JsonColumnSize = array1dToJson(ColumnSizeArray, 'data', 'size');
		var JsonColumnVisible = array1dToJson(ColumnVisibleArray, 'data', 'hidden');
  
		Ext.Ajax.request(
				{
					url: './php/SaveColumnSize.php',
					params: {
						GridName: GridName,
						JsonColumnSize: JsonColumnSize,
						JsonColumnVisible: JsonColumnVisible
						
					},
					success: function()
					{
					Ext.MessageBox.alert('Виконано', 'Стан колонок успішно збережений');
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
		
		/*function array2dToJson(a, p, nl) {
		  var i, j, s = '{"' + p + '":[';
		  nl = nl || '';
		  for (i = 0; i < a.length; ++i) {
			s += nl + array1dToJson(a[i]);
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += nl + ']}';
		  return s;
		}*/
		
		function array1dToJson(a, p, value) {
		  var i, s = '[';
		  for (i = 0; i < a.length; ++i) {
			if (typeof a[i] == 'string') {
			  s += '"' + a[i] + '"';
			}
			else { // assume number type
			  s += "{\""+value+"\": "+a[i]+"}";
			}
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += ']';
		  if (p) {
			return '{"' + p + '":' + s + '}';
		  }
		  return s;
		}
}

 ColumnSizeStore = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnSizeStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnSize.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'size'
		}
	],
	listeners: {
				load: function() {
					
					var StoreLength = ColumnSizeStore.data.length;
					for(var i = 0; i < StoreLength; i++){
					//ColumnSizes[i] = ColumnSizeStore.data.items[i].data.size;
					Ext.getCmp(GridName).columns[i].setWidth(ColumnSizeStore.data.items[i].data.size);
					};
				}
			}
});	

ColumnStateStore = Ext.create('Ext.data.JsonStore', {

	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnStateStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnState.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'hidden'
		}
	],
	listeners: {
				load: function() {
					var StoreLength1 = ColumnStateStore.data.length;
					for(var i = 0; i < StoreLength1; i++){
					//ColumnSizes[i] = ColumnStateStore.data.items[i].data.hidden;
					Ext.getCmp(GridName).columns[i].setVisible(!(ColumnStateStore.data.items[i].data.hidden));//працює на FF, але не на IE
					};
				}
			}
});

