/*
 * File: app/view/ui/edit_visitors.js
 * Date: Mon Sep 12 2011 16:32:25 GMT+0300 (FLE Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
 var winEventInfo
 var winVisitorInfo
Ext.Loader.setConfig({enabled: true});
Ext.grid.RowEditor.prototype.cancelBtnText = "Відмінити";
Ext.grid.RowEditor.prototype.saveBtnText = "Зберегти";
Ext.grid.RowEditor = new Ext.grid.RowEditor();
Ext.Loader.setPath('Ext.ux', '/ext-4.0.2a/examples/ux');
Ext.require([
    //'Ext.grid.*',
    //'Ext.data.*',
    'Ext.ux.grid.FiltersFeature',
    'Ext.toolbar.Paging'
]);

 var url = {
        local:  'grid-filter.json',  
        remote: 'grid-filter.php'
    };

    var encode = false;
    var local = false;
	
	 Ext.define('Product', {
    extend: 'Ext.data.Model',
    fields: [ 
			{ type: 'int', name: 'id' },
			{ type: 'int', name: 'event_id' },
			{ type: 'date', name: 'timestamp' },
			{ type: 'string',name: 'name1' },
			{ type: 'string',name: 'name2' },
			{ type: 'string',name: 'surname' },
			{ type: 'string',name: 'birthday' },
			{ type: 'string',name: 'idcard' },
			{ type: 'string',name: 'workplace' },
			{ type: 'string',name: 'email' },
			{ type: 'string',name: 'interests' },
			{ type: 'string',name: 'other' }
			]
});

	
var GridName = "Visitors" 
	
    var filters = {
        ftype: 'filters',
        encode: encode, 
        local: local,   

        filters: [
			
			{ type: 'int', dataIndex: 'id' },
			{ type: 'int', dataIndex: 'event_id' },
			{ type: 'date', dataIndex: 'timestamp' },
			{ type: 'string',dataIndex: 'name1' },
			{ type: 'string',dataIndex: 'name2' },
			{ type: 'string',dataIndex: 'surname' },
			{ type: 'string',dataIndex: 'birthday' },
			{ type: 'string',dataIndex: 'workplace' },
			{ type: 'string',dataIndex: 'email' },
			{ type: 'string',dataIndex: 'interests' },
			{ type: 'string',dataIndex: 'idcard' },
			{ type: 'string',dataIndex: 'other' }
        ]
    };

VisitorsAll = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	 pageSize: 20,
            autoSync: true,
            storeId: 'VisitorsAll',
            proxy: {
                type: 'ajax',
                url: './php/visitorsAll.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            fields: [
			{name: 'id' },
			{name: 'event_id' },
			{name: 'timestamp' },
			{name: 'name1' },
			{name: 'name2' },
			{name: 'surname' },
			{name: 'birthday' },
			{name: 'workplace' },
			{name: 'email' },
			{name: 'interests' },
			{name: 'idcard' },
			{name: 'other' }
            ]
    });

var editor = new Ext.grid.plugin.RowEditing({
	saveText: 'Зберегти'
});


Ext.define('Borsuko.view.ui.edit_visitors', {
    extend: 'Ext.panel.Panel',


    initComponent: function() {
        var me = this;
        me.items = [
            {
                xtype: 'form',
                autoRender: true,
                autoShow: true,
                frame: true,
                height: 750,
                id: 'tabs',
                itemId: 'tabs',
                maintainFlex: true,
                bodyPadding: '',
                animCollapse: false,
                collapseFirst: false,
                collapsed: false,
                collapsible: true,
                frameHeader: false,
                title: 'Відвідувачі',
                titleCollapse: true,
                pollForChanges: true,
                paramsAsHash: true,
                standardSubmit: true,
                trackResetOnLoad: true,
                items: [

                    {
                        xtype: 'gridpanel',
                        id: GridName,
						height: 500,
                        bodyBorder: true,
                        frameHeader: false,
                        //forceFit: true,
                        store: 'VisitorsAll',
						selModel: Ext.create('Ext.selection.RowModel', {
                            allowDeselect: true
                        }),

                        columnLines: true,
						plugins: [editor],
                        features: [filters],
                        		columns: [
                            /*{
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'State',
                                text: 'Стан книжки',
                                field: {
									 xtype: 'combobox',
									 editable: false,
									displayField: 'name',
									queryMode: 'local',
									store: 'StanObjektu',
									valueField: 'abbr'
                                    
                                },
									renderer: function(v, params, record) 	{ 
								if(record.data.State	 == '1') { 
								var stan = 'відкр.';
								var color = 'green';
								};
								if(record.data.State	 == '0') { 
								var stan = 'закр.';
								var color = 'gray'; var dekor =  'line-through';
								};
								return '<span style="color:' + color + '">' + stan + '</span>';
								}
                            },*/
                            {
                                xtype: 'gridcolumn',
								width: 50,
                                autoRender: true,
                                layout: {
                                    type: 'fit'
                                },
                                dataIndex: 'id',
                                text: 'Номер',
								filtrable:true,
								renderer: GreenGrtayColor
                            },
							{
                                xtype: 'gridcolumn',
								width: 50,
                                autoRender: true,
                                layout: {
                                    type: 'fit'
                                },
                                dataIndex: 'event_id',
                                text: 'Подія',		
								field: {
                                    xtype: 'textfield'
                                },
								filtrable:true,
								renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'idcard',
                                text: 'номер картки',
                                field: {
                                    xtype: 'textfield'
                                },
								renderer: GreenGrtayColor
                            },
							
							{
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'name1',
                                text: 'Ім\'я',
                                field: {
                                    xtype: 'textfield'
                                },
								renderer: GreenGrtayColor
                            },
							
							{
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'name2',
                                text: 'Прізвище',
                                field: {
                                    xtype: 'textfield'
                                },
								renderer: GreenGrtayColor
                            },
							
							{
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'surname',
                                text: 'По-батькові',
                                field: {
                                    xtype: 'textfield'
                                },
								renderer: GreenGrtayColor
                            },
							
							{
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'birthday',
                                text: 'Дата народження',
                                field: {
                                    xtype: 'datefield'
                                },
								renderer: GreenGrtayColor
                            },
							
							{
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'workplace',
                                text: 'Місце праці/навчання',
                                field: {
                                    xtype: 'textfield'
                                },
								renderer: GreenGrtayColor
                            },
							
							{
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'email',
                                text: 'Електронна пошта',
                                field: {
                                    xtype: 'textfield'
                                },
								renderer: GreenGrtayColor
                            },
							
							{
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'interests',
                                text: 'Фах/сфера інтересів',
                                field: {
                                    xtype: 'textfield'
                                },
								renderer: GreenGrtayColor
                            },
							
                            {
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'timestamp',
                                text: 'Час Візиту',
								renderer: GreenGrtayColor
                            },
                            
							{
                                xtype: 'gridcolumn',
								width: 100,
                                dataIndex: 'other',
                                text: 'Примітка',
                                field: {
                                    xtype: 'textfield'
                                },
								renderer: GreenGrtayColor
                            }
                          ],
                        viewConfig: {
                            width: 2000
                        },
						listeners: {
							selectionchange: function(model, records) {
								if (records[0]) {
									Ext.getCmp('del').setDisabled(false)
								}
							}
						},
						dockedItems: [
						{
							xtype: 'toolbar',
							id: 'toolbarTop',
							dock: 'top',
							items: [
									{
										xtype: 'button',
										id: 'del',
										disabled: true,
										text: 'Видалити',
										iconCls: 'del',
											handler : function(){
												Ext.Msg.confirm('Підтвердження', 'Дійсно хочете видалити відвідувача?',
													function(btn){
														if(btn == 'yes'){
														sendRemoveRequest();
														}
													}
												);
											}
									}
									/*{
										xtype: 'button',
										id: 'visitorInfo',
										disabled: true,
										text: 'Детальна інформація по відвідувачу',
										iconCls: 'visitorInfo',
											handler : function(){
											visitorInfoRequest();
										}
									},
									
									{
										xtype: 'button',
										id: 'eventInfo',
										disabled: true,
										text: 'Детальна інформація по події',
										iconCls: 'eventInfo',
											handler : function(){
											eventInfoRequest();
										}
									}*/
							]
						},
						
						{
							xtype: 'pagingtoolbar',
							pageSize: 20,
							id: 'pagingtoolbar',
							afterPageText: 'із {0}',
							beforePageText: 'Сторінка',
							displayInfo: true,
							displayMsg: 'Показано {0} - {1} із {2}',
							emptyMsg: 'Записи відсутні',
							firstText: 'Перша сторінка',
							lastText: 'Остання сторінка',
							nextText: 'Наступна сторінка',
							prependButtons: true,
							prevText: 'Попередня сторінка',
							refreshText: 'Оновити',
							store: 'VisitorsAll',
							dock: 'bottom'
						}
                        ]
						
						
                       
                        						
                    }
                ]
            }
        ];
        me.callParent(arguments);
    }
});

editor.on('afteredit', sendUpdateRequest); 

function sendUpdateRequest(){
								
	var cr = Ext.getCmp(GridName).getSelectionModel().selected;
	
	var id = cr.items[0].data.id;
	var event_id = cr.items[0].data.event_id;
	var idcard = cr.items[0].data.idcard;
	var name1 = cr.items[0].data.name1;
	var name2 = cr.items[0].data.name2;
	var surname = cr.items[0].data.surname;
	var birthday = cr.items[0].data.birthday;
	var workplace = cr.items[0].data.workplace;
	var email = cr.items[0].data.email;
	var interests = cr.items[0].data.interests;
	var other = cr.items[0].data.other;

	Ext.Ajax.request(
	{
		url: './php/updatevisitors.php',
		params: {
			
			event_id:event_id,
			id:id,
			idcard:idcard,
			name1 :name1,
			name2 :name2,
			surname :surname,
			birthday :birthday,
			workplace :workplace,
			email:email,
			interests :interests,
			other :other
		},
		success: function()
		{
		},
		failure: function(response)
		{
			Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
		}
	})

	var MyGrid = Ext.getCmp(GridName).getView();
	MyGrid.getStore().load();

}


function sendRemoveRequest(){
	var MyGrid = Ext.getCmp(GridName).getView();
	var cr = Ext.getCmp(GridName).getSelectionModel().selected;
		var id = cr.items[0].data.id;

		Ext.Ajax.request({
			url:'/php/delete_visitor.php',
			params: {id: id},
			success:function(responce, action) {
			MyGrid.getStore().load();
			},
			failure: function(form, action) {
			alert('Помилка при виделенні');
			}
		});
		
}


	function GreenGrtayColor (v, params, record) { 
		//var value = record.data.nomer;
		if(record.data.Stan_objektu	 == '1') { 
		var color = 'green';
		};
		if(record.data.Stan_objektu	 == '0') { 
		var color = 'gray'; 
		var dekor =  'line-through';
		};
		return '<span style="color:' + color + '">' + v + '</span>';
	}
	
	function getCount(){
	var jsonObj = { };
	  var MyGrid = Ext.getCmp(GridName).getView();
	  var ColumnSizeArray=new Array(); 
	  var ColumnVisibleArray=new Array(); 
	  var columns = MyGrid.getGridColumns();
	  var columnsLength = MyGrid.getGridColumns().length;
	  var columnsState = MyGrid.getHeaderCt().getGridColumns();
	  for(var i = 0; i < columnsLength; i++){
			ColumnSizeArray[i]=MyGrid.getHeaderAtIndex(i).el.dom.firstChild.scrollWidth;
			jsonObj[ColumnSizeArray[i].id] = ColumnSizeArray[i].value;
			ColumnVisibleArray[i]=columnsState[i].hidden;
	  }	

		var JsonColumnSize = array1dToJson(ColumnSizeArray, 'data', 'size');
		var JsonColumnVisible = array1dToJson(ColumnVisibleArray, 'data', 'hidden');
  
		Ext.Ajax.request(
				{
					url: './php/SaveColumnSize.php',
					params: {
						GridName: GridName,
						JsonColumnSize: JsonColumnSize,
						JsonColumnVisible: JsonColumnVisible
						
					},
					success: function()
					{
					Ext.MessageBox.alert('Виконано', 'Стан колонок успішно збережений');
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
		
		function array1dToJson(a, p, value) {
		  var i, s = '[';
		  for (i = 0; i < a.length; ++i) {
			if (typeof a[i] == 'string') {
			  s += '"' + a[i] + '"';
			}
			else { // assume number type
			  s += "{\""+value+"\": "+a[i]+"}";
			}
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += ']';
		  if (p) {
			return '{"' + p + '":' + s + '}';
		  }
		  return s;
		}
}

 ColumnSizeStore = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnSizeStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnSize.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'size'
		}
	],
	listeners: {
				load: function() {
					
					var StoreLength = ColumnSizeStore.data.length;
					for(var i = 0; i < StoreLength; i++){
					//ColumnSizes[i] = ColumnSizeStore.data.items[i].data.size;
					Ext.getCmp(GridName).columns[i].setWidth(ColumnSizeStore.data.items[i].data.size);
					};
				}
			}
});	

ColumnStateStore = Ext.create('Ext.data.JsonStore', {

	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnStateStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnState.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'hidden'
		}
	],
	listeners: {
				load: function() {
					var StoreLength1 = ColumnStateStore.data.length;
					for(var i = 0; i < StoreLength1; i++){
					//ColumnSizes[i] = ColumnStateStore.data.items[i].data.hidden;
					Ext.getCmp(GridName).columns[i].setVisible(!(ColumnStateStore.data.items[i].data.hidden));//працює на FF, але не на IE
					};
				}
			}
});


