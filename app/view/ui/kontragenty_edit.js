/*
 * File: app/view/ui/kontragenty_edit.js
 * Date: Mon Sep 05 2011 19:04:54 GMT+0300 (FLE Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
var GridName = "kontragenty_edit_grid";  
Ext.Loader.setConfig({enabled: true});
Ext.Loader.setPath('Ext.ux', '/ext-4.0.2a/examples/ux');
Ext.require([
    'Ext.grid.*',
    'Ext.data.*',
    'Ext.ux.grid.FiltersFeature',
    'Ext.toolbar.Paging'
]);
 
 Ext.define('Product', {
    extend: 'Ext.data.Model',
    fields: [
			{type: 'numeric', dataIndex: 'ID'}, 
			{type: 'string', dataIndex: 'PIB'}, 
			{type: 'string', dataIndex: 'Telefon'}, 
			{type: 'numeric', dataIndex: 'Balans'}, 
			{type: 'date', dataIndex: 'DateDodanyj'}, 
			{type: 'date', dataIndex: 'DateZvilnenyj'}, 
			{type: 'date', dataIndex: 'DateZminaBalansu'}, 
			{type: 'string', dataIndex: 'Prymitka'} 		
	]
});

var url = {
        local:  'grid-filter.json',  
        remote: 'grid-filter.php'
    };

    var encode = false;
    var local = false;
	
	
    var filters = {
        ftype: 'filters',
        encode: encode, 
        local: local,   

        filters: [
			{type: 'numeric', dataIndex: 'ID'}, 
			{type: 'string', dataIndex: 'PIB'}, 
			{type: 'string', dataIndex: 'Telefon'}, 
			{type: 'numeric', dataIndex: 'Balans'}, 
			{type: 'date', dataIndex: 'DateDodanyj'}, 
			{type: 'date', dataIndex: 'DateZvilnenyj'}, 
			{type: 'date', dataIndex: 'DateZminaBalansu'}, 
			{type: 'string', dataIndex: 'Prymitka'} 		
        ]
    };
 
 
  store_all_kontragenty1 = Ext.create('Ext.data.JsonStore', {

        storeId: 'store_all_kontragenty1',
		  autoLoad: true,
		  pageSize: 20,
            proxy: {
                type: 'ajax',
                url: './php/view_kontragent_all.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
              fields: [
                {
                    type: 'int',
					name: 'ID'
                },
                {
                    name: 'PIB'
                },
                {
                    name: 'Telefon'
                },
                {
                    name: 'Balans'
                },
                {
                    name: 'DateDodanyj'
                },
                {
                    name: 'DateZvilnenyj'
                },
                {
                    name: 'DateZminaBalansu'
                },
                {
                    name: 'robochyj_balans'
                },
                {
                    name: 'Sklad_balans'
                },
                {
                    name: 'Fondy_balans'
                },
                {
                    name: 'Prymitka'
                }
            ]
		
    });
	
    var editor = new Ext.grid.plugin.RowEditing({
        saveText: 'Зберегти',
		errorSummary: false,
		monitorValid: true
		
    });
	
Ext.define('Borsuko.view.ui.kontragenty_edit', {
    extend: 'Ext.panel.Panel',

    height: 600,
    layout: {
        type: 'fit'
    },
    animCollapse: false,
    collapseFirst: false,
    frameHeader: false,

    initComponent: function() {
        var me = this;
        me.items = [
            {
                xtype: 'gridpanel',
                frame: true,
                height: 600,
                id: GridName,
                focusOnToFront: false,
                animCollapse: false,
                collapseFirst: false,
                title: 'Редагування контрагентів',
                //forceFit: true,
                store: 'store_all_kontragenty1',
                columnLines: true,
				features: [filters],
                columns: [
                    {
                        xtype: 'gridcolumn',
                        autoRender: true,
                        width: 15,
                        layout: {
                            type: 'fit'
                        },
                        dataIndex: 'ID',
                        text: 'Номер'
                    },
                    {
                        xtype: 'gridcolumn',
                        width: 15,
                        dataIndex: 'PIB',
                        text: 'П.І.Б',
                        field: {
                            xtype: 'textfield'
                        }
                    },
                    {
                        xtype: 'gridcolumn',
                        width: 15,
                        dataIndex: 'Telefon',
                        text: 'Телефон',
                        field: {
                            xtype: 'textfield'
                        }
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'Balans',
                        text: 'Поточний Баланс'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'robochyj_balans',
                        text: 'Роб.Баланс'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'Sklad_balans',
                        text: 'Склад.Баланс'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'Fondy_balans',
                        text: 'Вир.Фонд.Баланс'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'DateDodanyj',
                        text: 'Доданий',
                        field: {
                            format : "d/m/Y",
							xtype: 'datefield'
                        }
                    },
                    {
                        xtype: 'gridcolumn',
                        width: 15,
                        dataIndex: 'DateZvilnenyj',
                        text: 'Звільнений',
                        field: {
							format : "d/m/Y",
                            xtype: 'datefield'
                        }
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'DateZminaBalansu',
                        text: 'Остання зміна балансу',
                        field: {
							format : "d/m/Y",
                            xtype: 'datefield'
                        }
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'Prymitka',
                        text: 'Примітка',
                        field: {
                            xtype: 'textfield'
                        }
                    }
                ],
                viewConfig: {
                    frame: true,
                    height: 600,
                    width: 2000
                },
                plugins: [editor],
                selModel: Ext.create('Ext.selection.RowModel', {
                    allowDeselect: true
                }),
                dockedItems: [
                    {
                        xtype: 'pagingtoolbar',
                        height: 25,
						pageSize: 20,
                        afterPageText: 'із {0}',
                        beforePageText: 'Сторінка',
                        displayInfo: true,
                        emptyMsg: 'Записи відсутні',
                        firstText: 'Перша сторінка',
                        lastText: 'Остання сторінка',
                        nextText: 'Наступна сторінка',
                        prependButtons: true,
                        prevText: 'Попередня сторінка',
                        refreshText: 'Оновити',
                        store: 'store_all_kontragenty1',
                        dock: 'bottom'
                    },
                    {
                        xtype: 'toolbar',
                        dock: 'top',
                        items: [
							{
							xtype: 'button',
							iconCls: 'save_columns', tooltip: 'Зберегти параметри колонок',
								handler : function(){
								getCount();
								}
							},
					
                            {
                                xtype: 'button',
                                id: 'show',
                                text: 'Додати контрагента',
								iconCls: 'add16',
								handler : function()
								{
								window.location = "kontragenty_add.php";
								}
                            },
                            {
                                xtype: 'button',
                                id: 'del',
                                text: 'Видалити контрагента',
								iconCls: 'kontr_rem',
								handler : function(){
								Ext.Msg.confirm('Підтвердження', 'Ви дійсно хочите видалити цього контрагента?',
								function(btn){
									if(btn == 'yes'){
									
									var MyStore = Ext.getCmp(GridName).getStore();
									var MyGrid = Ext.getCmp(GridName).getView();
				
											var StoreCount = MyStore.getCount();
											
											if(StoreCount<1){
												return;
											}
											var jsonData = new Array();       
											
											var selection = Ext.getCmp(GridName).getSelectionModel();
											var KontragentID = selection.selected.items[0].raw.ID;
								
											Ext.Ajax.request({
											url: './php/RemoveKontragent.php',
											params: {KontragentID: KontragentID},
											success: function()
												{
												MyGrid.getStore().load();
												},
											failure: function(response)
												{
												Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
												}
											});	
									}
								
								}
								);
							}
                            },
							{
                                xtype: 'button',
                                id: 'zvilnyty',
                                text: 'Звільнити контрагента',
								//iconCls: 'add16',
								handler : function(){
								Ext.Msg.confirm('Підтвердження', 'Ви дійсно хочите звільнити цього контрагента?',
								function(btn){
									if(btn == 'yes'){
									
									var MyStore = Ext.getCmp(GridName).getStore();
									var MyGrid = Ext.getCmp(GridName).getView();
				
											var StoreCount = MyStore.getCount();
											
											if(StoreCount<1){
												return;
											}
											var jsonData = new Array();       
											
											var selection = Ext.getCmp(GridName).getSelectionModel();
											var KontragentID = selection.selected.items[0].raw.ID;
											var DateZvilnenyj = new Date();
								
											Ext.Ajax.request({
											url: './php/Zvilnyty.php',
											params: {KontragentID: KontragentID,
													DateZvilnenyj: DateZvilnenyj},
											success: function()
												{
												MyGrid.getStore().load();
												},
											failure: function(response)
												{
												Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
												}
											});	
									}
								
								}
								);
							}
                            }
                        ]
                    }
                ]
            }
        ];
        me.callParent(arguments);
    }
});


 editor.on('afteredit', function () {

  var StoreCount = store_all_kontragenty1.getCount();
  var jsonData = new Array();                        
        for(i=0;i<StoreCount;i++) {
            record = store_all_kontragenty1.getAt(i);
            jsonData.push(record.data);
        }                        
        jsonData = Ext.encode(jsonData); 		
		
		Ext.Ajax.request({
		    url: './php/kontragenty_edit.php',
		  	params:{data:jsonData},
            success:function(responce, action) {
				var MyGrid = Ext.getCmp(GridName).getView();
				MyGrid.getStore().load();
			
            },
            failure: function(form, action) {
                alert('Oops the delete did not work out too well!');
            }
		});        
	
    });
	
		
	function getCount(){
	var jsonObj = { };
	  var MyGrid = Ext.getCmp(GridName).getView();
	  var ColumnSizeArray=new Array(); 
	  var ColumnVisibleArray=new Array(); 
	  var columns = MyGrid.getGridColumns();
	  var columnsLength = MyGrid.getGridColumns().length;
	  var columnsState = MyGrid.getHeaderCt().getGridColumns();
	  for(var i = 0; i < columnsLength; i++){
			ColumnSizeArray[i]=MyGrid.getHeaderAtIndex(i).el.dom.firstChild.scrollWidth;
			jsonObj[ColumnSizeArray[i].id] = ColumnSizeArray[i].value;
			ColumnVisibleArray[i]=columnsState[i].hidden;
	  }	

		var JsonColumnSize = array1dToJson(ColumnSizeArray, 'data', 'size');
		var JsonColumnVisible = array1dToJson(ColumnVisibleArray, 'data', 'hidden');
  
		Ext.Ajax.request(
				{
					url: './php/SaveColumnSize.php',
					params: {
						GridName: GridName,
						JsonColumnSize: JsonColumnSize,
						JsonColumnVisible: JsonColumnVisible
						
					},
					success: function()
					{
					Ext.MessageBox.alert('Виконано', 'Стан колонок успішно збережений');
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
		
		/*function array2dToJson(a, p, nl) {
		  var i, j, s = '{"' + p + '":[';
		  nl = nl || '';
		  for (i = 0; i < a.length; ++i) {
			s += nl + array1dToJson(a[i]);
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += nl + ']}';
		  return s;
		}*/
		
		function array1dToJson(a, p, value) {
		  var i, s = '[';
		  for (i = 0; i < a.length; ++i) {
			if (typeof a[i] == 'string') {
			  s += '"' + a[i] + '"';
			}
			else { // assume number type
			  s += "{\""+value+"\": "+a[i]+"}";
			}
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += ']';
		  if (p) {
			return '{"' + p + '":' + s + '}';
		  }
		  return s;
		}
}

 ColumnSizeStore = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnSizeStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnSize.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'size'
		}
	],
	listeners: {
				load: function() {
					
					var StoreLength = ColumnSizeStore.data.length;
					for(var i = 0; i < StoreLength; i++){
					//ColumnSizes[i] = ColumnSizeStore.data.items[i].data.size;
					Ext.getCmp(GridName).columns[i].setWidth(ColumnSizeStore.data.items[i].data.size);
					};
				}
			}
});	

ColumnStateStore = Ext.create('Ext.data.JsonStore', {

	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnStateStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnState.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'hidden'
		}
	],
	listeners: {
				load: function() {
					var StoreLength1 = ColumnStateStore.data.length;
					for(var i = 0; i < StoreLength1; i++){
					//ColumnSizes[i] = ColumnStateStore.data.items[i].data.hidden;
					Ext.getCmp(GridName).columns[i].setVisible(!(ColumnStateStore.data.items[i].data.hidden));//працює на FF, але не на IE
					};
				}
			}
});


	