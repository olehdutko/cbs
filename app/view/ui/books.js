
/*
 * File: app/view/ui/books.js
 * Date: Mon Sep 12 2011 16:32:25 GMT+0300 (FLE Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
Ext.Loader.setConfig({enabled: true});
Ext.grid.RowEditor.prototype.cancelBtnText = "&#1042;&#1110;&#1076;&#1084;&#1110;&#1085;&#1080;&#1090;&#1080;";
Ext.grid.RowEditor.prototype.saveBtnText = "&#1047;&#1073;&#1077;&#1088;&#1077;&#1075;&#1090;&#1080;";
Ext.grid.RowEditor = new Ext.grid.RowEditor();
Ext.Loader.setPath('Ext.ux', '/ext-4.0.2a/examples/ux');
Ext.require([
    'Ext.ux.grid.FiltersFeature',
    'Ext.toolbar.Paging'
]);
var winVydaty;
var winInfo;

var url = {
        local:  'grid-filter.json',
        remote: 'grid-filter.php'
    };

    var encode = false;
    var local = false;

var GridName = "Books"

    var filters = {
        ftype: 'filters',
        encode: encode,
        local: local,

        filters: [

            { type: 'int', dataIndex: 'id' },
            { type: 'int', dataIndex: 'statusid' },
            { type: 'string',dataIndex: 'book_name' },
            { type: 'string',dataIndex: 'status' },
            { type: 'string',dataIndex: 'book_outhors' },
            { type: 'int', dataIndex: 'pages' },
            { type: 'int', dataIndex: 'year' },
            { type: 'string',dataIndex: 'book_theme_name' },
            { type: 'string',dataIndex: 'publisher' },
            { type: 'date', dataIndex: 'date' },
            { type: 'string',dataIndex: 'other' },
            { type: 'int',dataIndex: 'books_history_id' },
            { type: 'string',dataIndex: 'ISBN' }



        ]
    };

    books_history_store = Ext.create('Ext.data.JsonStore', {
    autoLoad: false,
     pageSize: 20,
            autoSync: true,
            storeId: 'books_history_store',
            proxy: {
                type: 'ajax',
                url: './php/books_history_store.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            fields: [
            { name: 'id' },
            { name: 'timestamp' },
            { name: 'book_id' },
            { name: 'readerid' },
            { name: 'name1' },
            { name: 'name2' },
            { name: 'surname' },
            { name: 'idcard' },
            { name: 'operation' }
            ]
    });



Ext.define('book', {
    extend: 'Ext.data.Model',
    fields: [
            { name: 'id' },
            { name: 'statusid' },
            { name: 'book_name' },
            { name: 'status' },
            { name: 'format' },
            { name: 'book_outhors' },
            { name: 'pages' },
            { name: 'year' },
            { name: 'book_theme_name' },
            { name: 'publisher' },
            { name: 'date' },
            { name: 'other' },
            { name: 'books_history_id' },
            { name: 'ext_nomer' },
            { name: 'city' },
            { name: 'price' },
            { name: 'BBK' },
            { name: 'UDK' },
            { name: 'ISBN' }
    ]
});

booksAll = Ext.create('Ext.data.JsonStore', {
    autoLoad: true,
     pageSize: 20,
            autoSync: true,
            storeId: 'booksAll',
            proxy: {
                type: 'ajax',
                url: './php/booksNotDeleted.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            model: 'book'

    });

    booksZal = Ext.create('Ext.data.JsonStore', {
    autoLoad: true,
     pageSize: 20,
            autoSync: true,
            storeId: 'booksZal',
            proxy: {
                type: 'ajax',
                url: './php/booksZal.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
        model: 'book'
    });

    booksRuky = Ext.create('Ext.data.JsonStore', {
    autoLoad: true,
     pageSize: 20,
            autoSync: true,
            storeId: 'booksRuky',
            proxy: {
                type: 'ajax',
                url: './php/booksRuky.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            model: 'book'
    });

    booksFondy = Ext.create('Ext.data.JsonStore', {
    autoLoad: true,
     pageSize: 20,
            autoSync: true,
            storeId: 'booksFondy',
            proxy: {
                type: 'ajax',
                url: './php/booksFondy.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            model: 'book'
    });

    booksZagubleno = Ext.create('Ext.data.JsonStore', {
    autoLoad: true,
     pageSize: 20,
            autoSync: true,
            storeId: 'booksZagubleno',
            proxy: {
                type: 'ajax',
                url: './php/booksZagubleno.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            fields: [
            { name: 'id' },
            { name: 'statusid' },
            { name: 'book_name' },
            { name: 'status' },
            { name: 'format' },
            { name: 'book_outhors' },
            { name: 'pages' },
            { name: 'year' },
            { name: 'book_theme_name' },
            { name: 'publisher' },
            { name: 'date' },
            { name: 'other' },
            { name: 'books_history_id' },
            { name: 'ISBN' }
            ]
    });

    booksSpysano = Ext.create('Ext.data.JsonStore', {
    autoLoad: true,
     pageSize: 20,
            autoSync: true,
            storeId: 'booksSpysano',
            proxy: {
                type: 'ajax',
                url: './php/booksSpysano.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            model: 'book'
    });

    booksDeleted = Ext.create('Ext.data.JsonStore', {
    autoLoad: true,
     pageSize: 20,
            autoSync: true,
            storeId: 'booksDeleted',
            proxy: {
                type: 'ajax',
                url: './php/booksDeleted.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            model: 'book'
    });

    CurrentStore = 'booksAll';




var gridColumns = [
                            /*{
                                xtype: 'gridcolumn',
                                width: 150,
                                dataIndex: 'State',
                                text: '&#1057;&#1090;&#1072;&#1085; &#1082;&#1085;&#1080;&#1078;&#1082;&#1080;',
                                field: {
                                     xtype: 'combobox',
                                     editable: false,
                                    displayField: 'name',
                                    queryMode: 'local',
                                    store: 'StanObjektu',
                                    valueField: 'abbr'

                                },
                                    renderer: function(v, params, record)   {
                                if(record.data.State     == '1') {
                                var stan = '&#1074;&#1110;&#1076;&#1082;&#1088;.';
                                var color = 'green';
                                };
                                if(record.data.State     == '0') {
                                var stan = '&#1079;&#1072;&#1082;&#1088;.';
                                var color = 'gray'; var dekor =  'line-through';
                                };
                                return '<span style="color:' + color + '">' + stan + '</span>';
                                }
                            },*/
                            {
                                xtype: 'gridcolumn',
                                width: 50,
                                //width: 41,
                                autoRender: true,
                                layout: {
                                    type: 'fit'
                                },
                                dataIndex: 'id',

                                text: '&#1053;&#1086;&#1084;&#1077;&#1088;',
                                filtrable:true,
                                hidden:true,

                                renderer: GreenGrtayColor
                            },

                            {
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'ext_nomer',
                                text: '&#1042;&#1085;&#1091;&#1090;&#1088;&#1110;&#1096;&#1085;&#1110;&#1081; #',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },
                             {
                                xtype: 'gridcolumn',
                                width: 150,
                                //width: 41,
                                dataIndex: 'status',
                                text: '&#1057;&#1090;&#1072;&#1090;&#1091;&#1089;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },
                             {
                                xtype: 'gridcolumn',
                                width: 150,
                                //width: 41,
                                dataIndex: 'format',
                                text: '&#1092;&#1086;&#1088;&#1084;&#1072;&#1090;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 150,
                                //width: 41,
                                dataIndex: 'statusid',
                                text: 'statusid',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 150,
                                //width: 41,
                                dataIndex: 'book_name',
                                text: '&#1053;&#1072;&#1079;&#1074;&#1072; &#1082;&#1085;&#1080;&#1078;&#1082;&#1080;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 150,
                                //width: 41,
                                dataIndex: 'book_outhors',
                                text: '&#1040;&#1074;&#1090;&#1086;&#1088;&#1080;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 150,
                                dataIndex: 'pages',
                                text: '&#1050;&#1110;&#1083;&#1100;&#1082;&#1110;&#1089;&#1090;&#1100; &#1089;&#1090;&#1086;&#1088;&#1110;&#1085;&#1086;&#1082;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 150,
                                dataIndex: 'year',
                                text: '&#1056;&#1110;&#1082; &#1074;&#1080;&#1076;&#1072;&#1085;&#1085;&#1103;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'book_theme_name',
                                text: '&#1046;&#1072;&#1085;&#1088;',
                                field: {
                                    xtype: 'combobox',
                                    editable: false,
                                    displayField: 'book_theme_name',
                                    queryMode: 'local',
                                    store: 'book_theme_store',
                                    valueField: 'book_theme_name'

                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'publisher',
                                text: '&#1042;&#1080;&#1076;&#1072;&#1074;&#1077;&#1094;&#1100;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },{
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'city',
                                text: '&#1052;&#1110;&#1089;&#1090;&#1086; &#1074;&#1080;&#1076;&#1072;&#1085;&#1085;&#1103;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },{
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'price',
                                text: '&#1062;&#1110;&#1085;&#1072;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },{
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'BBK',
                                text: '&#1041;&#1041;&#1050;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },{
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'UDK',
                                text: '&#1059;&#1044;&#1050;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },   



                            {
                                xtype: 'gridcolumn',
                                width: 50,
                                dataIndex: 'ISBN',
                                text: 'ISBN',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'other',
                                text: '&#1055;&#1088;&#1080;&#1084;&#1110;&#1090;&#1082;&#1072;',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },

                            {
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'books_history_id',
                                hidden: true,
                                text: 'books_history_id',
                                field: {
                                    xtype: 'textfield'

                                },
                                renderer: GreenGrtayColor
                            },

                            {
                                xtype: 'datecolumn',
                                width: 100,
                                type: 'date',
                                format: 'd/m/Y',
                                dataIndex: 'date',
                                text: '&#1044;&#1072;&#1090;&#1072; &#1076;&#1086;&#1076;&#1072;&#1074;&#1072;&#1085;&#1085;&#1103;',
                                field: {
                                    format: 'd-m-Y',
                                    xtype: 'datefield'
                                },
                                renderer: GreenGrtayColor
                            }
                          ];


Ext.define('Borsuko.view.ui.books', {
    extend: 'Ext.panel.Panel',


    initComponent: function() {
        var me = this;
        me.items = [
            {
                xtype: 'form',
                autoRender: true,

                frame: true,
                height: 750,
                id: 'tabs',
                itemId: 'tabs',
                maintainFlex: true,
                bodyPadding: '',
                animCollapse: false,
                collapseFirst: false,
                collapsed: false,
                collapsible: true,
                frameHeader: false,
                title: '&#1050;&#1085;&#1080;&#1075;&#1080;',
                titleCollapse: true,
                pollForChanges: true,
                paramsAsHash: true,
                standardSubmit: true,
                trackResetOnLoad: true,
                items: [

                    {
                        xtype: 'gridpanel',
                        id: GridName,
                        height: 500,
                        bodyBorder: true,
                        frameHeader: false,
                        store: CurrentStore,
                        //selModel: Ext.create('Ext.selection.CheckboxModel', {
                        selModel: Ext.create('Ext.selection.RowModel', {
                            allowDeselect: false
                        }),

                        columnLines: true,
                        features: [filters],
                                columns: gridColumns,

                          listeners: {
                            selectionchange: function(model, records) {
                                if (records[0]) {
                                    var book_id = Ext.getCmp(GridName).getSelectionModel().selected.items[0].raw.id;
                                    bookInfoGrid.getStore().load({ params:{book_id: book_id} });
                                    Ext.getCmp('info').setDisabled(false)
                                    Ext.getCmp('vydaty').setDisabled(false)
                                }
                            }
                        },
                        viewConfig: {
                            width: 2000
                        },
                         dockedItems: [
                            {
                                xtype: 'toolbar',
                                id: 'toolbarTop',
                                dock: 'top',
                                items: [
                                {
                                xtype: 'combobox',
                                id: 'books_tatus_toolbar',
                                name: 'books_tatus_toolbar',
                                emptyText: 'Status',
                                editable: false,
                                displayField: 'status',
                                queryMode: 'local',
                                store: 'statuses_store',
                                valueField: 'id',
                                listeners: {
                                select: {
                                    fn:function(combo, value)
                                    {
                                    switch (combo.value)
                                    {

                                case 0:
                                CurrentStore =  booksAll;
                                    Ext.getCmp(GridName).reconfigure(CurrentStore, gridColumns);
                                    Ext.getCmp("pagingtoolbar").bind("booksAll");
                                    Ext.getCmp("pagingtoolbar").doRefresh();
                                    Ext.getCmp('vydaty').setDisabled(false)
                                    Ext.getCmp('info').setDisabled(false)
                                    break;
                                case 1:
                                CurrentStore = booksFondy;
                                    Ext.getCmp(GridName).reconfigure(CurrentStore, gridColumns);

                                    Ext.getCmp("pagingtoolbar").bind("booksFondy");
                                    Ext.getCmp("pagingtoolbar").doRefresh();
                                    Ext.getCmp('vydaty').setDisabled(false)
                                    Ext.getCmp('info').setDisabled(false)
                                    Ext.getCmp('returnBook').setDisabled(true);
                                    break;
                                case 2:
                                CurrentStore = booksZagubleno;
                                    Ext.getCmp(GridName).reconfigure(CurrentStore, gridColumns);
                                    Ext.getCmp("pagingtoolbar").bind("booksZagubleno");
                                    Ext.getCmp("pagingtoolbar").doRefresh();
                                    Ext.getCmp('vydaty').setDisabled(true)
                                    Ext.getCmp('info').setDisabled(true)
                                    Ext.getCmp('returnBook').setDisabled(true);
                                    break;
                                case 3:
                                CurrentStore = booksRuky;
                                    Ext.getCmp(GridName).reconfigure(CurrentStore,gridColumns);                                
                                    Ext.getCmp("pagingtoolbar").bind("booksRuky");
                                    Ext.getCmp("pagingtoolbar").doRefresh();
                                    Ext.getCmp('vydaty').setDisabled(false);
                                    Ext.getCmp('info').setDisabled(false);
                                    Ext.getCmp('returnBook').setDisabled(false);
                                    break;
                                case 5:
                                CurrentStore = booksZal;
                                    Ext.getCmp(GridName).reconfigure(CurrentStore, gridColumns);
                                    Ext.getCmp("pagingtoolbar").bind("booksZal");
                                    Ext.getCmp("pagingtoolbar").doRefresh();
                                    Ext.getCmp('vydaty').setDisabled(false)
                                    Ext.getCmp('info').setDisabled(false)
                                    Ext.getCmp('returnBook').setDisabled(false);
                                    break;
                                case 7:
                                CurrentStore = booksDeleted;
                                    Ext.getCmp(GridName).reconfigure(CurrentStore, gridColumns);
                                    Ext.getCmp("pagingtoolbar").bind("booksZal");
                                    Ext.getCmp("pagingtoolbar").doRefresh();
                                    Ext.getCmp('vydaty').setDisabled(false)
                                    Ext.getCmp('info').setDisabled(false)
                                    Ext.getCmp('returnBook').setDisabled(true);
                                    break;
                                case 8:
                                CurrentStore = booksSpysano;
                                    Ext.getCmp(GridName).reconfigure(CurrentStore, gridColumns);
                                    Ext.getCmp("pagingtoolbar").bind("booksSpysano");
                                    Ext.getCmp("pagingtoolbar").doRefresh();
                                    Ext.getCmp('vydaty').setDisabled(false)
                                    Ext.getCmp('info').setDisabled(false)
                                    Ext.getCmp('returnBook').setDisabled(true);
                                    break;


                                    };
                                    }
                                }
                            }
                            },
                                {
                                    xtype: 'button',
                                    id: 'vydaty',
                                    disabled: true,
                                    text: '&#1042;&#1080;&#1076;&#1072;&#1090;&#1080;',
                                    iconCls: 'add',
                                        handler : function(){
                                        vydaty();
                                    }
                                },
                {
                                    xtype: 'button',
                                    id: 'returnBook',
                                    disabled: true,
                                    text: '&#1055;&#1086;&#1074;&#1077;&#1088;&#1085;&#1091;&#1090;&#1080; &#1091; &#1092;&#1086;&#1085;&#1076;&#1080;',
                                    iconCls: 'return',
                                        handler : function(){
                                        returnBook();
                                    }
                                },
                                {
                                    xtype: 'button',
                                    id: 'info',
                                    disabled: true,
                                    text: '&#1030;&#1085;&#1092;&#1086;&#1088;&#1084;&#1072;&#1094;&#1110;&#1103; &#1087;&#1086; &#1082;&#1085;&#1080;&#1079;&#1110;',
                                    iconCls: 'info',
                                        handler : function(){
                                        infoRequest();
                                    }
                                }
                                ]
                            },

                            {
                                xtype: 'pagingtoolbar',
                                pageSize: 20,
                                id: 'pagingtoolbar',
                                afterPageText: '&#1110;&#1079; {0}',
                                beforePageText: '&#1057;&#1090;&#1086;&#1088;&#1110;&#1085;&#1082;&#1072;',
                                displayInfo: true,
                                displayMsg: '&#1055;&#1086;&#1082;&#1072;&#1079;&#1072;&#1085;&#1086; {0} - {1} &#1110;&#1079; {2}',
                                emptyMsg: '&#1047;&#1072;&#1087;&#1080;&#1089;&#1080; &#1074;&#1110;&#1076;&#1089;&#1091;&#1090;&#1085;&#1110;',
                                firstText: '&#1055;&#1077;&#1088;&#1096;&#1072; &#1089;&#1090;&#1086;&#1088;&#1110;&#1085;&#1082;&#1072;',
                                lastText: '&#1054;&#1089;&#1090;&#1072;&#1085;&#1085;&#1103; &#1089;&#1090;&#1086;&#1088;&#1110;&#1085;&#1082;&#1072;',
                                nextText: '&#1053;&#1072;&#1089;&#1090;&#1091;&#1087;&#1085;&#1072; &#1089;&#1090;&#1086;&#1088;&#1110;&#1085;&#1082;&#1072;',
                                prependButtons: true,
                                prevText: '&#1055;&#1086;&#1087;&#1077;&#1088;&#1077;&#1076;&#1085;&#1103; &#1089;&#1090;&#1086;&#1088;&#1110;&#1085;&#1082;&#1072;',
                                refreshText: '&#1054;&#1085;&#1086;&#1074;&#1080;&#1090;&#1080;',
                                store: CurrentStore,
                                dock: 'bottom'
                            }
                        ]




                    }
                ]
            }
        ];
        me.callParent(arguments);
    }
});

























var bookInfoGrid = Ext.create('Ext.grid.Panel', {
    store: 'books_history_store',
    id: 'bookInfoGrid',
    columns: [
        { text: 'ID &#1082;&#1085;&#1080;&#1075;&#1080;', dataIndex: 'book_id' },
        { text: '&#8470; &#1086;&#1087;&#1077;&#1088;&#1072;&#1094;&#1110;&#1111;', dataIndex: 'id' },
        { text: '&#1054;&#1087;&#1077;&#1088;&#1072;&#1094;&#1110;&#1103;', dataIndex: 'operation' },
        { text: '&#1063;&#1072;&#1089;', width: 150, dataIndex: 'timestamp' },
        { text: 'ID &#1063;&#1080;&#1090;&#1072;&#1095;&#1072;', dataIndex: 'readerid' },
        { text: '&#1030;&#1084;\'&#1103; &#1063;&#1080;&#1090;&#1072;&#1095;&#1072;', dataIndex: 'name1' },
        { text: '&#1055;&#1088;&#1110;&#1079;&#1074;&#1080;&#1097;&#1077; &#1063;&#1080;&#1090;&#1072;&#1095;&#1072;',  dataIndex: 'name2' },
        { text: '&#1055;&#1086;-&#1073;&#1072;&#1090;&#1100;&#1082;&#1086;&#1074;&#1110;', dataIndex: 'surname' },
        { text: '&#1053;&#1086;&#1084;&#1077;&#1088; &#1044;&#1086;&#1082;&#1091;&#1084;&#1077;&#1085;&#1090;&#1072;', dataIndex: 'idcard' }


    ]
});



function vydaty (v, params, record) {
    var cr = Ext.getCmp(GridName).getSelectionModel().selected;
    //var status = Ext.getCmp(GridName).getSelectionModel().selected.items[0].raw.status;
    var statusid = Ext.getCmp(GridName).getSelectionModel().selected.items[0].raw.statusid;
    if(statusid == 2 || statusid == 3 || statusid == 5 || statusid == 7) {
        Ext.MessageBox.alert('&#1055;&#1086;&#1084;&#1080;&#1083;&#1082;&#1072;!', '&#1062;&#1103; &#1082;&#1085;&#1080;&#1075;&#1072; &#1074;&#1110;&#1076;&#1089;&#1091;&#1090;&#1085;&#1103;!');
    }
    else
    {
        showVydatyDialogForm();
    }
}

function infoRequest (v, params, record) {
    var cr = Ext.getCmp(GridName).getSelectionModel().selected;
    var id = Ext.getCmp(GridName).getSelectionModel().selected.items[0].raw.id;
    showInfoDialogForm(id);

}
    function GreenGrtayColor (v, params, record) {
            if(record.data.statusid == '3') {
            var dekor =  'none';
            var color = 'green';
        };

        if(record.data.statusid  == '5') {
            var color = 'blue';
            var dekor =  'none';
        };

        if(record.data.statusid  == '2') {
            var color = 'black';
            var dekor =  'line-through';
        };

        if(record.data.statusid  == '7') {
            var color = 'gray';
            var dekor =  'line-through';
        };


        return '<span style="color:' + color + ';text-decoration:' + dekor + '">' + v + '</span>';
    }

var userid = new Ext.form.TextField({
    allowBlank : false,
    //format : "d/m/Y",
    fieldLabel:'&#8470; &#1050;&#1074;&#1080;&#1090;&#1082;&#1072;',
    name:'userid',
    anchor:'100%',
    emptyText:'&#1053;&#1086;&#1084;&#1077;&#1088; &#1050;&#1074;&#1080;&#1090;&#1082;&#1072;',
    id:"userid"
});







function showVydatyDialogForm() {
        if (!winVydaty) {
            var form = Ext.widget('form', {
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                border: false,
                id: 'form',
                bodyPadding: 10,

                fieldDefaults: {
                    labelAlign: 'top',
                    labelWidth: 100,
                    labelStyle: 'font-weight:bold'
                },
                defaults: {
                    margins: '0 0 10 0'
                },

                items: [userid],

                buttons: [{
                    text: '&#1042;&#1110;&#1076;&#1084;&#1110;&#1085;&#1080;&#1090;&#1080;',
                    handler: function() {
                        form.getForm().reset();
                        winVydaty.hide();
                    }
                },
                {
                    text: '&#1042;&#1080;&#1076;&#1072;&#1090;&#1080; &#1082;&#1085;&#1080;&#1075;&#1091; &#1085;&#1072; &#1088;&#1091;&#1082;&#1080;',
                    handler: function() {
                        if (this.up('form').getForm().isValid()) {
                            idcard = Ext.getCmp("userid").getValue();
                            var bookid = Ext.getCmp(GridName).getSelectionModel().selected.items[0].raw.id;
                            if (checker(idcard) > 0) {
                                naruky(idcard, bookid);
                                form.getForm().reset();
                                winVydaty.hide();
                                Ext.MessageBox.alert('&#1043;&#1086;&#1090;&#1086;&#1074;&#1086;!', '&#1050;&#1085;&#1080;&#1075;&#1072; &#1074;&#1080;&#1076;&#1072;&#1085;&#1072; &#1085;&#1072; &#1088;&#1091;&#1082;&#1080;!');
                            }
                            else{
                                unregisteredReader(idcard);
                            }
                        }
                    }
                },
                {
                    text: '&#1042;&#1080;&#1076;&#1072;&#1090;&#1080; &#1082;&#1085;&#1080;&#1075;&#1091; &#1074; &#1079;&#1072;&#1083;',
                    handler: function() {
                        if (this.up('form').getForm().isValid()) {
                            idcard = Ext.getCmp("userid").getValue();
                            var bookid = Ext.getCmp(GridName).getSelectionModel().selected.items[0].raw.id;
                            if (checker(idcard) > 0) {
                                vzal(idcard, bookid);
                                form.getForm().reset();
                                winVydaty.hide();
                                Ext.MessageBox.alert('&#1043;&#1086;&#1090;&#1086;&#1074;&#1086;!', '&#1050;&#1085;&#1080;&#1075;&#1072; &#1074;&#1080;&#1076;&#1072;&#1085;&#1072; &#1074; &#1095;&#1080;&#1090;&#1072;&#1094;&#1100;&#1082;&#1080;&#1081; &#1079;&#1072;&#1083;!');
                            }
                            else{
                                unregisteredReader(idcard);
                            }
                        }
                    }
                }
                ]
            });

            winVydaty = Ext.widget('window', {
                title: '&#1042;&#1080;&#1076;&#1072;&#1095;&#1072; &#1082;&#1085;&#1080;&#1075;&#1080;',
                closeAction: 'hide',
                id: 'winVydaty',
                width: 400,
                height: 400,
                minHeight: 400,
                layout: 'fit',
                resizable: true,
                modal: true,
                items: form
            });
        }
        winVydaty.show();
    }

    function showInfoDialogForm() {
        if (!winInfo) {
            var formInfo = Ext.widget('form', {
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                border: false,
                id: 'formInfo',
                bodyPadding: 10,

                fieldDefaults: {
                    labelAlign: 'top',
                    labelWidth: 100,
                    labelStyle: 'font-weight:bold'
                },
                defaults: {
                    margins: '0 0 10 0'
                },

                items: [bookInfoGrid],

                buttons: [
                {
                    text: '&#1054;&#1050;',
                    handler: function() {
                        formInfo.getForm().reset();
                        winInfo.hide();
                    }
                }
                ]
            });

            winInfo = Ext.widget('window', {
                title: '&#1030;&#1089;&#1090;&#1086;&#1088;&#1080;&#1095;&#1085;&#1110; &#1110;&#1085;&#1092;&#1086;&#1088;&#1084;&#1072;&#1094;&#1110;&#1103; &#1087;&#1086; &#1082;&#1085;&#1080;&#1079;&#1110;',
                closeAction: 'hide',
                id:'winInfo',
                width: 1000,
                height: 600,
                minHeight: 600,
                layout: 'fit',
                resizable: true,
                modal: true,
                items: formInfo
            });
        }
        winInfo.show();
    }































function checker(stridcard) {
    var resp;
    Ext.Ajax.request(
    {
        url: './php/check_visitor.php',
        async   : false,
        params: {
                idcard: stridcard
        },
        callback: function(options, success, response) {
            resp = JSON.parse(response.responseText).total;
        },
        success: function()
        {

        },
        failure: function(response)
        {
            Ext.MessageBox.alert('&#1055;&#1086;&#1084;&#1080;&#1083;&#1082;&#1072;', '&#1053;&#1077;&#1084;&#1086;&#1078;&#1083;&#1080;&#1074;&#1086; &#1076;&#1086;&#1089;&#1090;&#1091;&#1087;&#1080;&#1090;&#1080;&#1089;&#1103; &#1076;&#1086; &#1073;&#1072;&#1079;&#1080; &#1076;&#1072;&#1085;&#1080;&#1093;');
        }
    })

    return resp;

}
function naruky(stridcard, bookid) {

    //var id = Ext.getCmp(GridName).getSelectionModel().selected.items[0].raw.id;
    Ext.Ajax.request({
       url:'./php/naruky.php',
        params: {
            userid:stridcard,
            id: bookid
            },
        success:function(responce, action) {
            var MyGrid = Ext.getCmp(GridName).getView();
            MyGrid.getStore().load();
        },
        failure: function(form, action) {
            Ext.MessageBox.alert('&#1055;&#1086;&#1084;&#1080;&#1083;&#1082;&#1072;!', '&#1053;&#1077; &#1084;&#1086;&#1078;&#1091; &#1076;&#1086;&#1089;&#1090;&#1091;&#1087;&#1080;&#1090;&#1080;&#1089;&#1103; &#1076;&#1086; &#1073;&#1072;&#1079;&#1080; &#1076;&#1072;&#1085;&#1085;&#1080;&#1093;!');
        }
    });
}
function vzal(stridcard, bookid) {

    Ext.Ajax.request({
    url:'./php/vzal.php',
    params: {
        userid:stridcard,
        id: bookid
        },
    success:function(responce, action) {
        var MyGrid = Ext.getCmp(GridName).getView();
        MyGrid.getStore().load();
    },
    failure: function(form, action) {
        Ext.MessageBox.alert('&#1055;&#1086;&#1084;&#1080;&#1083;&#1082;&#1072;!', '&#1053;&#1077; &#1084;&#1086;&#1078;&#1091; &#1076;&#1086;&#1089;&#1090;&#1091;&#1087;&#1080;&#1090;&#1080;&#1089;&#1103; &#1076;&#1086; &#1073;&#1072;&#1079;&#1080; &#1076;&#1072;&#1085;&#1085;&#1080;&#1093;!');
    }
    });

}


function returnBook(){

//&#1087;&#1077;&#1088;&#1077;&#1074;&#1110;&#1088;&#1080;&#1090;&#1080; &#1095;&#1080; &#1074;&#1080;&#1073;&#1088;&#1072;&#1085;&#1072; &#1082;&#1085;&#1080;&#1075;&#1072;
//&#1087;&#1077;&#1088;&#1077;&#1074;&#1110;&#1088;&#1080;&#1090;&#1080; &#1095;&#1080; &#1090;&#1072;&#1082;&#1091; &#1082;&#1085;&#1080;&#1075;&#1091; &#1084;&#1086;&#1078;&#1085;&#1072; &#1074;&#1080;&#1076;&#1072;&#1074;&#1072;&#1090;&#1080; (&#1089;&#1090;&#1072;&#1090;&#1091;&#1089;)

}

function unregisteredReader(idcard){
    Ext.Msg.confirm('&#1085;&#1077;&#1079;&#1072;&#1088;&#1077;&#1108;&#1089;&#1090;&#1088;&#1086;&#1074;&#1072;&#1085;&#1080;&#1081; &#1095;&#1080;&#1090;&#1072;&#1095;', '&#1063;&#1080;&#1090;&#1072;&#1095;&#1072; &#1079; &#1085;&#1086;&#1084;&#1077;&#1088;&#1086;&#1084; &#1095;&#1080;&#1090;&#1072;&#1094;&#1100;&#1082;&#1086;&#1075;&#1086; &#1082;&#1074;&#1080;&#1090;&#1082;&#1072; "'+idcard+'" &#1074; &#1073;&#1072;&#1079;&#1110; &#1085;&#1077; &#1079;&#1085;&#1072;&#1081;&#1076;&#1077;&#1085;&#1086;. &#1047;&#1072;&#1088;&#1077;&#1108;&#1089;&#1090;&#1088;&#1091;&#1074;&#1072;&#1090;&#1080; &#1085;&#1086;&#1074;&#1086;&#1075;&#1086; &#1082;&#1086;&#1088;&#1080;&#1089;&#1090;&#1091;&#1074;&#1072;&#1095;&#1072;?', function (btn, text) {
        if (btn == 'yes') {
            strUrl = "/add_reader.php?readerid="+idcard;
            window.location = strUrl;
        }
    });
}
