/*
 * File: app/view/ui/edit_events.js
 * Date: Mon Sep 12 2011 16:32:25 GMT+0300 (FLE Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
Ext.Loader.setConfig({enabled: true});
Ext.grid.RowEditor.prototype.cancelBtnText = "Відмінити";
Ext.grid.RowEditor.prototype.saveBtnText = "Зберегти";
Ext.grid.RowEditor = new Ext.grid.RowEditor();
Ext.Loader.setPath('Ext.ux', '/ext-4.0.2a/examples/ux');
Ext.require([
    //'Ext.grid.*',
    //'Ext.data.*',
    'Ext.ux.grid.FiltersFeature',
    'Ext.toolbar.Paging'
]);
var winVydaty;
var winInfo;
var GridName = "Events" 


 var editor = new Ext.grid.plugin.RowEditing({
        saveText: 'Зберегти'
});


var comboValues = Ext.create('Ext.data.Store', {
	id:'comboValues',
	fields: ['event_status', 'event_status_id'],
	data : [ {"event_status":"Нова", "event_status_id":"1"}, {"event_status":"Архівна", "event_status_id":"2"} ]
});


	
var url = {
        local:  'grid-filter.json',  
        remote: 'grid-filter.php'
    };

    var encode = false;
    var local = false;
	
	Ext.define('Product', {
	extend: 'Ext.data.Model',
	fields: [ 
		{ type: 'int', name: 'event_id' },
		{ type: 'int', name: 'event_status_id' },
		{ type: 'string',name: 'event_status' },
		{ type: 'string',name: 'event_name' },
		{ type: 'string', name: 'sponsor' },
		{ type: 'date',name: 'date' },
		{ type: 'string',name: 'notes' }
		]
	});

    var filters = {
        ftype: 'filters',
        encode: encode, 
        local: local,   

        filters: [
			
			{ type: 'int', dataIndex: 'event_id' },
			{ type: 'int', dataIndex: 'event_status_id' },
			{ type: 'string', dataIndex: 'event_status' },
			{ type: 'string',dataIndex: 'event_name' },
			{ type: 'string',dataIndex: 'sponsor' },
			{ type: 'date', dataIndex: 'date' },
			{ type: 'string',dataIndex: 'notes' }
        ]
    };

	
	
	eventsAll = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	pageSize: 20,
            autoSync: true,
            storeId: 'eventsAll',
            proxy: {
                type: 'ajax',
                url: './php/eventsAll.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            fields: [
			{ name: 'event_id' },
			{ name: 'event_status_id' },
			{ name: 'event_status' },
			{ name: 'event_name' },
			{ name: 'sponsor' },
			{ name: 'date' },
			{ name: 'notes' }
            ]
    });
	
	archieved_events = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	pageSize: 20,
            autoSync: true,
            storeId: 'archieved_events',
            proxy: {
                type: 'ajax',
                url: './php/archieved_events.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            fields: [
			{ name: 'event_id' },
			{ name: 'event_status_id' },
			{ name: 'event_status' },
			{ name: 'event_name' },
			{ name: 'sponsor' },
			{ name: 'date' },
			{ name: 'notes' }
            ]
    });
	
	new_events = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	pageSize: 20,
            autoSync: true,
            storeId: 'new_events',
            proxy: {
                type: 'ajax',
                url: './php/new_events.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            fields: [
			{ name: 'event_id' },
			{ name: 'event_status_id' },
			{ name: 'event_status' },
			{ name: 'event_name' },
			{ name: 'sponsor' },
			{ name: 'date' },
			{ name: 'notes' }
            ]
    });
	
CurrentStore = 'eventsAll';

Ext.define('Borsuko.view.ui.edit_events', {
    extend: 'Ext.panel.Panel',


    initComponent: function() {
        var me = this;
        me.items = [
            {
                xtype: 'form',
                autoRender: true,
                autoShow: true,
                frame: true,
                height: 750,
                id: 'tabs',
                itemId: 'tabs',
                maintainFlex: true,
                bodyPadding: '',
                animCollapse: false,
                collapseFirst: false,
                collapsed: false,
                collapsible: true,
                frameHeader: false,
                title: 'Книжки',
                titleCollapse: true,
                pollForChanges: true,
                paramsAsHash: true,
                standardSubmit: true,
                trackResetOnLoad: true,
                items: [

                    {
                        xtype: 'gridpanel',
                        id: GridName,
						height: 500,
                        bodyBorder: true,
                        frameHeader: false,
                        store: CurrentStore,
						selModel: Ext.create('Ext.selection.RowModel', {
                            allowDeselect: true
                        }),

                        columnLines: true,
                        features: [filters],
						plugins: [editor],
                        		columns: [

                            {
                                xtype: 'gridcolumn',
								width: 50,
								//width: 41,
                                autoRender: true,
                                layout: {
                                    type: 'fit'
                                },
                                dataIndex: 'event_id',
                                text: 'Номер',
								filtrable:true,
								renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
								width: 150,
								//width: 41,
                                autoRender: true,
                                layout: {
                                    type: 'fit'
                                },
									field:{
									xtype: 'combobox',
									id: 'statuses',
									name: 'statuses',
									editable: false,
									displayField: 'event_status',
									queryMode: 'local',
									valueField: 'event_status',
									store:'comboValues',
									listeners: {
										select: {
											fn:function(combo, value) 
											{
												//Ext.getCmp("event_status_id").setValue(combo.value);
											}
										}
									}
								},
                                dataIndex: 'event_status',
                                text: 'Статус',
								filtrable:true,
								renderer: GreenGrtayColor
                            },
					
							{
                                xtype: 'gridcolumn',
								width: 300,
								//width: 41,
                                dataIndex: 'event_name',
                                text: 'Назва події',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
								renderer: GreenGrtayColor
                            },
							{
                                xtype: 'gridcolumn',
								width: 300,
								//width: 41,
                                dataIndex: 'sponsor',
                                text: 'Оргінізатор події',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
								renderer: GreenGrtayColor
                            },
                           
							{
                                xtype: 'gridcolumn',
								width: 300,
                                dataIndex: 'notes',
                                text: 'Примітка',
                                field: {
                                    xtype: 'textfield'
                                },
								renderer: GreenGrtayColor
                            },
							
							{
                                xtype: 'gridcolumn',
								width: 200,
                                dataIndex: 'date',
                                text: 'Час та дата події',
                                field: {
                                    xtype: 'datefield',
									format : 'd/m/Y H:i'
                                },
								renderer: GreenGrtayColor
                            }
							                           
                          ],
					  
					  
						listeners: {
							selectionchange: function(model, records) {
								if (records[0]) {
									Ext.getCmp('archieve').setDisabled(false)
									Ext.getCmp('del').setDisabled(false)
								}
							}
						},
                        viewConfig: {
                            width: 2000
                        },
						 dockedItems: [
                            {
                                xtype: 'toolbar',
								id: 'toolbarTop',
                                dock: 'top',
                                items: [
								{
                                xtype: 'combobox',
                                id: 'books_tatus_toolbar',
                                name: 'books_tatus_toolbar',
                                emptyText: 'Статус',
								editable: false,
                                displayField: 'event_status',
								fieldLabel: 'Статус події',
                                queryMode: 'local',
                                store: 'events_statuses',
                                valueField: 'event_status_id',
								listeners: {
								select: {
									fn:function(combo, value) 
									{
										switch (combo.value)
									{
									
								case "0":
								CurrentStore = eventsAll;
									Ext.getCmp(GridName).view.store = CurrentStore;
									Ext.getCmp(GridName).view.refresh();
									Ext.getCmp("pagingtoolbar").bind("eventsAll");
									Ext.getCmp("pagingtoolbar").doRefresh();
									//Ext.getCmp('vydaty').setDisabled(false)
									
									break;
								case "1":
								CurrentStore = new_events;
									Ext.getCmp(GridName).view.store = CurrentStore;
									Ext.getCmp(GridName).view.refresh();
									Ext.getCmp("pagingtoolbar").bind("new_events");
									Ext.getCmp("pagingtoolbar").doRefresh();
									//Ext.getCmp('vydaty').setDisabled(true)
									break;
								case "2":
								CurrentStore = archieved_events;
									Ext.getCmp(GridName).view.store = CurrentStore;
									Ext.getCmp(GridName).view.refresh();
									Ext.getCmp("pagingtoolbar").bind("archieved_events");
									Ext.getCmp("pagingtoolbar").doRefresh();
									//Ext.getCmp('vydaty').setDisabled(true)
									break;
									};
									}
								}
								}
                            },
							{
							xtype: 'button',
							id: 'del',
							disabled: true,
							text: 'Видалити',
							iconCls: 'remove',
								handler : function(){
								Ext.Msg.confirm('Підтвердження', 'Дійсно хочете видалити подію?',
								function(btn){
									if(btn == 'yes'){
									sendRemoveRequest();
									}
								}
								);
								}
							},
							{
								xtype: 'button',
								id: 'archieve',
								disabled: true,
								text: 'Архівувати',
								iconCls: 'remove',
								handler : function(){
									Ext.Msg.confirm('Підтвердження', 'Дійсно хочете архівувати подію?',
									function(btn){
										if(btn == 'yes'){
											archieve();
										}
									}
									);
								}
							},
							]
                            },
							
							{
                                xtype: 'pagingtoolbar',
								pageSize: 20,
								id: 'pagingtoolbar',
                                afterPageText: 'із {0}',
                                beforePageText: 'Сторінка',
                                displayInfo: true,
                                displayMsg: 'Показано {0} - {1} із {2}',
                                emptyMsg: 'Записи відсутні',
                                firstText: 'Перша сторінка',
                                lastText: 'Остання сторінка',
                                nextText: 'Наступна сторінка',
                                prependButtons: true,
                                prevText: 'Попередня сторінка',
                                refreshText: 'Оновити',
								store: CurrentStore,
                                dock: 'bottom'
                            }
                        ]
						
						
                       
                        						
                    }
                ]
            }
        ];
        me.callParent(arguments);
    }
});

editor.on('afteredit', sendUpdateRequest); 

function sendUpdateRequest(){

	var jsonData = new Array();       
	var cr = Ext.getCmp(GridName).getSelectionModel().selected;
	var event_id = cr.items[0].data.event_id;
	var event_status = cr.items[0].data.event_status;
		switch(event_status)
		{
		case "Нова":
		  var event_status_id = 1;
		  break;
		case "Архівна":
		  var event_status_id = 2;
		  break;
		}

	var event_name = cr.items[0].data.event_name;
	var sponsor = cr.items[0].data.sponsor;
	var notes = cr.items[0].data.notes;
	var date = cr.items[0].data.date;

	Ext.Ajax.request(
	{
		url: './php/updateevents.php',
		params: {
			
			event_id:event_id,
			event_status:event_status,
			event_status_id :event_status_id,
			event_name :event_name,
			sponsor :sponsor,
			notes :notes,
			date :date
		},
		success: function()
		{
		},
		failure: function(response)
		{
			Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
		}
	})

	var MyGrid = Ext.getCmp(GridName).getView();
	MyGrid.getStore().load();

}

function sendRemoveRequest(){
	var MyGrid = Ext.getCmp(GridName).getView();
	var cr = Ext.getCmp(GridName).getSelectionModel().selected;
	var event_id = cr.items[0].data.event_id;
	
		Ext.Ajax.request({
			url:'/php/delete_event.php',
			params: {id: event_id},
			success:function(responce, action) {
			MyGrid.getStore().load();
			},
			failure: function(form, action) {
			alert('Помилка при виделенні');
			}
		});
		
}


function archieve(){

	var jsonData = new Array();       
	var cr = Ext.getCmp(GridName).getSelectionModel().selected;
	var event_id = cr.items[0].data.event_id;
	Ext.Ajax.request(
	{
		url: './php/archieve.php',
		params: {
			
			event_id:event_id
		},
		success: function()
		{
		},
		failure: function(response)
		{
			Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
		}
	})

	var MyGrid = Ext.getCmp(GridName).getView();
	MyGrid.getStore().load();

}
	
	function GreenGrtayColor (v, params, record) { 
		if(record.data.event_status_id == 1) { 
			var color = 'blue'; 
			var dekor =  'none';
		};
		
		if(record.data.event_status_id == 2) { 
			var color = 'black'; 
			var dekor =  'line-through';
		};
		return '<span style="color:' + color + ';text-decoration:' + dekor + '">' + v + '</span>';
	}			