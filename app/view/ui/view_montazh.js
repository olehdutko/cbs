/*
 * File: app/view/ui/view_montazh.js
 * Date: Wed Sep 14 2011 13:10:24 GMT+0300 (FLE Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
 var GridName = "grid_montazh";
 Ext.Loader.setConfig({enabled: true});
Ext.Loader.setPath('Ext.ux', '/ext-4.0.2a/examples/ux');
Ext.require([
    'Ext.grid.*',
    'Ext.data.*',
    'Ext.ux.grid.FiltersFeature',
    'Ext.toolbar.Paging'
]);
 
 Ext.define('Product', {
    extend: 'Ext.data.Model',
    fields: [ 
				{ type: 'string', name: 'ThemeId'}, 
				{ type: 'numeric', name: 'TypeID'}, 
				{ type: 'numeric', name: 'ModelId'}, 
				{type: 'string', name: 'CategoryName'}, 
				{type: 'numeric', name: 'Price'}, 
				{type: 'numeric', name: 'Time'}, 
				{type: 'string', name: 'CategoryId'}, 
				{type: 'string', name: 'SubCategoryName'}, 
				{type: 'string', name: 'Description'}, 
				{type: 'string', name: 'OdVymir'}, 
				{type: 'numeric', name: 'SubCategoryId'}, 
				{type: 'string', name: 'Model'},
				{type: 'string', name: 'Vendor'},
				{type: 'string', name: 'Valiuta'}
				]
});

var url = {
        local:  'grid-filter.json',  
        remote: 'grid-filter.php'
    };

    var encode = false;
    var local = false;
	
	
    var filters = {
        ftype: 'filters',
        encode: encode, 
        local: local,   

        filters: [
				{ type: 'string', dataIndex: 'ThemeId'}, 
				{ type: 'numeric', dataIndex: 'TypeID'}, 
				{ type: 'numeric', dataIndex: 'ModelId'}, 
				{type: 'string', dataIndex: 'CategoryName'}, 
				{type: 'numeric', dataIndex: 'Price'}, 
				{type: 'numeric', dataIndex: 'Time'}, 
				{type: 'string', dataIndex: 'CategoryId'}, 
				{type: 'string', dataIndex: 'SubCategoryName'}, 
				{type: 'string', dataIndex: 'Description'}, 
				{type: 'string', dataIndex: 'OdVymir'}, 
				{type: 'numeric', dataIndex: 'SubCategoryId'}, 
				{type: 'string', dataIndex: 'Model'},
				{type: 'string', dataIndex: 'Vendor'},
				{type: 'string', dataIndex: 'Valiuta'}
        ]
    };
	
	
 function getUrlVars()	{
	var vars = [], hash;
	var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
	for(var i = 0; i < hashes.length; i++)
	{
	hash = hashes[i].split('=');
	vars.push(hash[0]);
	vars[hash[0]] = hash[1];
	}
	return vars;
}

 var tpl = new Ext.Template(
          '<div class="quote-item">' +
          '<label>Модель:</label>{model}<br /><br>' + 
		  '<label>Опис:</label>{description}<br /><br>' + 
		  '<label>Ціна:</label>{price} {valiuta}<br /><br>' + 
		  '<img src="resources/komplectujuchi/{picture}.jpg" alt="Logo" style="float:right;margin:4px;" />' +  
          '</div>'
    );
   tpl.compile();    
   
   function valiuta(val){ 
		switch(val)
		{
		case 'dollar':
		  var ItemValiuta = '<span style="color:green;"> долари </span>';
		  break;
		case 'grivna':
		  var ItemValiuta = '<span style="color:blue;"> гривні </span>';
		  break;
		case 'euro':
		  var ItemValiuta = '<span style="color:orange;"> євро </span>';
		  break;
		default:
		  var ItemValiuta = '<span style="color:red;"> Невизначено</span>';
		}
	return ItemValiuta;
	}

Ext.define('Borsuko.view.ui.view_montazh', {
    extend: 'Ext.panel.Panel',

    height: 700,

    initComponent: function() {
        var me = this;
        me.items = [
            {
                xtype: 'gridpanel',
                height: 700,
                id: GridName,
                toFrontOnShow: false,
                bodyBorder: true,
                frameHeader: false,
                title: 'Перегляд монтажних матеріалів',
                //forceFit: true,
                store: 'Montazh_Store',
                columnLines: true,
				features: [filters],
                columns: [
                    {
                        xtype: 'gridcolumn',
                        width: 15,
                        dataIndex: 'ThemeId',
                        text: 'Тема'
                    },
                    {
                        xtype: 'gridcolumn',
                        autoRender: true,
                        hidden: true,
                        width: 15,
                        layout: {
                            type: 'fit'
                        },
                        dataIndex: 'TypeID',
                        text: 'TypeID'
                    },
                    {
                        xtype: 'gridcolumn',
                        hidden: true,
                        width: 15,
                        dataIndex: 'CategoryId',
                        text: 'КІ'
                    },
                    {
                        xtype: 'gridcolumn',
                        width: 15,
                        dataIndex: 'CategoryName',
                        text: 'Категорія'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        hidden: true,
                        dataIndex: 'SubCategoryId',
                        text: 'СКІ'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'SubCategoryName',
                        text: 'СубКатегорія'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'ModelId',
                        text: 'МІ'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'Model',
                        text: 'Модель'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'Vendor',
                        text: 'Виробник'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'Description',
                        text: 'Опис'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'OdVymir',
                        text: 'Од. Вим.'
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'Price',
                        text: 'Ціна',
						renderer:  function(val){ return '<span style="color:blue;">' + val + '</span>'; }
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'Time',
                        text: 'Час',
						renderer:  function(v){ return v + ' хв'; }
						
                    },
                    {
                        xtype: 'gridcolumn',
						width: 15,
                        dataIndex: 'Valiuta',
                        text: 'Валюта',
						renderer: valiuta
                    }
                ],
				listeners: {
				afterrender: function() {
				var hash = getUrlVars();
				var strObjid = hash['objid'];
				
				//console.dir(Ext.getCmp('NomerZamovlennia'));
				Ext.getCmp('NomerZamovlennia').setValue(strObjid);
		},
						itemdblclick: function(model, records) {
								var seldata=records.data.Description;
								var price=records.data.Price;
								var model=records.data.Model;
								var valiuta=records.data.Valiuta;
								
								
								switch(valiuta)
								{
								case 'dollar':
								  var ItemValiuta = '<span style="color:green;"> доларів </span>';
								  break;
								case 'grivna':
								  var ItemValiuta = '<span style="color:blue;"> гривень </span>';
								  break;
								case 'euro':
								  var ItemValiuta = '<span style="color:orange;"> євро </span>';
								  break;
								default:
								  var ItemValiuta = '<span style="color:red;"> Невизначено</span>';
								};
								
								
								var picture=records.data.ModelId;
								var data = {description: seldata, model: model, valiuta: ItemValiuta, price: price, picture: picture};

								var dialog;
								dialog = new Ext.Window({
								title: 'Інформація по устаткуванню:',
								layout:'fit',
								width:500,
								height:300,
								closeAction:'hide',
								plain: true,
								listeners : {
								afterrender: function() { 
								tpl.overwrite(dialog.body, data);}
								},
									buttons: [				
									{text: 'Закрити',
									handler: function(){
									dialog.hide();}}
									]
								});
								dialog.show();   
							}
							
						},
                viewConfig: {
                    height: 700
                },
                selModel: Ext.create('Ext.selection.CheckboxModel', {

                }),
                dockedItems: [
                    {
                        xtype: 'toolbar',
                        dock: 'top',
                        items: [
							{
							xtype: 'button',
							iconCls: 'save_columns', tooltip: 'Зберегти параметри колонок',
								handler : function()
								{
								getCount();
								}
							},
							
                            {
                                xtype: 'button',
                                id: 'add_sklad',
                                text: 'Додати на Склад',
								iconCls: 'add',
								handler : function(grid, model, records){
								Ext.getCmp('sklad_view').setDisabled(false);
								var rowval =  Ext.getCmp(GridName).getSelectionModel().selected;
								
								//alert(Ext.getCmp(GridName).getSelectionModel().selected.length);
								var Slenght = Ext.getCmp(GridName).getSelectionModel().selected.length;
								var sm = Ext.getCmp(GridName).getSelectionModel();
								
								if(Slenght >0) {
									Ext.getCmp('show').setDisabled(false);
								
									for (var i=0 ; i<Slenght; i++) {
											var strThemeId=rowval.items[i].data.ThemeId;
											var strCategoryName=rowval.items[i].data.CategoryName;
											var strVendor=rowval.items[i].data.Vendor;
											var strModel=rowval.items[i].data.Model;
											var strModelId=rowval.items[i].data.ModelId;
											var strDescription=rowval.items[i].data.Description;
											var OdVymir=rowval.items[i].data.OdVymir;
											var strPrice=rowval.items[i].data.Price;
											var strValiuta=rowval.items[i].data.Valiuta;
											var strCount=1;
											Ext.Ajax.request({
											url: './php/insert_to_sklad.php',
											params: {
												ThemeId:strThemeId,
												CategoryName:strCategoryName,
												Vendor: strVendor,
												Count: strCount,
												ModelId: strModelId,
												Model: strModel,
												valiuta: strValiuta,
												Description: strDescription,
												OdVymir: OdVymir,
												Price: strPrice
											},
											success: function()
												{
												sm.deselectAll();	
												},
											failure: function(response)
												{
												Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
												}
											});
									}	
								}
								else {Ext.MessageBox.alert('Message', 'Будьласка, оберіть комплектуючі!');}
								}
                            },
                            {
                                xtype: 'button',
                                id: 'sklad_view',
								iconCls: 'sklad',
                                text: 'Перегляд складу',
								handler : function(){
								window.location = "/sklad_view.php";
								}
                            },
                            {
                                xtype: 'button',
                                id: 'add',
								iconCls: 'add',
                                text: 'Додати до замовлення №',
								handler : function(grid, model, records){
								
								var rowval =  Ext.getCmp(GridName).getSelectionModel().selected;
								//alert(Ext.getCmp(GridName).getSelectionModel().selected.length);
								var Slenght = Ext.getCmp(GridName).getSelectionModel().selected.length;
								
								
								if(Slenght > 0) {
									Ext.getCmp('show').setDisabled(false);
									//Slenght = selection.length;
									var strZamovleniaid = Ext.getCmp('NomerZamovlennia').getValue();
									if (strZamovleniaid == "") 
									{
									Ext.MessageBox.alert('Message', 'Будьласка, оберіть Об`єкт!');
									}
									else {
									for (var i=0 ; i<Slenght; i++)
									{
										var strCategoryName=rowval.items[i].data.CategoryName;
										var strSubCategoryName=rowval.items[i].data.SubCategoryName;
										var strVendor=rowval.items[i].data.Vendor;
										var strModel=rowval.items[i].data.Model;
										var strModelId=rowval.items[i].data.ModelId;
										var strDescription=rowval.items[i].data.Description;
										var OdVymir=rowval.items[i].data.OdVymir;
										var strPrice=rowval.items[i].data.Price;
										var strTime=rowval.items[i].data.Time;
										var strValiuta=rowval.items[i].data.Valiuta;
										var strTypeID=rowval.items[i].data.TypeID;
										var strZamovleniaid = Ext.getCmp('NomerZamovlennia').getValue();
										
										Ext.Ajax.request({
										url: './php/insert_to_object.php',
										params: {
											zamovleniaid: strZamovleniaid,
											categoryName: strCategoryName,
											subcategoryname: strSubCategoryName,
											vendor: strVendor,
											modelid: strModelId,
											model: strModel,
											description: strDescription,
											OdVymir: OdVymir,
											price: strPrice,
											time: strTime,
											type: 'активні',
											valiuta: strValiuta,
											TypeID: strTypeID
											},
											success: function()
											{
											//sm.clearSelections();		
											var selection = Ext.getCmp(GridName).getSelectionModel();
											selection.deselectAll();
											},
											failure: function(response)
											{
												Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
											}
										});
									}	
								}  
								}
								else {Ext.MessageBox.alert('Message', 'Будьласка, оберіть комплектуючі!');}
								}
                            },
                            {
                                xtype: 'textfield',
                                id: 'NomerZamovlennia',
                                width: 75
                            },
                            {
                                xtype: 'button',
								iconCls: 'show_all',
                                id: 'show2',
                                text: 'Монтажні матеріали',
								handler : function()
								{
								var strZamovleniaid = Ext.getCmp('NomerZamovlennia').getValue();
								window.location = "/view_montazh.php?objid="+strZamovleniaid;
								}
                            },
                            {
                                xtype: 'button',
                                id: 'show',
                                text: 'Перегляд Об\'єкту',
								iconCls: 'view',
								handler : function()
								{
								var strZamovleniaid = Ext.getCmp('NomerZamovlennia').getValue();
								window.location = "/totals.php?objid="+strZamovleniaid;
								}
                            }
                        ]
                    },
                    {
                        xtype: 'pagingtoolbar',
                        afterPageText: 'із {0}',
                        beforePageText: 'Сторінка',
                        displayInfo: true,
                        displayMsg: 'Показано {0} - {1} із {2}',
                        emptyMsg: 'Записи відсутні',
                        firstText: 'Перша сторінка',
                        lastText: 'Остання сторінка',
                        nextText: 'Наступна сторінка',
                        prependButtons: true,
                        prevText: 'Попередня сторінка',
                        refreshText: 'Оновити',
                        store: 'Montazh_Store',
                        dock: 'bottom'
                    }
                ]
            }
        ];
        me.callParent(arguments);
    }
});

	
	function getCount(){
	var jsonObj = { };
	  var MyGrid = Ext.getCmp(GridName).getView();
	  var ColumnSizeArray=new Array(); 
	  var ColumnVisibleArray=new Array(); 
	  var columns = MyGrid.getGridColumns();
	  var columnsLength = MyGrid.getGridColumns().length;
	  var columnsState = MyGrid.getHeaderCt().getGridColumns();
	  for(var i = 0; i < columnsLength; i++){
			ColumnSizeArray[i]=MyGrid.getHeaderAtIndex(i).el.dom.firstChild.scrollWidth;
			jsonObj[ColumnSizeArray[i].id] = ColumnSizeArray[i].value;
			ColumnVisibleArray[i]=columnsState[i].hidden;
	  }	

		var JsonColumnSize = array1dToJson(ColumnSizeArray, 'data', 'size');
		var JsonColumnVisible = array1dToJson(ColumnVisibleArray, 'data', 'hidden');
  
		Ext.Ajax.request(
				{
					url: './php/SaveColumnSize.php',
					params: {
						GridName: GridName,
						JsonColumnSize: JsonColumnSize,
						JsonColumnVisible: JsonColumnVisible
						
					},
					success: function()
					{
					Ext.MessageBox.alert('Виконано', 'Стан колонок успішно збережений');
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
		
		/*function array2dToJson(a, p, nl) {
		  var i, j, s = '{"' + p + '":[';
		  nl = nl || '';
		  for (i = 0; i < a.length; ++i) {
			s += nl + array1dToJson(a[i]);
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += nl + ']}';
		  return s;
		}*/
		
		function array1dToJson(a, p, value) {
		  var i, s = '[';
		  for (i = 0; i < a.length; ++i) {
			if (typeof a[i] == 'string') {
			  s += '"' + a[i] + '"';
			}
			else { // assume number type
			  s += "{\""+value+"\": "+a[i]+"}";
			}
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += ']';
		  if (p) {
			return '{"' + p + '":' + s + '}';
		  }
		  return s;
		}
}

 ColumnSizeStore = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnSizeStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnSize.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'size'
		}
	],
	listeners: {
				load: function() {
					
					var StoreLength = ColumnSizeStore.data.length;
					for(var i = 0; i < StoreLength; i++){
					//ColumnSizes[i] = ColumnSizeStore.data.items[i].data.size;
					Ext.getCmp(GridName).columns[i].setWidth(ColumnSizeStore.data.items[i].data.size);
					};
				}
			}
});	

ColumnStateStore = Ext.create('Ext.data.JsonStore', {

	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnStateStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnState.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'hidden'
		}
	],
	listeners: {
				load: function() {
					var StoreLength1 = ColumnStateStore.data.length;
					for(var i = 0; i < StoreLength1; i++){
					//ColumnSizes[i] = ColumnStateStore.data.items[i].data.hidden;
					Ext.getCmp(GridName).columns[i].setVisible(!(ColumnStateStore.data.items[i].data.hidden));//працює на FF, але не на IE
					};
				}
			}
});

