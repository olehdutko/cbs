/*
 * File: app/view/ui/fond_view.js
 * Date: Mon Sep 05 2011 19:04:54 GMT+0300 (FLE Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
 var GridName = "fond_view_grid";
 Ext.Loader.setConfig({enabled: true});
Ext.Loader.setPath('Ext.ux', '/ext-4.0.2a/examples/ux');
Ext.require([
    'Ext.grid.*',
    'Ext.data.*',
    'Ext.ux.grid.FiltersFeature',
    'Ext.toolbar.Paging'
]);
 
 var tpl = new Ext.Template(
          '<div class="quote-item">' +
		  '<img src="resources/Vfondy/{picture}.jpg" alt="Logo" style="float:right;margin:4px;" />' +  
          '</div>'
    );

	function valiuta(val){ 
		switch(val)
		{
		case 'dollar':
		  var ItemValiuta = '<span style="color:green;"> долари </span>';
		  break;
		case 'grivna':
		  var ItemValiuta = '<span style="color:blue;"> гривні </span>';
		  break;
		case 'euro':
		  var ItemValiuta = '<span style="color:orange;"> євро </span>';
		  break;
		default:
		  var ItemValiuta = '<span style="color:red;"> Невизначено</span>';
		}
	return ItemValiuta;
	}	
	
	function pctChange(val, params, record){ 
		switch(record.data.Valiuta)
		{
		case 'dollar':
		  var strgrivna = '<span style="color:green;">' + val+ '</span>';
		  break;
		case 'grivna':
		  var strgrivna = '<span style="color:blue;">' + val + '</span>';
		  break;
		case 'euro':
		  var strgrivna = '<span style="color:orange;">' + val + '</span>';
		  break;
		default:
		  var strgrivna = '<span style="color:red;">' + val +'</span>';
		}
		
		return '<span style="color:blue;">' + strgrivna + '</span>';
	}	
	
 var hash = getUrlVars();
 function getUrlVars()
	{
		var vars = [], hash;
		var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
		for(var i = 0; i < hashes.length; i++)
		{
			hash = hashes[i].split('=');
			vars.push(hash[0]);
			vars[hash[0]] = hash[1];
		}
		return vars;
	}
	strObjid = hash['objid'];	

		
 var grivna = Ext.create('Ext.form.TextField', {
	allowBlank : true,
	//padding: 10,
    labelAlign: 'right',
	fieldLabel:'Курс гривні',
	//maxLength: 100,
	width: 150,
	 labelWidth: 70,
	name:'grivna',
	//anchor:'90%',
	id:"grivna"
}); 
var dollar = Ext.create('Ext.form.TextField', {
	allowBlank : true,
	//padding: 10,
    labelAlign: 'right',
	fieldLabel:'Курс долару',
	//maxLength: 100,
	width: 150,
	 labelWidth: 70,
	name:'nazva',
	//anchor:'90%',
	id:"dollar"
}); 
var euro = Ext.create('Ext.form.TextField', {
	allowBlank : true,
	//padding: 10,
    labelAlign: 'right',
	fieldLabel:'Курс євро',
	//maxLength: 50,
	width: 150,
	 labelWidth: 70,
	name:'dollar',
	
	id:"euro"
}); 

var reader2 = new Ext.data.JsonReader({
        //idProperty: 'ModelId',
		root: 'results',
        totalProperty: 'total',
        fields: [
			{name: 'euro', type: 'float'},
			{name: 'grivna', type: 'float'},
			{name: 'dollar', type: 'float'},
			{name: 'pdv', type: 'float'},
        ]
    });

	var SettingsForm =  Ext.create('Ext.FormPanel', {
		id: "SettingsForm",
		layout: 'table',
		
		frame: true,
		border: false,
		reader: reader2,
		width: 600,
		//title:'Поточний курс валют',
		//hidden:false,
		draggable:false,
		resizible:false,
		collapsible: false,
		collapsed: false,
		maximizable : false,
		animCollapse: false,
		items:[dollar, euro, grivna]
			
    });



 sumaVF = Ext.create('Ext.data.JsonStore', {
        storeId: 'sumaVF',
		autoLoad: true,
            proxy: {
                type: 'ajax',
				url: './php/sumaVF.php',
                reader: {
                    type: 'json',
                    root: 'results'
                }
            },
            fields: [
                {
                    name: 'suma'
                }
            ],
			listeners: {
				load: function() {
					Ext.getCmp("VyrobnychyhFondivNa").setValue(sumaVF.data.items[0].data.suma + ' грн.');
				}
			}
    });
	
var url = {
        local:  'grid-filter.json',  
        remote: 'grid-filter.php'
    };

    var encode = false;
    var local = false;
	
 Ext.define('Product', {
    extend: 'Ext.data.Model',
    fields: [ 
	{ name: 'Type', 		type: 'string'},
	{ name: 'ID', 	type: 'string'},
	{ name: 'ModelId', 	type: 'string'},
	{ name: 'Model', 	type: 'string'},
	{ name: 'Description', 		type: 'string'},
	{ name: 'Price', 		type: 'string'},
	{ name: 'Valiuta', 	type: 'string'},
	{ name: 'Count', 	type: 'string'},
	{ name: 'OdVym', 		type: 'string'},
	{ name: 'Date', 	type: 'int'},
	{ name: 'Prymitka', 	type: 'string'}
	]
});


	var filters = {
        ftype: 'filters',
        encode: encode, 
        local: local,   
        filters: [
    { dataIndex: 'Type', 		type: 'string'},
	{ dataIndex: 'ID', 	type: 'string'},
	{ dataIndex: 'ModelId', 	type: 'string'},
	{ dataIndex: 'Model', 	type: 'string'},
	{ dataIndex: 'Description', 		type: 'string'},
	{ dataIndex: 'Price', 		type: 'string'},
	{ dataIndex: 'Valiuta', 	type: 'string'},
	{ dataIndex: 'Count', 	type: 'string'},
	{ dataIndex: 'OdVym', 		type: 'string'},
	{ dataIndex: 'Date', 	type: 'int'},
	{ dataIndex: 'Prymitka', 	type: 'string'}
        ]
    };
	
Ext.define('Borsuko.view.ui.fond_view', {
    extend: 'Ext.panel.Panel',

    height: 724,
    animCollapse: false,
    collapseFirst: false,
    title: 'Виробничі фонди',

    initComponent: function() {
        var me = this;
        me.items = [
            {
                xtype: 'form',
                autoRender: true,
                autoShow: true,
                frame: true,
                height: 699,
                id: 'tabs_mega',
                itemId: 'tabs',
                maintainFlex: true,
                layout: {
                    type: 'column'
                },
                bodyPadding: 10,
                animCollapse: false,
                collapseFirst: false,
                collapsed: false,
                frameHeader: false,
                preventHeader: true,
                title: 'Mega',
                pollForChanges: true,
                paramsAsHash: true,
                standardSubmit: true,
                trackResetOnLoad: true,
                dockedItems: [
                    {
                        xtype: 'container',
                        autoRender: true,
                        autoShow: true,
                        border: 0,
                        draggable: false,
                        frame: true,
                        height: 550,
                        id: 'form',
                        itemId: 'form',
                        width: 300,
                        maintainFlex: true,
                        layout: {
                            type: 'column'
                        },
                        dock: 'left',
                        items: [
                            {
                                xtype: 'container',
                                border: 0,
                                height: 550,
                                id: 'Container1',
                                padding: 10,
                                width: 200,
                                items: [
                                    {
                                        xtype: 'textfield',
                                        disabled: true,
                                        id: 'ID',
                                        width: 140,
										labelWidth: 80,
                                        toFrontOnShow: false,
                                        name: 'ID',
                                        fieldLabel: 'Номер',
                                        preventMark: true
                                    },
                                    {
                                        xtype: 'textfield',
                                        id: 'Count',
                                        width: 250,
                                        name: 'Count',
                                        readOnly: true,
										labelWidth: 80,
                                        fieldLabel: 'Кількість'
                                    },
                                    {
                                        xtype: 'textfield',
                                        id: 'opercount',
                                        width: 250,
                                        name: 'opercount',
										labelWidth: 80,
										readOnly: false,
                                        fieldLabel: 'Оперативна кількість'
                                    },
                                    {
                                        xtype: 'textfield',
                                        disabled: true,
                                        id: 'OdVym',
										labelWidth: 80,
                                        width: 240,
                                        name: 'OdVym',
                                        fieldLabel: 'Од.Виміру'
                                    },
                                    {
                                        xtype: 'textfield',
                                        id: 'Model',
                                        width: 250,
										labelWidth: 80,
                                        name: 'Model',
                                        fieldLabel: 'Модель',
                                        emptyText: 'Замовник Об\'єкту'
                                    },
                                    {
                                        xtype: 'textareafield',
                                        height: 82,
                                        id: 'Description',
                                        width: 250,
										labelWidth: 80,
                                        name: 'Description',
                                        fieldLabel: 'Опис'
                                    },
                                    /*{
                                        xtype: 'textfield',
                                        id: 'Vendor',
                                        width: 250,
                                        name: 'S_kontragent',
                                        fieldLabel: 'Виробник',
                                        emptyText: 'Замовник Об\'єкту'
                                    },*/
                                    {
                                        xtype: 'datefield',
										format : "d/m/Y",
                                        id: 'Date',
                                        width: 250,
										labelWidth: 80,
                                        name: 'Date',
                                        fieldLabel: 'Дата'
                                    },
                                    {
                                        xtype: 'textfield',
                                        disabled: true,
                                        id: 'Price',
                                        width: 250,
										labelWidth: 80,
                                        fieldLabel: 'Ціна'
                                    },
									 {
                                        xtype: 'textfield',
                                        disabled: true,
                                        id: 'Valiuta',
                                        width: 250,
										labelWidth: 80,
                                        name: 'Valiuta',
                                        fieldLabel: 'Валюта',
                                        emptyText: ''
                                    },
                                    {
                                        xtype: 'radiogroup',
                                        id: 'Spysannia',
                                        width: 260,
										labelWidth: 80,
                                        layout: {
                                            type: 'column'
                                        },
                                        fieldLabel: 'Списано на',
                                        items: [
                                            {
                                                xtype: 'radiofield',
                                                id: 'kontragent',
                                                name: 'Spysannia',
                                                boxLabel: 'на контрагента',
												handler: function() {
												switch (this.getValue())
													{
												case true: 
													Ext.getCmp('kontr').setDisabled(false),
													selected = 'kontragent';
													break;
												case false: 
													break;
													}
												}
                                            },
                                            {
                                                xtype: 'radiofield',
												labelWidth: 100,
                                                id: 'neprydatnist',
                                                name: 'Spysannia',
                                                boxLabel: 'непридатність/повернення',
												handler: function() {
												switch (this.getValue())
													{
												case true: 
													Ext.getCmp('kontr').setDisabled(true),
													selected = 'kontr';
													break;
												case false: 
													break;
													}
												}
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'combobox',
                                        id: 'kontr',
                                        width: 250,
										labelWidth: 80,
                                        fieldLabel: 'Контрагент',
										editable: false,
                                        emptyText: 'Вибір теми',
                                        displayField: 'Type',
                                        store: 'KontragentyStore',
                                        valueField: 'Type'
                                    },
                                    {
                                        xtype: 'textareafield',
                                        height: 82,
										labelWidth: 80,
                                        id: 'prymitka',
                                        width: 250,
                                        name: 'Prymitka',
                                        fieldLabel: 'Примітка'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'gridpanel',
                        draggable: false,
                        id: GridName,
                        width: 1000,
                        focusOnToFront: false,
                        animCollapse: false,
                        collapseFirst: false,
                        title: 'Виробничі фонди',
                        //forceFit: true,
                        store: 'store_fond',
                        columnLines: true,
                        dock: 'left',
						selModel: Ext.create('Ext.selection.RowModel', {
                            allowDeselect: true
                        }),
						features: [filters],
                        columns: [
                            {
                                xtype: 'gridcolumn',
                                autoRender: true,
                                hidden: true,
                                width: 15,
                                layout: {
                                    type: 'fit'
                                },
                                dataIndex: 'Type',
                                text: 'Тип'
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 15,
                                dataIndex: 'ID',
                                text: 'Номер'
                            },
                            {
                                xtype: 'gridcolumn',
                                hidden: true,
                                width: 15,
                                dataIndex: 'ModelId',
                                text: 'МІ'
                            },
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'Model',
                                text: 'Модель'
                            },
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'Description',
                                text: 'Опис'
                            },
                            /*{
                                xtype: 'gridcolumn',
                                dataIndex: 'Vendor',
                                text: 'Виробник'
                            },*/
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'Price',
								renderer: pctChange,
                                text: 'Ціна'
                            },
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'Valiuta',
								renderer: valiuta,
                                text: 'Валюта'
                            },
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'Count',
                                text: 'Кількість'
                            },
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'OdVym',
                                text: 'Од. Вим'
                            },
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'Date',
								renderer: dateFunction,
                                text: 'Дата'
                            },
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                hidden: true,
                                dataIndex: 'Prymitka',
                                text: 'Примітка'
                            }
                        ],
						listeners: {
							selectionchange: function(model, records) {
							//Ext.getCmp('NomerNariadu').setValue(strObjid);
							
								if (records[0]) {
								Ext.getCmp('save').setDisabled(false);
								this.up('form').getForm().loadRecord(records[0]);
								}

							},
							itemdblclick: function(model, records) {
								var picture = Ext.getCmp('ID').getValue();
								var data = {picture: picture};
								var dialog;
									dialog = new Ext.Window({
									title: 'Фото товару в виробничих фондах:',
									layout:'fit',
									width:500,
									height:300,
									closeAction:'hide',
									plain: true,
									listeners : {
									afterrender: function() { 
									tpl.overwrite(dialog.body, data);}
									},
									buttons: [				
										{text: 'Закрити',
										handler: function(){
										dialog.hide();}}
										]
								});
								dialog.show();
							}
						},
                        /*selModel: Ext.create('Ext.selection.CheckboxModel', {

                        }),*/
                        viewConfig: {
                            frame: true
                        },
                         dockedItems: [
                            {
                                xtype: 'toolbar',
                                dock: 'bottom',
                                items: [
                                    {
                                xtype: 'pagingtoolbar',
                                width: 415,
								pageSize: 20,
                                afterPageText: 'із {0}',
                                beforePageText: 'Сторінка',
                                displayInfo: true,
                                displayMsg: 'Показано {0} - {1} із {2}',
                                emptyMsg: 'Записи відсутні',
                                firstText: 'Перша сторінка',
                                lastText: 'Остання сторінка',
                                nextText: 'Наступна сторінка',
                                prependButtons: true,
                                prevText: 'Попередня сторінка',
                                refreshText: 'Оновити',
                                store: 'store_fond'
                                    },
                                    {
                                        xtype: 'textfield',
										id: 'VyrobnychyhFondivNa',
										labelWidth: 150,
										//width: 10,
										//name: 'Vendor',
										fieldLabel: 'Виробничих фондів на '
                                    }
                                ]
                            }
                        ]
						
                    },
                    {
                        xtype: 'toolbar',
                        dock: 'top',
                        items: [
							{
							xtype: 'button',
							iconCls: 'save_columns', tooltip: 'Зберегти параметри колонок',
							handler : function(){
							getCount();
							}
							},
                            {
                                xtype: 'button',
                                id: 'add',
                                text: 'Додати в Наряд',
								iconCls: 'add',
								handler : function(){
								DodatyVNariad();
								}
                            },
							{
							xtype: 'combobox',
							pageSize: true,
							 minChars: 0,
							//triggerAction: 'local', 
							id: 'Nariad_object',
							width: 250,
							emptyText: "№ Наряду / Об'єкт",
							editable: false,
							displayField: 'nazva',
							store: { 
								fields: ['nazva'], 
								pageSize: 20, 
								proxy: {
									type: 'ajax',
									//url: './php/objects.php?action=showTop20',
									url: './php/nariad_object.php',
									reader: {
										type: 'json',
										root: 'data'
									}
								} 
							} ,
							valueField: 'nazva'
						},
                            /*{
                                xtype: 'button',
                                id: 'view_history',
                                text: 'Перегляд історії видачіі',
								handler : function()
									{
										var strcount = Ext.getCmp('Сount').getValue();
										strUrl = "./php/rahunok.php?objid="+strcount;
										window.location = strUrl;
									}
								
                            },*/
                            {
                                xtype: 'button',
                                disabled: true,
                                id: 'save',
                                style: {
                                    marginLeft: '200px'
                                },
                                text: 'Списання/Видача',
								iconCls: 'save',
								handler : function(){
									Save();
								}
                            },
                           SettingsForm
                        ]
                    }
                ]
            }
        ];
        me.callParent(arguments);
    }
});

























/*function dateFunction(val){ 
	var dateArray = val.split("-");
	MyDate = dateArray[2]+"/"+dateArray[1]+"/"+dateArray[0];
	return MyDate;
}*/

function dateFunction(val){ 
	var dateArray = val.split("-");
	MyDate = dateArray[2]+"/"+dateArray[1]+"/"+dateArray[0];
	return MyDate;
}


function DodatyVNariad()
{	
		var cr = Ext.getCmp(GridName).getSelectionModel().selected;
		var Slenght = Ext.getCmp(GridName).getSelectionModel().selected.length;
		
	if(Slenght > 0) {
		var Nariad_object = Ext.getCmp('Nariad_object').getValue();
		var arrNariad=Nariad_object.split("/");
		var strNariad=arrNariad[0];
		
		if (strNariad == "") 
		{
		Ext.MessageBox.alert('Message', 'Будьласка, оберіть Наряд!');
		}
		else {
		
		
		
		for (var i=0 ; i<Slenght; i++)
		{
			var stropercount = Ext.getCmp('opercount').getValue();
			//var stropercount = 1;
			var strType="в.фонди";
			var strID=Ext.getCmp('ID').getValue();
			var strModel=Ext.getCmp('Model').getValue();
			var strDescription=Ext.getCmp('Description').getValue();
			var strPrice=Ext.getCmp('Price').getValue();
			var strValiuta=Ext.getCmp('Valiuta').getValue();
			var OdVym=Ext.getCmp('OdVym').getValue();
			var strVendor="";
			//var strDate=selection[i].data.Date;
			
			var strCount=Ext.getCmp('Count').getValue();
			var strPrymitka=Ext.getCmp('prymitka').getValue();
			
			var zalyshok = strCount - stropercount;
			if( (stropercount !='') && (zalyshok >= 0)) {
			alert('Добре, залишок : '+zalyshok);
			
			
			
			
			
			
			
			Ext.Ajax.request(
				{
					url: './php/InsertToNariadFromFondy.php',
					params: {
					Nariad:strNariad,
					Type:strType,
					ID:strID,
					Model:strModel,
					Description:strDescription,
					Price:strPrice,
					Valiuta:strValiuta,
					OdVym:OdVym,
					Vendor:strVendor,
					Prymitka:strPrymitka,
					//Date:strDate,
					OperCount: stropercount,
					Count:strCount
					},
					success: function()
					{
					var MyGrid = Ext.getCmp(GridName).getView();
					MyGrid.getStore().load();
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
			
			
		}	
		else
		{
		
		if (zalyshok < 0)
		{
		Ext.MessageBox.alert('Помилка', 'Ви намагаєтесь взяти більше ніж доступно. Залишок : '+zalyshok);
		}
		else
		{
		Ext.MessageBox.alert('Помилка', 'Невибрана кількість! Заповніть поле "Оперативна кількість"');
		}
		}
		}
	}  
	}
	else {Ext.MessageBox.alert('Message', 'Будьласка, оберіть комплектуючі!');}

}




 function Save()
	{		
		strType = 'в.фонди';
		var cr = Ext.getCmp(GridName).getSelectionModel().selected;
		var Slenght = Ext.getCmp(GridName).getSelectionModel().selected.length;
		
		if(Slenght > 0) {
		stropercount = Ext.getCmp("opercount").getValue();
			if(stropercount > 0) {
			var intIsDeleted = 1;
			var val = 0;
					//strCountBefore = selection[0].data.Count;
					strCountAfter = Ext.getCmp("Count").getValue();
					strOdVym = Ext.getCmp("OdVym").getValue();
					strKontr = Ext.getCmp("kontr").getValue();
					strPrymitkaTMP = Ext.getCmp("prymitka").getValue();
					strModelId = Ext.getCmp("ID").getValue();
					strPrice = Ext.getCmp("Price").getValue();
					strVendor = "N/A";
					strModel = Ext.getCmp("Model").getValue();
					strDescription = Ext.getCmp("Description").getValue();
					strDate = Ext.getCmp("Date").getValue();
					
					strSumaSpysannia = stropercount * strPrice;
					
					var strPrymitka = strPrymitkaTMP + "*** З контрагента `"+strKontr+"` вираховано "+strCountAfter*strPrice+" грн. ***"
					var strZalyshok = strCountAfter - stropercount;
					
					//alert(strZalyshok);
				if( strZalyshok >= 0) 
				{				
				for( i = 0; i < Ext.getCmp('Spysannia').items.getCount(); i++ )
					{
					if( Ext.getCmp('Spysannia').items.items[i].checked == true )
					val = Ext.getCmp('Spysannia').items.items[i].id;
					}
				
				switch (val)
				{
				case 0:
					alert('Помилка! Оберіть причину списання!');
					break;
				case 'kontragent':
					if (!(strKontr == null))
						{

						if( strZalyshok == 0) 
						{
						Ext.Ajax.request(
							{
								url: './php/spysaty_fond.php?action=SetZero',
								params: {
									ModelId: strModelId,
									Prymitka: strPrymitka
								},
								success: function()
								{
								
									Ext.MessageBox.alert('Дані Збережені!', 'Об\'єкт списаний');
								},
								failure: function(response)
								{
									Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
								}
							})
						}
						
						   //КІнець перевірки залишка if( strZalyshok = 0) 
						Ext.Ajax.request(
						{
							url: './php/spysaty_fond.php?action=Kontragent',
							params: {
								ModelId: strModelId,
								count: strCountAfter,
								OdVym: strOdVym,
								KontrAgent: strKontr,
								Prymitka: strPrymitka,
								Price: strPrice,
								Vendor: strVendor,
								Model:strModel,
								Description:strDescription,
								Zalyshok:strZalyshok,
								opercount: stropercount,
								SumaSpysannia:strSumaSpysannia,
								Date:strDate

							},
							success: function()
							{
							var MyGrid = Ext.getCmp(GridName).getView();
							MyGrid.getStore().load();
							},
							failure: function(response)
							{
								Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
							}
						})
						
								//Пишу на таблицю KontragentHistory
							Ext.Ajax.request(
								{
									url: './php/na_kontragentHistory.php',
									params: {
										modelID: strModelId,
										count: strCountAfter,
										odVym:strOdVym,
										p_Kontragent: strKontr,
										prymitka: strPrymitkaTMP,
										price: strPrice,
										vendor:strVendor,
										model:strModel,
										type:strType,
										opercount: stropercount,
										description:strDescription
										
									},
									success: function()
									{
									Ext.MessageBox.alert('Дані Збережені!', strPrymitka);
										//Ext.MessageBox.alert('Дані Збережені!', 'Об\'єкт списаний');
									},
									failure: function(response)
									{
										Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
									}
								})
						break;
						}
					else
					   {
					   alert("Невибриний контрагент!");
					   break;
					   }
					break;
				case 'neprydatnist': 
					strCount = Ext.getCmp("Count").getValue();
					strOdVym = Ext.getCmp("OdVym").getValue();
					strPrymitka = Ext.getCmp("prymitka").getValue();
					strModelId = Ext.getCmp("ID").getValue();
					strPrice = Ext.getCmp("Price").getValue();
					strVendor =  "N/A";
					strModel = Ext.getCmp("Model").getValue();
					strDescription = Ext.getCmp("Description").getValue();
					strDate = Ext.getCmp("Date").getValue();
					stropercount = Ext.getCmp("opercount").getValue();
					strNeprydatnist = "Непридатність";
					if( strZalyshok == 0) 
					{
					Ext.Ajax.request(
						{
							url: './php/spysaty_fond.php?action=SetZero',
							params: {
								ModelId: strModelId,
								Prymitka: strPrymitka
							},
							success: function()
							{
								Ext.MessageBox.alert('Дані Збережені!', 'Об\'єкт списаний');
							},
							failure: function(response)
							{
								Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
							}
						})
					}//КІнець перевірки залишка if( strZalyshok = 0) 

					Ext.Ajax.request(
					{
						url: './php/spysaty_fond.php?action=Neprydatnist',
						params: {
							ModelId: strModelId,
							opercount: stropercount,
							OdVym: strOdVym,
							Neprydatnist: strNeprydatnist,
							Prymitka: strPrymitka,
							Price: strPrice,
							Vendor: strVendor,
							Model:strModel,
							Description:strDescription,
							Zalyshok:strZalyshok,
							count:strCount,
							Date:strDate

							
						},
						success: function()
						{
							Ext.MessageBox.alert('Дані Збережені!', 'Об\'єкт списаний');
								var MyGrid = Ext.getCmp(GridName).getView();
								MyGrid.getStore().load();
						},
						failure: function(response)
						{
							Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
						}
					})
					
					//Пишу на таблицю NeprydatnistHistory
								Ext.Ajax.request(
								{
									url: './php/na_NeprydatnistHistory.php',
									params: {
										modelID: strModelId,
										count: strCountAfter,
										//countBefore:strCountBefore,
										odVym:strOdVym,
										prymitka: strPrymitka,
										price: strPrice,
										vendor:strVendor,
										model:strModel,
										type:strType,
										opercount: stropercount,
										description:strDescription
										
									},
									success: function()
									{
										Ext.MessageBox.alert('Дані Збережені!', 'Об\'єкт списаний');
									},
									failure: function(response)
									{
										Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
									}
								})
					break;
				}	
				
				}//КІнець перевірки залишка if( strZalyshok >= 0) 
				else
				   {
				   alert("Ви намагаєтеся списати більше ніж доступно на складі!");
				   }
		
		
			}
			else 
			{
				alert('Будьласка, оберіть Оперативну кількість!');
			}
		}//Кінець перевірки Selection Lenght  (if(selection.length > 0))
		else 
		{
			alert('Будьласка, оберіть комплектуючі!');
		}
	
	var MyGrid = Ext.getCmp(GridName).getView();
	MyGrid.getStore().load();
	}//Кынець функції SAVE


store_money = Ext.create('Ext.data.JsonStore', {

        storeId: 'store_money',
		autoLoad: true,
            proxy: {
                type: 'ajax',
				url:'/php/settings.php?action=showData', 
                reader: {
                    type: 'json',
                    root: 'results'
                }
            },
            fields: [
                {
                    name: 'dollar'
                },
                {
                    name: 'euro'
                },
                {
                    name: 'grivna'
                }
            ],
			listeners: {
						load: function() {
						
						Ext.getCmp("dollar").setValue(store_money.data.items[0].data.dollar);
						Ext.getCmp("euro").setValue(store_money.data.items[0].data.euro);
						Ext.getCmp("grivna").setValue(store_money.data.items[0].data.grivna);
						}
					}
    });
	
		
	function getCount(){
	var jsonObj = { };
	  var MyGrid = Ext.getCmp(GridName).getView();
	  var ColumnSizeArray=new Array(); 
	  var ColumnVisibleArray=new Array(); 
	  var columns = MyGrid.getGridColumns();
	  var columnsLength = MyGrid.getGridColumns().length;
	  var columnsState = MyGrid.getHeaderCt().getGridColumns();
	  for(var i = 0; i < columnsLength; i++){
			ColumnSizeArray[i]=MyGrid.getHeaderAtIndex(i).el.dom.firstChild.scrollWidth;
			jsonObj[ColumnSizeArray[i].id] = ColumnSizeArray[i].value;
			ColumnVisibleArray[i]=columnsState[i].hidden;
	  }	

		var JsonColumnSize = array1dToJson(ColumnSizeArray, 'data', 'size');
		var JsonColumnVisible = array1dToJson(ColumnVisibleArray, 'data', 'hidden');
  
		Ext.Ajax.request(
				{
					url: './php/SaveColumnSize.php',
					params: {
						GridName: GridName,
						JsonColumnSize: JsonColumnSize,
						JsonColumnVisible: JsonColumnVisible
						
					},
					success: function()
					{
					Ext.MessageBox.alert('Виконано', 'Стан колонок успішно збережений');
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
		
		/*function array2dToJson(a, p, nl) {
		  var i, j, s = '{"' + p + '":[';
		  nl = nl || '';
		  for (i = 0; i < a.length; ++i) {
			s += nl + array1dToJson(a[i]);
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += nl + ']}';
		  return s;
		}*/
		
		function array1dToJson(a, p, value) {
		  var i, s = '[';
		  for (i = 0; i < a.length; ++i) {
			if (typeof a[i] == 'string') {
			  s += '"' + a[i] + '"';
			}
			else { // assume number type
			  s += "{\""+value+"\": "+a[i]+"}";
			}
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += ']';
		  if (p) {
			return '{"' + p + '":' + s + '}';
		  }
		  return s;
		}
}

 ColumnSizeStore = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnSizeStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnSize.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'size'
		}
	],
	listeners: {
				load: function() {
					
					var StoreLength = ColumnSizeStore.data.length;
					for(var i = 0; i < StoreLength; i++){
					//ColumnSizes[i] = ColumnSizeStore.data.items[i].data.size;
					Ext.getCmp(GridName).columns[i].setWidth(ColumnSizeStore.data.items[i].data.size);
					};
				}
			}
});	

ColumnStateStore = Ext.create('Ext.data.JsonStore', {

	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnStateStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnState.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'hidden'
		}
	],
	listeners: {
				load: function() {
					var StoreLength1 = ColumnStateStore.data.length;
					for(var i = 0; i < StoreLength1; i++){
					//ColumnSizes[i] = ColumnStateStore.data.items[i].data.hidden;
					Ext.getCmp(GridName).columns[i].setVisible(!(ColumnStateStore.data.items[i].data.hidden));//працює на FF, але не на IE
					};
				}
			}
});

