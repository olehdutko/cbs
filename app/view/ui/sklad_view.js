/*
 * File: app/view/ui/sklad_view.js
 * Date: Mon Sep 05 2011 19:04:54 GMT+0300 (FLE Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
var GridName = "Sklad_view_grid";
var strType = "Склад";
Ext.Loader.setConfig({enabled: true});
Ext.Loader.setPath('Ext.ux', '/ext-4.0.2a/examples/ux');
Ext.require([
    'Ext.grid.*',
    'Ext.data.*',
    'Ext.ux.grid.FiltersFeature',
    'Ext.toolbar.Paging'
]);
 
  var grivna = Ext.create('Ext.form.TextField', {
	allowBlank : true,
	//padding: 10,
    labelAlign: 'right',
	fieldLabel:'Курс гривні',
	//maxLength: 100,
	width: 150,
	 labelWidth: 70,
	name:'grivna',
	//anchor:'90%',
	id:"grivna"
}); 
var dollar = Ext.create('Ext.form.TextField', {
	allowBlank : true,
	//padding: 10,
    labelAlign: 'right',
	fieldLabel:'Курс долару',
	//maxLength: 100,
	width: 150,
	 labelWidth: 70,
	name:'nazva',
	//anchor:'90%',
	id:"dollar"
}); 
var euro = Ext.create('Ext.form.TextField', {
	allowBlank : true,
	//padding: 10,
    labelAlign: 'right',
	fieldLabel:'Курс євро',
	//maxLength: 50,
	width: 150,
	 labelWidth: 70,
	name:'dollar',
	
	id:"euro"
}); 

var reader2 = new Ext.data.JsonReader({
        //idProperty: 'ModelId',
		root: 'results',
        totalProperty: 'total',
        fields: [
			{name: 'euro', type: 'float'},
			{name: 'grivna', type: 'float'},
			{name: 'dollar', type: 'float'},
			{name: 'pdv', type: 'float'},
        ]
    });

	var SettingsForm =  Ext.create('Ext.FormPanel', {
		id: "SettingsForm",
		layout: 'table',
		frame: true,
		border: false,
		reader: reader2,
		width: 600,
		//title:'Поточний курс валют',
		//hidden:false,
		draggable:false,
		resizible:false,
		collapsible: false,
		collapsed: false,
		maximizable : false,
		animCollapse: false,
		items:[dollar, euro, grivna]
			
    });

	
 Ext.define('Product', {
    extend: 'Ext.data.Model',
    fields: [ 
	{ name: 'Type', 		type: 'string'},
	{ name: 'CategoryName', 	type: 'string'},
	{ name: 'ModelId', 	type: 'string'},
	{ name: 'Model', 	type: 'string'},
	{ name: 'Description', 		type: 'string'},
	{ name: 'Vendor', 		type: 'string'},
	{ name: 'Valiuta', 	type: 'string'},
	{ name: 'CinaVvaliuti', 	type: 'string'},
	{ name: 'Price', 		type: 'string'},
	{ name: 'count', 	type: 'int'},
	{ name: 'OdVym', 	type: 'string'}
	]
});

 function getUrlVars()	{
	var vars = [], hash;
	var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
	for(var i = 0; i < hashes.length; i++)
	{
	hash = hashes[i].split('=');
	vars.push(hash[0]);
	vars[hash[0]] = hash[1];
	}
	return vars;
}

var hash = getUrlVars();
var strObjid = hash['objid'];


				
var url = {
        local:  'grid-filter.json',  
        remote: 'grid-filter.php'
    };

    var encode = false;
    var local = false;
	
	
    var filters = {
        ftype: 'filters',
        encode: encode, 
        local: local,   
        filters: [
    { dataIndex: 'Type', 		type: 'string'},
	{ dataIndex: 'CategoryName', 	type: 'string'},
	{ dataIndex: 'ModelId', 	type: 'string'},
	{ dataIndex: 'Model', 	type: 'string'},
	{ dataIndex: 'Description', 		type: 'string'},
	{ dataIndex: 'Vendor', 		type: 'string'},
	{ dataIndex: 'Valiuta', 	type: 'string'},
	{ dataIndex: 'CinaVvaliuti', 	type: 'string'},
	{ dataIndex: 'Price', 		type: 'string'},
	{ dataIndex: 'count', 	type: 'int'},
	{ dataIndex: 'OdVym', 	type: 'string'}
        ]
    };
	
  	var tpl = new Ext.Template(
          '<div class="quote-item">' +
		  '<img src="resources/Sklad/{picture}.jpg" alt="Logo" style="float:right;margin:4px;" />' +  
          '</div>'
    );
	function valiuta(val){ 
		switch(val)
		{
		case 'dollar':
		  var ItemValiuta = '<span style="color:green;"> долари </span>';
		  break;
		case 'grivna':
		  var ItemValiuta = '<span style="color:blue;"> гривні </span>';
		  break;
		case 'euro':
		  var ItemValiuta = '<span style="color:orange;"> євро </span>';
		  break;
		default:
		  var ItemValiuta = '<span style="color:red;"> Невизначено</span>';
		}
	return ItemValiuta;
	}	
	function pctChange(val, params, record){ 
		switch(record.data.Valiuta)
		{
		case 'dollar':
		  var strgrivna = '<span style="color:green;">' + (val * record.data.dollar).toFixed(2) + ' грн.</span>';
		  break;
		case 'grivna':
		  var strgrivna = '<span style="color:blue;">' + (val * record.data.grivna).toFixed(2) + ' грн.</span>';
		  break;
		case 'euro':
		  var strgrivna = '<span style="color:orange;">' + (val * record.data.euro).toFixed(2) + ' грн.</span>';
		  break;
		default:
		  var strgrivna = '<span style="color:red;">' + val.toFixed(2) +'</span>';
		}
		
		return '<span style="color:blue;">' + strgrivna + '</span>';
	}	
	function CinaVvaliuti(val, params, record){ 
		switch(record.data.Valiuta)
		{
		case 'dollar':
		  var strValiuta = '<span style="color:green;">' + record.data.Price + '</span>';
		  break;
		case 'grivna':
		  var strValiuta = '<span style="color:blue;">' + record.data.Price + '</span>';
		  break;
		case 'euro':
		  var strValiuta = '<span style="color:orange;">' + record.data.Price + '</span>';
		  break;
		default:
		  var strValiuta = '<span style="color:black;">' + record.data.Price + '</span>';
		}
		
		return '<span style="color:blue;">' + strValiuta + '</span>';
	}	

 ObjectStore = Ext.create('Ext.data.JsonStore', {
        storeId: 'ObjectStore',
		autoLoad: true,
            proxy: {
                type: 'ajax',
				url: './php/objects.php?action=showTop20',
                reader: {
                    type: 'json',
                    root: 'results'
                }
            },
            fields: [
                {
                    name: 'nazva'
                }
            ]
    });

 sumaNaSkladi1 = Ext.create('Ext.data.JsonStore', {
        storeId: 'sumaNaSkladi1',
		autoLoad: true,
            proxy: {
                type: 'ajax',
				url: './php/sumaNaSkladi.php',
                reader: {
                    type: 'json',
                    root: 'results'
                }
            },
            fields: [
                {
                    name: 'suma'
                }
            ],
			listeners: {
				load: function() {
					Ext.getCmp("TovarivNaSkladi").setValue(sumaNaSkladi1.data.items[0].data.suma + ' грн.');
				}
			}
    });
	
	
		

Ext.define('Borsuko.view.ui.sklad_view', {
    extend: 'Ext.panel.Panel',

    height: 750,
    animCollapse: false,
    collapseFirst: false,
    title: 'Товари на складі',

    initComponent: function() {
        var me = this;
        me.items = [
            {
                xtype: 'form',
                autoRender: true,
                autoShow: true,
                frame: true,
                height: 725,
                id: 'tabs_mega',
                itemId: 'tabs',
                maintainFlex: true,
                layout: {
                    type: 'column'
                },
                bodyPadding: 10,
                animCollapse: false,
                collapseFirst: false,
                collapsed: false,
                frameHeader: false,
                preventHeader: true,
                title: 'Mega',
                pollForChanges: true,
                paramsAsHash: true,
                standardSubmit: true,
                trackResetOnLoad: true,
                dockedItems: [
                    {
                        xtype: 'fieldset',
                        autoRender: true,
                        autoShow: true,
                        border: 0,
                        draggable: false,
                        frame: true,
                        height: 700,
                        id: 'form',
                        id: 'form',
                        itemId: 'form',
                        width: 350,
                        maintainFlex: true,
                        layout: {
                            type: 'column'
                        },
                        title: 'Інформація по обладнанню',
                        dock: 'left',
                        items: [
                            {
                                xtype: 'container',
                                border: 0,
                                height: 650,
                                id: 'Container1',
                                padding: 10,
                                width: 338,
                                items: [
                                    {
                                        xtype: 'textfield',
                                        disabled: true,
                                        id: 'ModelId',
                                        width: 240,
                                        toFrontOnShow: false,
                                        name: 'ID',
                                        fieldLabel: 'МІ',
                                        preventMark: true
                                    },
                                    {
                                        xtype: 'textfield',
                                        id: 'count',
                                        width: 300,
                                        name: 'count',
                                        readOnly: true,
                                        fieldLabel: 'Кількість'
                                    },
                                    {
                                        xtype: 'textfield',
                                        id: 'opercount',
                                        width: 300,
                                        name: 'opercount',
                                        fieldLabel: 'Оперативна к-ть'
                                    },
                                    {
                                        xtype: 'textfield',
                                        disabled: true,
                                        id: 'OdVym',
                                        width: 240,
                                        name: 'OdVym',
                                        fieldLabel: 'Од.Виміру'
                                    },
                                    {
                                        xtype: 'textfield',
                                        disabled: true,
                                        id: 'CategoryName',
                                        width: 300,
                                        name: 'CategoryName',
                                        fieldLabel: 'Категорія'
                                    },
                                    {
                                        xtype: 'textfield',
                                        id: 'Model',
                                        width: 300,
                                        name: 'Model',
                                        readOnly: true,
                                        fieldLabel: 'Модель'
                                    },
                                    {
                                        xtype: 'textareafield',
                                        height: 82,
                                        id: 'Description',
                                        width: 300,
                                        name: 'Description',
                                        readOnly: true,
                                        fieldLabel: 'Опис'
                                    },
                                    {
                                        xtype: 'textfield',
                                        id: 'Vendor',
                                        width: 300,
                                        name: 'Vendor',
                                        fieldLabel: 'Виробник'
                                    },
                                    {
                                        xtype: 'textfield',
                                        disabled: true,
                                        id: 'Price',
                                        width: 300,
                                        name: 'Price',
                                        fieldLabel: 'Ціна'
                                    },
                                    {
                                        xtype: 'textfield',
                                        disabled: true,
                                        id: 'Valiuta',
                                        width: 300,
                                        name: 'Valiuta',
                                        fieldLabel: 'Валюта'
                                    },
                                    {
                                        xtype: 'radiogroup',
                                        id: 'Spysannia',
                                        width: 311,
                                        layout: {
                                            type: 'column'
                                        },
                                        fieldLabel: 'Списано на',
                                       items: [
										{boxLabel: 'на контрагента', name: 'Spysannia', inputValue: 'на контрагента', id: 'kontragent',
										handler: function() {
											switch (this.getValue())
											{
										case true: 
											Ext.getCmp('kontr').setDisabled(false),
											Ext.getCmp('obj_nomer').setDisabled(true),
											selected = 'kontragent';
											break;
										case false: 
											break;
											}
										}
										},
										{boxLabel: 'на номер замовлення', name: 'Spysannia', inputValue: 'на номер замовлення', id: 'object',
										handler: function() {
											switch (this.getValue())
											{
										case true: 
											Ext.getCmp('save').setDisabled(true)
											Ext.getCmp('obj_nomer').setDisabled(false),
											Ext.getCmp('kontr').setDisabled(true),
											selected = 'obj_nomer';
											break;
										case false: 
											break;
											}
										}
										},
										{boxLabel: 'непридатність/повернення', name: 'Spysannia', inputValue: 'непридатність/повернення', id: 'neprydatnist',
										handler: function() {
											switch (this.getValue())
											{
										case true: 
											Ext.getCmp('obj_nomer').setDisabled(true),
											Ext.getCmp('kontr').setDisabled(true),
											selected = 'kontr';
											break;
										case false: 
											break;
											}
										}
										}
									 ]
                                    },
                                    {
                                        xtype: 'combobox',
                                        disabled: true,
										editable: false,
                                        id: 'kontr',
                                        width: 300,
                                        fieldLabel: 'Контрагент',
                                        emptyText: 'Вибір Контрагента',
                                        displayField: 'Type',
                                        store: 'KontragentyStore',
                                        valueField: 'Type'
                                    },
                                   
                                   /* {
                                        xtype: 'combobox',
                                        disabled: true,
										store: ObjectStore,
										displayField: 'nazva',
										valueField:'nazva',
										typeAhead: true,
										editable: false,
										mode: 'local',
										forceSelection: true,
										triggerAction: 'all',
										//anchor:'50%',
										name : 'obj_nomer',
										emptyText: 'Вибір ...',
                                        id: 'obj_nomer',
                                        width: 300,
                                        fieldLabel: 'Об\'єкт',
                                        emptyText: 'Вибір'
                                    },*/
									 {
									xtype: 'combobox',
									pageSize: true,
									 minChars: 0,
									//triggerAction: 'local', 
									id: 'obj_nomer',
									width: 300,
									fieldLabel: 'Об\'єкт',
									forceSelection: true,
										triggerAction: 'all',
									labelWidth: 100,
									emptyText: 'Вибір...',
									editable: false,
									 disabled: true,
									displayField: 'nazva',
									store: { 
										fields: ['nazva'], 
										pageSize: 20, 
										proxy: {
											type: 'ajax',
											//url: './php/objects.php?action=showTop20',
											url: './php/nomer_nazva.php',
											reader: {
												type: 'json',
												root: 'data'
											}
										} 
									} ,
									valueField: 'nazva'
								},
								
                                    {
                                        xtype: 'textareafield',
                                        height: 82,
                                        id: 'prymitka',
                                        width: 300,
                                        name: 'Prymitka',
                                        fieldLabel: 'Примітка'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'toolbar',
                        dock: 'top',
                        items: [
							{
							xtype: 'button',
							iconCls: 'save_columns', tooltip: 'Зберегти параметри колонок',
								handler : function(){
								getCount();
								}
							},
							
                            {
                                xtype: 'button',
                                id: 'add',
                                text: 'Додати в Наряд',
								iconCls: 'add',
								handler : function(){
									InsertToNariad();
								}
                            },
                            {
							xtype: 'combobox',
							pageSize: true,
							 minChars: 0,
							//triggerAction: 'local', 
							id: 'Nariad_object',
							width: 250,
							emptyText: "№ Наряду / Об'єкт",
							editable: false,
							displayField: 'nazva',
							store: { 
								fields: ['nazva'], 
								pageSize: 20, 
								proxy: {
									type: 'ajax',
									//url: './php/objects.php?action=showTop20',
									url: './php/nariad_object.php',
									reader: {
										type: 'json',
										root: 'data'
									}
								} 
							} ,
							valueField: 'nazva'
							},
                            /*{
                                xtype: 'button',
                                id: 'add_fond',
								iconCls: 'add',
                                text: 'Додати з вир. фондів',
								handler : function()
								{
								//window.location = "/fond_view.php?objid="+strObjid;   	
								window.location = "/fond_view.php";   	
								}
                            },*/
                            {
                                xtype: 'button',
                                id: 'view_history',
                                text: 'Перегляд історії видачіі',
								iconCls: 'member',
								handler : function()
								{
									var strcount = Ext.getCmp('count').getValue();
									strUrl = "./php/sklad_history_export.php";
									window.open (strUrl);
								}
                            },
                            {
                                xtype: 'button',
                                //disabled: true,
                                id: 'save',
                                style: {
                                    marginLeft: '100px'
                                },
                                text: 'Списання/Видача',
								iconCls: 'save',
								handler : function()
								{
									Save();
								}
                            },
                            SettingsForm
                        ]
                    }
                ],
                items: [
                    {
                        xtype: 'gridpanel',
                        draggable: false,
                        height: 600,
                        id: GridName,
                        width: 800,
                        focusOnToFront: false,
                        animCollapse: false,
                        collapseFirst: false,
                        title: 'Склад',
                        //forceFit: true,
                        store: 'SkladStore',
                        columnLines: true,
						features: [{ftype: 'groupingsummary'},filters],
                        columns: [
                            /*{
								xtype: 'gridcolumn',
								autoRender: true,
								hidden: true,
								width: 15,
								layout: {
									type: 'fit'
								},
								dataIndex: 'Type',
								text: 'Тип'
							},
							{
								xtype: 'gridcolumn',
								width: 120,
								dataIndex: 'CategoryName',
								text: 'Категорія'
							},*/
                            {
                                xtype: 'gridcolumn',
                                hidden: true,
                                width: 15,
                                dataIndex: 'ModelId',
                                text: 'МІ'
                            },
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'Model',
                                text: 'Модель'
                            },
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'Description',
                                text: 'Опис'
                            },
                            /*{
									xtype: 'gridcolumn',
									dataIndex: 'Vendor',
									text: 'Виробник'
								},*/
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'Valiuta',
                                text: 'Валюта',
								renderer: valiuta
                            },
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'CinaVvaliuti',
                                text: 'Ціна в валюті',
								renderer: CinaVvaliuti
                            },
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'Price',
                                text: 'Ціна в грн',
								renderer: pctChange
                            },
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'count',
                                text: 'Кількість'
                            },
														
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'OdVym',
                                text: 'Од. Вим'
                            },
                            {
                                xtype: 'gridcolumn',
								width: 15,
                                dataIndex: 'suma',
								//summaryType: "sum", 
								/*summaryRenderer: function(value, summaryData, dataIndex) {
									return summaryData.count + ' грн';
									},*/
								renderer: function(v, params, record) 	{ 
									var ValiutaValue = null;
									if (record.data.Valiuta === 'dollar') {
										ValiutaValue = Ext.getCmp('dollar').getValue();
									}
									;
									if (record.data.Valiuta === 'grivna') {
										ValiutaValue = Ext.getCmp('grivna').getValue();
									}
									;
									if (record.data.Valiuta === 'euro') {
										ValiutaValue = Ext.getCmp('euro').getValue();
									}
									;
									return '<span style="color:blue;"> '+ ((record.data.Price * record.data.count)* ValiutaValue).toFixed(2)  + ' грн </span>';
									//return (ValiutaValue);

									
								},	
										
                                text: 'Сума'
                            },
							
							{
								xtype: 'gridcolumn',
								dataIndex: 'Prymitka',
								text: 'Примітка'
							}
								
							
                        ],
						
						listeners: {
							selectionchange: function(model, records) {
							//Ext.getCmp('NomerNariadu').setValue(strObjid);
								if (records[0]) {
								this.up('form').getForm().loadRecord(records[0]);
								}
							},
							itemdblclick: function(model, records) {
								Ext.getCmp('save').setDisabled(false)
								var picture = Ext.getCmp('ModelId').getValue();
								var data = {picture: picture};
								var dialog;
									dialog = new Ext.Window({
									title: 'Фото товару на складі:',
									layout:'fit',
									width:500,
									height:300,
									closeAction:'hide',
									plain: true,
									listeners : {
									afterrender: function() { 
									tpl.overwrite(dialog.body, data);}
									},
									buttons: [				
										{text: 'Закрити',
										handler: function(){
										dialog.hide();}}
										]
								});
								dialog.show();
							}
							
						},
						
                        selModel: Ext.create('Ext.selection.CheckboxModel', {

                        }),
                        viewConfig: {
                            frame: true,
                            height: 600
                        },
                         dockedItems: [
                            {
                                xtype: 'toolbar',
                                dock: 'bottom',
                                items: [
                                    {
                                xtype: 'pagingtoolbar',
								pageSize: 20,
                                width: 415,
                                afterPageText: 'із {0}',
                                beforePageText: 'Сторінка',
                                displayInfo: true,
                                displayMsg: 'Показано {0} - {1} із {2}',
                                emptyMsg: 'Записи відсутні',
                                firstText: 'Перша сторінка',
                                lastText: 'Остання сторінка',
                                nextText: 'Наступна сторінка',
                                prependButtons: true,
                                prevText: 'Попередня сторінка',
                                refreshText: 'Оновити',
                                        store: 'SkladStore'
                                    },
                                    {
                                        xtype: 'textfield',
										id: 'TovarivNaSkladi',
										labelWidth: 150,
										//width: 10,
										//name: 'Vendor',
										fieldLabel: 'Товарів на складі на '
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ];
        me.callParent(arguments);
    }
});
store_money = Ext.create('Ext.data.JsonStore', {

        storeId: 'store_money',
		autoLoad: true,
            proxy: {
                type: 'ajax',
				url:'/php/settings.php?action=showData', 
                reader: {
                    type: 'json',
                    root: 'results'
                }
            },
            fields: [
                {
                    name: 'dollar'
                },
                {
                    name: 'euro'
                },
                {
                    name: 'grivna'
                }
            ],
			listeners: {
						load: function() {
						
						Ext.getCmp("dollar").setValue(store_money.data.items[0].data.dollar);
						Ext.getCmp("euro").setValue(store_money.data.items[0].data.euro);
						Ext.getCmp("grivna").setValue(store_money.data.items[0].data.grivna);
						}
					}
    });
	
		
	function getCount(){
	var jsonObj = { };
	  var MyGrid = Ext.getCmp(GridName).getView();
	  var ColumnSizeArray=new Array(); 
	  var ColumnVisibleArray=new Array(); 
	  var columns = MyGrid.getGridColumns();
	  var columnsLength = MyGrid.getGridColumns().length;
	  var columnsState = MyGrid.getHeaderCt().getGridColumns();
	  for(var i = 0; i < columnsLength; i++){
			ColumnSizeArray[i]=MyGrid.getHeaderAtIndex(i).el.dom.firstChild.scrollWidth;
			jsonObj[ColumnSizeArray[i].id] = ColumnSizeArray[i].value;
			ColumnVisibleArray[i]=columnsState[i].hidden;
	  }	

		var JsonColumnSize = array1dToJson(ColumnSizeArray, 'data', 'size');
		var JsonColumnVisible = array1dToJson(ColumnVisibleArray, 'data', 'hidden');
  
		Ext.Ajax.request(
				{
					url: './php/SaveColumnSize.php',
					params: {
						GridName: GridName,
						JsonColumnSize: JsonColumnSize,
						JsonColumnVisible: JsonColumnVisible
						
					},
					success: function()
					{
					Ext.MessageBox.alert('Виконано', 'Стан колонок успішно збережений');
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
		
		/*function array2dToJson(a, p, nl) {
		  var i, j, s = '{"' + p + '":[';
		  nl = nl || '';
		  for (i = 0; i < a.length; ++i) {
			s += nl + array1dToJson(a[i]);
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += nl + ']}';
		  return s;
		}*/
		
		function array1dToJson(a, p, value) {
		  var i, s = '[';
		  for (i = 0; i < a.length; ++i) {
			if (typeof a[i] == 'string') {
			  s += '"' + a[i] + '"';
			}
			else { // assume number type
			  s += "{\""+value+"\": "+a[i]+"}";
			}
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += ']';
		  if (p) {
			return '{"' + p + '":' + s + '}';
		  }
		  return s;
		}
}

 ColumnSizeStore = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnSizeStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnSize.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'size'
		}
	],
	listeners: {
				load: function() {
					
					var StoreLength = ColumnSizeStore.data.length;
					for(var i = 0; i < StoreLength; i++){
					//ColumnSizes[i] = ColumnSizeStore.data.items[i].data.size;
					Ext.getCmp(GridName).columns[i].setWidth(ColumnSizeStore.data.items[i].data.size);
					};
				}
			}
});	

ColumnStateStore = Ext.create('Ext.data.JsonStore', {

	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnStateStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnState.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'hidden'
		}
	],
	listeners: {
				load: function() {
					var StoreLength1 = ColumnStateStore.data.length;
					for(var i = 0; i < StoreLength1; i++){
					//ColumnSizes[i] = ColumnStateStore.data.items[i].data.hidden;
					Ext.getCmp(GridName).columns[i].setVisible(!(ColumnStateStore.data.items[i].data.hidden));//працює на FF, але не на IE
					};
				}
			}
});

function Save()
	{
	//strType = 'Склад';
	var selection =  Ext.getCmp(GridName).getSelectionModel().selected;
	var Slenght = selection.length;
	
	if ((Slenght > 0))
	{
	for (var ilenght=0 ; ilenght<Slenght; ilenght++)
	{

		var intIsDeleted = 1;
		var val = 0;
		for( i = 0; i < Ext.getCmp('Spysannia').items.getCount(); i++ )
		{
			if( Ext.getCmp('Spysannia').items.items[i].checked == true )
			val = Ext.getCmp('Spysannia').items.items[i].id;
		}
			
			switch (val)
			{
			case 0:
				alert('Помилка! Оберіть причину списання товару!');
				break;
			case 'kontragent':
				strModelId = Ext.getCmp("ModelId").getValue();
				strOdVym = Ext.getCmp("OdVym").getValue();
				strKontr = Ext.getCmp("kontr").getValue();
				strPrymitkaTMP = Ext.getCmp("prymitka").getValue();
				strPrice = Ext.getCmp("Price").getValue();
				strVendor = Ext.getCmp("Vendor").getValue();
				strModel = Ext.getCmp("Model").getValue();
				strDescription = Ext.getCmp("Description").getValue();
				strCountAfter = Ext.getCmp("count").getValue();
				//strCountBefore = selection[ilenght].data.count;
				stropercount = Ext.getCmp("opercount").getValue();
				strSumaSpysannia = stropercount * strPrice;
				
				var strZalyshok = strCountAfter - stropercount;
			
				if( strZalyshok >= 0) 
					{
						//strDate = Ext.getCmp("Date").getValue();
						var strPrymitka = strPrymitkaTMP + "*** З контрагента `"+strKontr+"` вираховано "+strSumaSpysannia+" грн.*** "
						if (!(strKontr == null))
							{
							Ext.Ajax.request(
							{
								url: './php/spysaty_sklad.php?action=Kontragent',
								params: {
									ModelId: strModelId,
									countAfter: strCountAfter,
									//countBefore:strCountBefore,
									OdVym:strOdVym,
									opercount:stropercount,
									KontrAgent: strKontr,
									Prymitka: strPrymitka,
									Price: strPrice,
									Vendor:strVendor,
									Model:strModel,
									Model:strModel,
									SumaSpysannia:strSumaSpysannia,
									Description:strDescription
								},
								success: function()
								{
								var MyGrid = Ext.getCmp(GridName).getView();
								MyGrid.getStore().load();
								Ext.MessageBox.alert('Дані Збережені!', 'Об\'єкт списаний');
									//window.location = "./sklad_view.php"
								},
								failure: function(response)
								{
									Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
								}
							})
							//Пишу на таблицю KontragentHistory
							Ext.Ajax.request(
							{
								url: './php/na_kontragentHistory.php',
								params: {
									modelID: strModelId,
									count: strCountAfter,
									opercount:stropercount,
									odVym:strOdVym,
									p_Kontragent: strKontr,
									prymitka: strPrymitkaTMP,
									price: strPrice,
									vendor:strVendor,
									model:strModel,
									type:strType,
									description:strDescription
									
								},
								success: function()
								{
									Ext.MessageBox.alert('Дані Збережені!', 'Об\'єкт списаний');
									var MyGrid = Ext.getCmp(GridName).getView();
									MyGrid.getStore().load();
								},
								failure: function(response)
								{
									Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
								}
							})
							
							
							}
						else
						   {
						   alert("Невибриний контрагент!");
						   }
					}
			else
			   {
			   alert("Ви намагаєтеся списати більше ніж доступно на складі!");
			   }

				break;
			case 'object': 
				strObj_nomer = Ext.getCmp("obj_nomer").getValue();
				strModelId = Ext.getCmp("ModelId").getValue();
				strOdVym = Ext.getCmp("OdVym").getValue();
				strPrymitka = Ext.getCmp("prymitka").getValue();
				strPrice = Ext.getCmp("Price").getValue();
				strVendor = Ext.getCmp("Vendor").getValue();
				strModel = Ext.getCmp("Model").getValue();
				strDescription = Ext.getCmp("Description").getValue();
				strCountAfter = Ext.getCmp("count").getValue();
				stropercount = Ext.getCmp("opercount").getValue();
				//alert(ilenght);
				//strCountBefore = selection[ilenght].data.count;
				//var strZalyshok = strCountBefore - strCountAfter;
				var strZalyshok = strCountAfter - stropercount;
				if( strZalyshok >= 0) 
				{
				Ext.Ajax.request(
				{
					url: './php/spysaty_sklad.php?action=Object',
					params: {
						
						ModelId: strModelId,
						countAfter: strCountAfter,
						Zalyshok:strZalyshok,
						IsDeleted: intIsDeleted,
						OdVym:strOdVym,
						Prymitka: strPrymitka,
						Price: strPrice,
						Vendor:strVendor,
						Model:strModel,
						Description:strDescription,
						ObjNomer: strObj_nomer

					},
					success: function()
					{
					var MyGrid = Ext.getCmp(GridName).getView();
					MyGrid.getStore().load();
						
					switch (intIsDeleted)
					{
						case 0:
							Ext.MessageBox.alert('Помилка!!!', 'Об\'єкт не списаний!');
							break;
						case 1:
							Ext.MessageBox.alert('Дані Збережені!', 'Об\'єкт списаний');
							break;
					}
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
				}
				else
			   {
			   alert("Ви намагаєтеся списати більше ніж доступно на складі!");
			   }
			   break;
			case 'neprydatnist': 
				strOdVym = Ext.getCmp("OdVym").getValue();
				strPrymitka = Ext.getCmp("prymitka").getValue();
				strModelId = Ext.getCmp("ModelId").getValue();
				strPrice = Ext.getCmp("Price").getValue();
				strVendor = Ext.getCmp("Vendor").getValue();
				strModel = Ext.getCmp("Model").getValue();
				strDescription = Ext.getCmp("Description").getValue();
				strNeprydatnist = "Непридатність";
				strCountAfter = Ext.getCmp("count").getValue();
				//strCountBefore = selection[ilenght].data.count;
				stropercount = Ext.getCmp("opercount").getValue();
				var strZalyshok = strCountAfter - stropercount;
			
				if( strZalyshok >= 0) 
				{
				Ext.Ajax.request(
				{
					url: './php/spysaty_sklad.php?action=Neprydatnist',
					params: {
						ModelId: strModelId,
						countAfter: strCountAfter,
						//countBefore:strCountBefore,
						opercount: stropercount,
						OdVym: strOdVym,
						Neprydatnist: strNeprydatnist,
						Prymitka: strPrymitka,
						Price: strPrice,
						Vendor: strVendor,
						Model:strModel,
						Description:strDescription
					},
					success: function()
					{
						var MyGrid = Ext.getCmp(GridName).getView();
						MyGrid.getStore().load();
						Ext.MessageBox.alert('Дані Збережені!', 'Об\'єкт списаний');
						//window.location = "./sklad_view.php"
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
				//Пишу на таблицю NeprydatnistHistory
							Ext.Ajax.request(
							{
								url: './php/na_NeprydatnistHistory.php',
								params: {
									modelID: strModelId,
									count: strCountAfter,
									//countBefore:strCountBefore,
									opercount: stropercount,
									odVym:strOdVym,
									prymitka: strPrymitka,
									price: strPrice,
									vendor:strVendor,
									model:strModel,
									type:strType,
									description:strDescription
									
								},
								success: function()
								{
									Ext.MessageBox.alert('Дані Збережені!', 'Об\'єкт списаний');
								},
								failure: function(response)
								{
									Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
								}
							})
				}
				else
			   {
			   alert("Ви намагаєтеся списати більше ніж доступно на складі!");
			   }
				break;
			}	
    }
	}
	else
	{
	alert ("Невибраний товар для списання!")
	}
	}//Кінець функції SAVE  	

	
	function InsertToNariad()
	{		
		var selection =  Ext.getCmp(GridName).getSelectionModel().selected;
		var Slenght = selection.length;
	
		
		if(Slenght > 0) {

			var Nariad_object = Ext.getCmp('Nariad_object').getValue();
			var arrNariad=Nariad_object.split("/");
			var strNariad=arrNariad[0];
			if (strNariad == "") 
			{
			Ext.MessageBox.alert('Message', 'Будьласка, оберіть Об*єкт!');
			}
			else {
				var strVendor = Ext.getCmp('Vendor').getValue();
				var strCount = Ext.getCmp('count').getValue();
				var strOperCount = Ext.getCmp('opercount').getValue();
				var strCategoryName = Ext.getCmp('CategoryName').getValue();
				var strPrymitka = Ext.getCmp('prymitka').getValue();
				var strModel = Ext.getCmp('Model').getValue();
				var strDescription = Ext.getCmp('Description').getValue();
				var strValiuta = Ext.getCmp('Valiuta').getValue();
				var zalyshok = strCount - strOperCount;
				
				if (strOperCount == "")
				{
				Ext.MessageBox.alert('Помилка', 'Невибрана кількість! Заповніть поле "Оперативна кількість"');
				}
				
			if( zalyshok >= 0) {
			alert('Добре, залишок : '+zalyshok);			
			for (var i=0 ; i<Slenght; i++)
			{
				//var strType=selection.items[i].data.Type;
				//var strType="Склад";
				var strModelId=selection.items[i].data.ModelId;
				var strPrice=selection.items[i].data.Price;
				var OdVym=selection.items[i].data.OdVym;

				
				Ext.Ajax.request({
				//url: './php/insert_to_nariad2.php',
				url: './php/InsertToNariadFromSklad.php',
				
				params: 
					{
						Nariad:strNariad,
						Type:strType,
						CategoryName:strCategoryName,
						ModelId:strModelId,
						Model:strModel,
						Description:strDescription,
						Price:strPrice,
						Valiuta:strValiuta,
						Prymitka:strPrymitka,
						OdVym:OdVym,
						Vendor:strVendor,
						OperCount:strOperCount,
						Count:strCount
					},
					success: function()
					{
					var MyGrid = Ext.getCmp(GridName).getView();
					MyGrid.getStore().load();				
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				});
			}	
			
		}
		else
		{
		alert('Ви намагаєтесь взяти зі складу більше ніж доступно. Залишок : '+zalyshok);
		}
		}  
		}
		else {Ext.MessageBox.alert('Message', 'Будьласка, оберіть комплектуючі!');}
    }  	
	
	
	
	/*SkladViewGrid.on("rowdblclick", function(grid1) {
        var sel = grid1.getSelectionModel().getSelected();
        var selIndex = SkladStore.indexOf(sel);
		var picture=sel.data.ID;
		var data = {picture: picture};
		var dialog;
			dialog = new Ext.Window({
			title: 'Фото товару на складі:',
			layout:'fit',
			width:500,
			height:300,
			closeAction:'hide',
			plain: true,
			listeners : {
			afterrender: function() { 
			tpl.overwrite(dialog.body, data);}
			},
			buttons: [				
				{text: 'Закрити',
				handler: function(){
				dialog.hide();}}
				]
		});
		dialog.show();   
    });*/