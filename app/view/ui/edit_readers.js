/*
 * File: app/view/ui/edit_readers.js
 * Date: Mon Sep 12 2011 16:32:25 GMT+0300 (FLE Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
Ext.Loader.setConfig({enabled: true});
Ext.grid.RowEditor.prototype.cancelBtnText = "Відмінити";
Ext.grid.RowEditor.prototype.saveBtnText = "Зберегти";
Ext.grid.RowEditor = new Ext.grid.RowEditor();
Ext.Loader.setPath('Ext.ux', '/ext-4.0.2a/examples/ux');
Ext.require([
    //'Ext.grid.*',
    //'Ext.data.*',
    'Ext.ux.grid.FiltersFeature',
    'Ext.toolbar.Paging'
]);


   var currentTime = new Date();
    var now = currentTime.getFullYear()+1;
    var years = [];
    var y = 1975;
    while(y<=now){
        years.push([y]);
        y++;
    }

 var url = {
        local:  'grid-filter.json',  
        remote: 'grid-filter.php'
    };

    var encode = false;
    var local = false;
	
	 Ext.define('Product', {
    extend: 'Ext.data.Model',
    fields: [ 
			{ type: 'int', name: 'reader_id' },
			{ type: 'date', name: 'date' },
			{ type: 'date', name: 'birthday' },
			{ type: 'string',name: 'name1' },
			{ type: 'string',name: 'name2' },
			{ type: 'string',name: 'surname' },
			{ type: 'string',name: 'email' },
			{ type: 'string',name: 'idcard' },
			{ type: 'string',name: 'other' },
                       

			{ type: 'string',name: 'formuliar' },
			{ type: 'string',name: 'nationality' },
			{ type: 'string',name: 'phone' },
			{ type: 'string',name: 'osvita' },
			{ type: 'string',name: 'profesia' },
			{ type: 'string',name: 'viddil' },
 { type: 'string',name: 'adress' },
			{ type: 'date',name: 'year' },
			{ type: 'string',name: 'filija' },




			{ type: 'string',name: 'workplace' }






			]
});

	
var GridName = "Readers" 
	
    var filters = {
        ftype: 'filters',
        encode: encode, 
        local: local,   
        filters: [
			{ type: 'int', dataIndex: 'reader_id' },
			{ type: 'date', dataIndex: 'date' },
			{ type: 'date', dataIndex: 'birthday' },
			{ type: 'string',dataIndex: 'name1' },
			{ type: 'string',dataIndex: 'name2' },
			{ type: 'string',dataIndex: 'surname' },
			{ type: 'string',dataIndex: 'email' },
			{ type: 'string',dataIndex: 'idcard' },
			{ type: 'string',dataIndex: 'other' },
                        { type: 'string',dataIndex: 'adress' },



		{ type: 'date',dataIndex: 'year' },
			{ type: 'string',dataIndex: 'filija' },

			{ type: 'string',dataIndex: 'formuliar' },
			{ type: 'string',dataIndex: 'nationality' },
			{ type: 'string',dataIndex: 'phone' },
			{ type: 'string',dataIndex: 'osvita' },
			{ type: 'string',dataIndex: 'profesia' },
			{ type: 'string',dataIndex: 'viddil' },

			{ type: 'string',dataIndex: 'workplace' }
        ]
    };

 var editor = new Ext.grid.plugin.RowEditing({
        saveText: 'Зберегти'
    });
 
readersAll = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	 pageSize: 20,
            autoSync: true,
            storeId: 'readersAll',
            proxy: {
                type: 'ajax',
                url: './php/readersAll.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            fields: [
			{ name: 'reader_id' },
			{ name: 'birthday' },
			{ name: 'name1' },
			{ name: 'name2' },
			{ name: 'surname' },
			{ name: 'email' },
			{ name: 'idcard' },
			{ name: 'workplace' },
			{ name: 'date' },
            { name: 'formuliar' },
            { name: 'nationality' },
            { name: 'phone' },
            { name: 'osvita' },
            { name: 'profesia' },
            { name: 'viddil' },
                        { name: 'year' },
                        { name: 'adress' },
                        { name: 'filija' },




			{ name: 'other' }

            ]
    });

storeThn = Ext.create('Ext.data.SimpleStore', {
storeId: 'storeThn',
        fields: [ 'tahun' ],        
        data: years
    });


Ext.define('Borsuko.view.ui.edit_readers', {
    extend: 'Ext.panel.Panel',


    initComponent: function() {
        var me = this;
        me.items = [
            {
                xtype: 'form',
                autoRender: true,
                autoShow: true,
                frame: true,
                height: 750,
                id: 'tabs',
                itemId: 'tabs',
                maintainFlex: true,
                bodyPadding: '',
                animCollapse: false,
                collapseFirst: false,
                collapsed: false,
                collapsible: true,
                frameHeader: false,
                title: 'Читачі',
                titleCollapse: true,
                pollForChanges: true,
                paramsAsHash: true,
                standardSubmit: true,
                trackResetOnLoad: true,
                items: [

                    {
                        xtype: 'gridpanel',
                        id: GridName,
						height: 500,
                        //toFrontOnShow: false,
                        //suspendLayout: true,
                        bodyBorder: true,
                        frameHeader: false,
                        //forceFit: true,
                        store: 'readersAll',
						selModel: Ext.create('Ext.selection.RowModel', {
                            allowDeselect: true
                        }),

                        columnLines: true,
                        features: [filters],
						plugins: [editor],
						
                        		columns: [
                            /*{
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'State',
                                text: 'Стан книжки',
                                field: {
									 xtype: 'combobox',
									 editable: false,
									displayField: 'name',
									queryMode: 'local',
									store: 'StanObjektu',
									valueField: 'abbr'
                                    
                                },
									renderer: function(v, params, record) 	{ 
								if(record.data.State	 == '1') { 
								var stan = 'відкр.';
								var color = 'green';
								};
								if(record.data.State	 == '0') { 
								var stan = 'закр.';
								var color = 'gray'; var dekor =  'line-through';
								};
								return '<span style="color:' + color + '">' + stan + '</span>';
								}
                            },*/
                            {
                                xtype: 'gridcolumn',
								width: 150,
								//width: 41,
                                autoRender: true,
                                layout: {
                                    type: 'fit'
                                },
                                dataIndex: 'reader_id',
                                hidden: true,
                                text: 'Номер',
								filtrable:true,
								renderer: GreenGrtayColor
                            },

                            {
                                xtype: 'gridcolumn',
								width: 150,
								//width: 41,
                                autoRender: true,
                                layout: {
                                    type: 'fit'
                                },
                                dataIndex: 'formuliar',
                                text: '&#1060;&#1086;&#1088;&#1084;&#1091;&#1083;&#1103;&#1088;',
								filtrable:true,
								renderer: GreenGrtayColor
                            },

                            {
                                xtype: 'gridcolumn',
                                width: 150,
                                //width: 41,
                                autoRender: true,
                                layout: {
                                    type: 'fit'
                                },
                                dataIndex: 'year',
                                text: '&#1056;&#1110;&#1082;',
                                filtrable:true,
                                field: {
    xtype: 'combobox',
    displayField: 'tahun',
    store: 'storeThn',
    valueField: 'tahun'
},
                                renderer: GreenGrtayColor
                            },
                                                        {
                                xtype: 'gridcolumn',
                                width: 150,
                                //width: 41,
                                autoRender: true,
                                layout: {
                                    type: 'fit'
                                },
                                dataIndex: 'filija',
                                text: '&#1060;&#1110;&#1083;&#1110;&#1103;',
                                filtrable:true,
                                field: {
    xtype: 'combobox',
    displayField: 'filija',
    store: 'filija_store',
    valueField: 'filija'
},
                                renderer: GreenGrtayColor
                            },


							{
                                xtype: 'datecolumn',
								width: 100,
								type: 'date', 
								format: 'd/m/Y',								
                                dataIndex: 'date',
                                text: 'Дата додавання',
                                field: {
									format: 'd-m-Y',
									xtype: 'datefield'
                                },
								renderer: GreenGrtayColor
                            },
							
							{
                                xtype: 'datecolumn',
								width: 100,
								type: 'date', 
								format: 'd/m/Y',								
                                dataIndex: 'birthday',
                                text: 'День Народження',
                                field: {
									format: 'd-m-Y',
									xtype: 'datefield'
                                },
								renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
								width: 150,
								//width: 41,
                                dataIndex: 'name1',
                                text: 'Ім\'я',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
								renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
								width: 150,
								//width: 41,
                                dataIndex: 'name2',
                                text: 'Прізвище',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
								renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'surname',
                                text: 'По-батькові',
								field: {
                                    xtype: 'textfield'
                                    
                                },
								renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'nationality',
                                text: '&#1053;&#1072;&#1094;&#1110;&#1086;&#1085;&#1072;&#1083;&#1100;&#1085;&#1110;&#1089;&#1090;&#1100;',
								field: {
                                    xtype: 'textfield'
                                    
                                },
								renderer: GreenGrtayColor
                            },
                                                        {
                                xtype: 'gridcolumn',
                                width: 150,
                                dataIndex: 'adress',
                                text: '&#1040;&#1076;&#1088;&#1077;&#1089;&#1072;',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
                                renderer: GreenGrtayColor
                            },

                            

                            {
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'phone',
                                text: '&#1058;&#1077;&#1083;&#1077;&#1092;&#1086;&#1085;',
								field: {
                                    xtype: 'textfield'
                                    
                                },
								renderer: GreenGrtayColor
                            },
                             {
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'osvita',
                                text: '&#1054;&#1089;&#1074;&#1110;&#1090;&#1072;',
								field: {
    xtype: 'combobox',
    displayField: 'osvita',
    store: 'osvita_store',
    valueField: 'osvita'
},
								renderer: GreenGrtayColor
                            },                           



                            {
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'profesia',
                                text: '&#1055;&#1088;&#1086;&#1092;&#1077;&#1089;&#1110;&#1103;',
								field: {
    xtype: 'combobox',
    displayField: 'profesia',
    store: 'profesia_store',
    valueField: 'profesia'
},
								renderer: GreenGrtayColor
                            },
                             {
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'viddil',
                                text: '&#1042;&#1110;&#1076;&#1076;&#1110;&#1083;',
								field: {
    xtype: 'combobox',
    displayField: 'viddil',
    store: 'viddil_store',
    valueField: 'viddil'
},
								renderer: GreenGrtayColor
                            }, 

							{
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'email',
                                text: 'Електронна пошта',
								field: {
                                    xtype: 'textfield'
                                    
                                },
								renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
								width: 150,
                                dataIndex: 'idcard',
								text: 'Номер Квитка',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
								renderer: GreenGrtayColor
                            },
                            {
                                xtype: 'gridcolumn',
								width: 100,
                                dataIndex: 'workplace',
                                text: 'Місце праці/навчання',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
								renderer: GreenGrtayColor
                            },
							{
                                xtype: 'gridcolumn',
								width: 100,
                                dataIndex: 'other',
                                text: 'Примітка',
                                field: {
                                    xtype: 'textfield'
                                    
                                },
								renderer: GreenGrtayColor
                            }
							

                          ],
                         listeners: {
							selectionchange: function(model, records) {
								if (records[0]) {
							
								Ext.getCmp('export').setDisabled(false)
								Ext.getCmp('del').setDisabled(false)
								}
							}
						},
						
                        viewConfig: {
                            width: 2000
                        },
						
						
						 dockedItems: [
                            {
                                xtype: 'toolbar',
								id: 'toolbarTop',
                                dock: 'top',
                                items: [
								{
									xtype: 'button',
									iconCls: 'save_columns', tooltip: 'Зберегти параметри колонок',
									handler : function(){
									//var MyGrid = Ext.getCmp(GridName).getView();
									getCount();
										}
								},

                                    {
                                        xtype: 'button',
                                        id: 'del',
										disabled: true,
                                        text: 'Видалити',
										iconCls: 'remove',
										handler : function(){
										Ext.Msg.confirm('Підтвердження', 'Дійсно хочете видалити читача?',
										function(btn){
											if(btn == 'yes'){
											sendRemoveRequest();
											}
										}
										);
									}
                                    },
                                    {
                                        xtype: 'button',
                                        id: 'export',
										disabled: true,
                                        text: 'Експорт',
										iconCls: 'member',
										handler : function()
										{
								alert('not now :-)')
										}
                                    }
                                    
                                    
                                ]
                            },
							
							{
                                xtype: 'pagingtoolbar',
								pageSize: 20,
								id: 'pagingtoolbar',
                                afterPageText: 'із {0}',
                                beforePageText: 'Сторінка',
                                displayInfo: true,
                                displayMsg: 'Показано {0} - {1} із {2}',
                                emptyMsg: 'Записи відсутні',
                                firstText: 'Перша сторінка',
                                lastText: 'Остання сторінка',
                                nextText: 'Наступна сторінка',
                                prependButtons: true,
                                prevText: 'Попередня сторінка',
                                refreshText: 'Оновити',
								store: readersAll,
                                dock: 'bottom'
                            }
                        ]
                       						
                    }
                ]
            }
        ];
        me.callParent(arguments);
    }
});

function sendRemoveRequest(){
		var MyGrid = Ext.getCmp(GridName).getView();
		var cr = Ext.getCmp(GridName).getSelectionModel().selected;

		var str_id = cr.items[0].data.reader_id;
		//alert(strnomer);
		Ext.Ajax.request({
			url:'/php/delete_reader.php', //php function that saves the data
			params: {id: str_id},
			success:function(responce, action) {
			MyGrid.getStore().load();
			},
			failure: function(form, action) {
			alert('Помилка при виделенні');
			}
		});
    }
	
	function sendUpdateRequest(){
	
				var jsonData = new Array();       
	
				var cr = Ext.getCmp(GridName).getSelectionModel().selected;
				//var Slenght = Ext.getCmp(GridName).getSelectionModel().selected.length;
				//var strNomer = cr.items[0].data.nomer;
				

                
                
                

               var str_adress = cr.items[0].data.adress;

                var str_filija = cr.items[0].data.filija;

                var str_year = cr.items[0].data.year;


				var str_formuliar = cr.items[0].data.formuliar;
				var str_nationality = cr.items[0].data.nationality;
				var str_phone = cr.items[0].data.phone;
				var str_osvita= cr.items[0].data.osvita;
				var str_profesia = cr.items[0].data.profesia;
				var str_viddil = cr.items[0].data.viddil;

				var str_id = cr.items[0].data.reader_id;
				var str_date = cr.items[0].data.date;
				var str_name1 = cr.items[0].data.name1;
				var str_name2 = cr.items[0].data.name2;
				var str_surname = cr.items[0].data.surname;
				var str_email = cr.items[0].data.email;
				var str_birthday = cr.items[0].data.birthday;
				var str_idcard = cr.items[0].data.idcard;
				var str_workplace = cr.items[0].data.workplace;
				var str_other = cr.items[0].data.other;
				
				
				Ext.Ajax.request(
				{
					url: './php/updatereaders.php',
					params: {
						
                                                adress: str_adress,

                        filija: str_filija,

                        year: str_year,


						formuliar: str_formuliar,
						nationality: str_nationality,
						phone: str_phone,
						osvita: str_osvita,
						profesia: str_profesia,
						viddil: str_viddil,

						id:str_id,
						date:str_date,
						name1 :str_name1,
						name2 :str_name2,
						surname :str_surname,
						email :str_email,
						birthday :str_birthday,
						idcard :str_idcard,
						workplace :str_workplace,
						other :str_other
						
					
					},
					success: function()
					{
						//MyGrid.getStore().load();
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
				var MyGrid = Ext.getCmp(GridName).getView();
				MyGrid.getStore().load();
				
	}
	
	function GreenGrtayColor (v, params, record) { 
		//var value = record.data.nomer;
		if(record.data.Stan_objektu	 == '1') { 
		var color = 'green';
		};
		if(record.data.Stan_objektu	 == '0') { 
		var color = 'gray'; 
		var dekor =  'line-through';
		};
		return '<span style="color:' + color + '">' + v + '</span>';
	}
	
	function getCount(){
	var jsonObj = { };
	  var MyGrid = Ext.getCmp(GridName).getView();
	  var ColumnSizeArray=new Array(); 
	  var ColumnVisibleArray=new Array(); 
	  var columns = MyGrid.getGridColumns();
	  var columnsLength = MyGrid.getGridColumns().length;
	  var columnsState = MyGrid.getHeaderCt().getGridColumns();
	  for(var i = 0; i < columnsLength; i++){
			ColumnSizeArray[i]=MyGrid.getHeaderAtIndex(i).el.dom.firstChild.scrollWidth;
			jsonObj[ColumnSizeArray[i].id] = ColumnSizeArray[i].value;
			ColumnVisibleArray[i]=columnsState[i].hidden;
	  }	

		var JsonColumnSize = array1dToJson(ColumnSizeArray, 'data', 'size');
		var JsonColumnVisible = array1dToJson(ColumnVisibleArray, 'data', 'hidden');
  
		Ext.Ajax.request(
				{
					url: './php/SaveColumnSize.php',
					params: {
						GridName: GridName,
						JsonColumnSize: JsonColumnSize,
						JsonColumnVisible: JsonColumnVisible
						
					},
					success: function()
					{
					Ext.MessageBox.alert('Виконано', 'Стан колонок успішно збережений');
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
		
		/*function array2dToJson(a, p, nl) {
		  var i, j, s = '{"' + p + '":[';
		  nl = nl || '';
		  for (i = 0; i < a.length; ++i) {
			s += nl + array1dToJson(a[i]);
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += nl + ']}';
		  return s;
		}*/
		
		function array1dToJson(a, p, value) {
		  var i, s = '[';
		  for (i = 0; i < a.length; ++i) {
			if (typeof a[i] == 'string') {
			  s += '"' + a[i] + '"';
			}
			else { // assume number type
			  s += "{\""+value+"\": "+a[i]+"}";
			}
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += ']';
		  if (p) {
			return '{"' + p + '":' + s + '}';
		  }
		  return s;
		}
}

 ColumnSizeStore = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnSizeStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnSize.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'size'
		}
	],
	listeners: {
				load: function() {
					
					var StoreLength = ColumnSizeStore.data.length;
					for(var i = 0; i < StoreLength; i++){
					//ColumnSizes[i] = ColumnSizeStore.data.items[i].data.size;
					Ext.getCmp(GridName).columns[i].setWidth(ColumnSizeStore.data.items[i].data.size);
					};
				}
			}
});	

ColumnStateStore = Ext.create('Ext.data.JsonStore', {

	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnStateStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnState.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'hidden'
		}
	],
	listeners: {
				load: function() {
					var StoreLength1 = ColumnStateStore.data.length;
					for(var i = 0; i < StoreLength1; i++){
					//ColumnSizes[i] = ColumnStateStore.data.items[i].data.hidden;
					Ext.getCmp(GridName).columns[i].setVisible(!(ColumnStateStore.data.items[i].data.hidden));//працює на FF, але не на IE
					};
				}
			}
});


editor.on('afteredit', sendUpdateRequest); 