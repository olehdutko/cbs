/*
 * File: app/view/ui/Calls.js
 * Date: Mon Sep 12 2011 16:32:25 GMT+0300 (FLE Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
Ext.Loader.setConfig({enabled: true});
Ext.grid.RowEditor.prototype.cancelBtnText = "Відмінити";
Ext.grid.RowEditor.prototype.saveBtnText = "Зберегти";
Ext.grid.RowEditor = new Ext.grid.RowEditor();
Ext.Loader.setPath('Ext.ux', '/ext-4.0.2a/examples/ux');
Ext.require([
    //'Ext.grid.*',
    //'Ext.data.*',
    'Ext.ux.grid.FiltersFeature',
    'Ext.toolbar.Paging'
]);

 Ext.define('Product', {
    extend: 'Ext.data.Model',
    fields: [ 
				{ type: 'int', 	name: 'ID'},
				{ type: 'string',	name: 'priority'},
                { type: 'date',	name: 'creationDate'},
				{ type: 'date',	name: 'lastUpdateDate'},
                { type: 'string',	name: 'destination'},
                { type: 'string',	name: 'phone'},
                { type: 'string',	name: 'email'},
				{ type: 'string',	name: 'contactPerson'},
                { type: 'string',	name: 'contacts'},
                { type: 'string',	name: 'kontragent'},
				{ type: 'date',	name: 'nextCallDate'},
				{ type: 'string',	name: 'prymitka'},
				{ type: 'string',	name: 'status'}
		]
});

var priorities = [
   {"iso2":"P0","name":"P0"},
   {"iso2":"P1","name":"P1"},
   {"iso2":"P2","name":"P2"},      
   {"iso2":"P3","name":"P3"}
];     

       
Ext.define("Country", {extend: "Ext.data.Model",
    fields: [
        {type: 'iso2',   name: 'iso2'},
        {type: 'string', name: 'name'}
    ]
});

var countryStore = Ext.create('Ext.data.Store', {
    model: 'Country',
    data: priorities
});

// ComboBox with a custom item template
priorityCombo = Ext.create('Ext.form.field.ComboBox', {
    displayField : 'iso2',
    valueField   : 'name',
    grow         : true,
	editable     : false,
    store        : countryStore,
    queryMode    : 'local',
    listConfig: {
        getInnerTpl: function() {
            // here you place the images in your combo
            var tpl = '<div>'+
                      '<img src="resources/priority/{iso2}.gif" align="left">&nbsp;&nbsp;'+
                      '{name}</div>';
            return tpl;
        }
    }
});

/******************/
var callStatuses = [
   {"name":"Новий"},
   {"name":"Перспективний"},
   {"name":"Подзвонити в майбутньому"},
   {"name":"Прострочений"},
   {"name":"Результативний дзвінок"},
   {"name":"Безрезультатно"},
   {"name":"Недодзвонилися"}
   
];     

       
Ext.define("callStatusesModel", {extend: "Ext.data.Model",
    fields: [
        {type: 'string', name: 'name'}
    ]
});

var callStatusesStore = Ext.create('Ext.data.Store', {
    model: 'callStatusesModel',
    data: callStatuses
});

// ComboBox with a custom item template
callStatusesCombo = Ext.create('Ext.form.field.ComboBox', {
    displayField : 'name',
    valueField   : 'name',
    grow         : true,
	editable     : false,
    store        : callStatusesStore,
    queryMode    : 'local'
});
/******************/




//renderer function
function priorityR(val) {

var tpl = '<div>'+
    '<img src="resources/priority/'+val+'.gif" align="left">&nbsp;&nbsp;</div>';
    return tpl;
}

		   
 var url = {
        local:  'grid-filter.json',  
        remote: 'grid-filter.php'
    };

    var encode = false;
    var local = false;
	


	
var GridName = "Calls_Grid" 
	
    var filters = {
        ftype: 'filters',
        encode: encode, 
        local: local,   
        filters: [
				{ type: 'int', 	dataIndex: 'ID'},
				{ type: 'string',	dataIndex: 'priority'},
                { type: 'date',	dataIndex: 'creationDate'},
				{ type: 'date',	dataIndex: 'lastUpdateDate'},
                { type: 'string',	dataIndex: 'destination'},
                { type: 'string',	dataIndex: 'phone'},
                { type: 'string',	dataIndex: 'email'},
				{ type: 'string',	dataIndex: 'contactPerson'},
                { type: 'string',	dataIndex: 'contacts'},
                { type: 'string',	dataIndex: 'kontragent'},
				{ type: 'date',	dataIndex: 'nextCallDate'},
				{ type: 'string',	dataIndex: 'prymitka'},
				{ type: 'string',	dataIndex: 'status'}
        ]
    };

 var editor = new Ext.grid.plugin.RowEditing({
        saveText: 'Зберегти'
    });
 
CallsStore = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	 pageSize: 20,
            autoSync: true,
            storeId: 'CallsStore',
            proxy: {
                type: 'ajax',
                url: './php/Calls.php',
                reader: {
                    type: 'json',
                    root: 'data'
                }
            },
            fields: [
                { name: 'ID' },
				{ dateFormat: 'Y-m-d', name: 'lastUpdateDate'},
				{ dateFormat: 'Y-m-d', name: 'creationDate'},
				//{ dateFormat: 'Y-m-d', name: 'nextCallDate'},
				{dateFormat: 'Y-m-d', name: 'nextCallDate'},
                { name: 'destination'},
				{ name: 'priority'},
                { name: 'phone'},
				{ name: 'email'},
                { name: 'contactPerson'},
                { name: 'contacts'},
                { name: 'kontragent'},
                { name: 'status'},
                { name: 'prymitka'}
            ]
			
    });


Ext.define('Borsuko.view.ui.Calls', {
    extend: 'Ext.panel.Panel',


    initComponent: function() {
        var me = this;
        me.items = [
            {
                xtype: 'form',
                autoRender: true,
                autoShow: true,
                frame: true,
                height: 750,
                id: 'tabs',
                itemId: 'tabs',
                maintainFlex: true,
                bodyPadding: '',
                animCollapse: false,
                collapseFirst: false,
                collapsed: false,
                collapsible: true,
                frameHeader: false,
                title: 'Добавити інформацію про дзвінок',
                titleCollapse: true,
                pollForChanges: true,
                paramsAsHash: true,
                standardSubmit: true,
                trackResetOnLoad: true,
				dockedItems: [
                            {
                                xtype: 'toolbar',
								id: 'toolbarTop',
                                dock: 'top',
                                items: [
                                    {
                                        xtype: 'button',
                                        id: 'addCall',
                                        text: 'Додати дзвінок',
										iconCls: 'add',
										handler : function(){
											addCall();
										}
										
										
										
										
                                    },
                                    
                                    
                                ]
                            }

                        ],
                items: [
                    {
                        xtype: 'container',
                        height: 150,
                        layout: {
                            type: 'column'
                        },
                        items: [
                            {
                                xtype: 'container',
                                border: 0,
                                id: 'Container1',
                                padding: 10,
                                width: 338,
                                items: [
                                    {
                                        xtype: 'textfield',
                                        id: 'kudyField',
                                        width: 300,
										allowBlank: false,
                                        fieldLabel: 'Куди'
                                    },
                                    {
                                        xtype: 'textfield',
                                        id: 'contactPersonField',
										allowBlank: false,
                                        width: 300,
                                        fieldLabel: 'Контактна Особа'
                                    },
									 {
										xtype: 'combobox',
										editable: false,
                                        displayField: 'PIB',
                                        store: 'store_managers',
										allowBlank: false,
                                        valueField: 'PIB',
                                        id: 'kontragentField',
                                        width: 300,
                                        fieldLabel: 'Менеджер'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                id: 'Container2',
                                padding: 10,
                                width: 350,
                                items: [
								{
                                        xtype: 'textfield',
                                        id: 'contactsField',
                                        width: 300,
										allowBlank: false,
                                        name: 'contactsField',
                                        fieldLabel: 'Контакти'
                                    },
									{
                                        xtype: 'textfield',
                                        id: 'emailField',
										allowBlank: false,
                                        width: 300,
                                        name: 'emailField',
                                        fieldLabel: 'e-mail'
                                    },
									
                                    
									{
										xtype: 'container',
										id: 'Container4',
										allowBlank: false,
										//padding: 10,
										layout: {
											type: 'table',
											columns: 4
										},
										width: 200,
										stateful: false,
										focusOnToFront: false,
										items: [
											{
												xtype: 'textfield',
												listeners: {
													afterrender: function() {
																this.setValue("+38");
													}
												},
												id: 'telefonField1',
												width: 150,
												fieldLabel: 'Телефон'
											},
											{
												xtype: 'textfield',
												id: 'telefonField2',
												width: 50
												
											},
											{
												xtype: 'textfield',
												id: 'telefonField3',
												width: 100
											}
										]
									}
									
									
									

                                ]
                            },
                            {
                                xtype: 'container',
                                id: 'Container3',
                                padding: 10,
                                width: 300,
                                stateful: false,
                                focusOnToFront: false,
                                items: [
                                    {
                                        xtype: 'datefield',
										format : "d/m/Y",
                                        id: 'nextCallField',
                                        width: 300,
                                        name: 'nextCallField',
                                        fieldLabel: 'Наст. дзвінок'
                                    },
									{
                                        xtype: 'textareafield',
										width: 300,
                                        fieldLabel: 'Примітка',
										id: 'prymitkaField',
                                        emptyText: 'Примітка'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'gridpanel',
                        id: GridName,
						height: 500,
                        toFrontOnShow: false,
                        suspendLayout: true,
                        bodyBorder: true,
                        frameHeader: false,
                        //forceFit: true,
                        store: 'CallsStore',
						selModel: Ext.create('Ext.selection.RowModel', {
                            allowDeselect: true
                        }),
						listeners: {
							render: function() {
							 checkCalls();
							}
						},
                        columnLines: true,
						plugins: [editor],
						 features: [filters, 
							{
								ftype: 'grouping'
							}
						],
                        		columns: [
                            
							{
                                xtype: 'gridcolumn',
								width: 20,
                                autoRender: true,
								renderer: priorityR,
                                dataIndex: 'priority',
								field: priorityCombo,
                                text: 'Приорітет',
								filtrable:true
                            },
							{
                                xtype: 'gridcolumn',
								width: 20,
                                autoRender: true,
                                dataIndex: 'ID',
								hidden:true,
                                text: 'Номер',
								filtrable:true
                            },
							{
                                xtype: 'gridcolumn',
								width: 20,
                                dataIndex: 'creationDate',
								//renderer: dateFunction,	
                                text: 'Дата Створення'
                            },
							{
                                xtype: 'gridcolumn',
								width: 20,
                                dataIndex: 'lastUpdateDate',
								//renderer: dateFunction,	
                                text: 'Дата ост. Редагування'
                            },
							
							{
                                xtype: 'gridcolumn',
								width: 20,
                                dataIndex: 'destination',
                                text: 'Куди',
                                field: {xtype: 'textfield'}
                            },
                            {
                                xtype: 'gridcolumn',
								width: 20,
                                dataIndex: 'phone',
                                text: 'Телефон',
                                field: {xtype: 'textfield'}
                            },
							{
                                xtype: 'gridcolumn',
								width: 20,
                                dataIndex: 'email',
                                text: 'Електронна Пошта',
                                field: {xtype: 'textfield'}
                            },
                            {
                                xtype: 'gridcolumn',
								width: 20,
                                dataIndex: 'contactPerson',
                                text: 'Контактна особа',
								field: {xtype: 'textfield'}
                            },
                            {
                                xtype: 'gridcolumn',
								width: 20,
                                dataIndex: 'contacts',
                                text: 'Контакти',
								field: {xtype: 'textfield'}
                            },
                            {
                                xtype: 'gridcolumn',
								width: 20,
                                dataIndex: 'kontragent',
                                text: 'Менеджер',
								field: {xtype: 'combobox',
								editable: false,
								displayField: 'PIB',
								store: 'store_managers',
								valueField: 'PIB'}
                            },
                            {
                                xtype: 'datecolumn',
								type: 'date', 
								format: 'd/m/Y',
								width: 20,
                                dataIndex: 'nextCallDate',
                                text: 'Наступний дзвінок',
								//renderer: dateFunction,	
								field: {
									format: 'd-m-Y',
									xtype: 'datefield'
                                }
                            },
					 
							{
                                xtype: 'gridcolumn',
								width: 20,
                                dataIndex: 'status',
                                text: 'Статус',
								renderer: GreenGrtayColor,
                                field: callStatusesCombo
                            },
							{
                                xtype: 'gridcolumn',
								width: 20,
                                dataIndex: 'prymitka',
                                text: 'Примітка',
								field: {xtype: 'textfield'}
                            }
							
                            
                        ],
                        viewConfig: {
                            width: 2000
                        },
						
						
                        dockedItems: [
                            {
                                xtype: 'toolbar',
								id: 'toolbarTop1',
                                dock: 'top',
                                items: [
							{
								xtype: 'button',
								iconCls: 'save_columns', tooltip: 'Зберегти параметри колонок',
								handler : function(){
								getCount();
								}
							},
							{
								xtype: 'button',
								iconCls: 'refresh', 
								tooltip: 'Перевірити дзвінки',
								handler : function(){
								checkCalls();

								}
							},
									{
                                        xtype: 'button',
                                        id: 'delCall',
										//disabled: true,
                                        text: 'Видалення Дзвінка',
										iconCls: 'remove',
										handler : function(){
										Ext.Msg.confirm('Підтвердження', 'Дійсно хочете видалити дзвінок?',
											function(btn){
												if(btn == 'yes'){
												removeCall();
												}
											}
										);
										}
                                    }
                                    
                                ]
                            },
							
							{
								xtype: 'pagingtoolbar',
								pageSize: 20,
								id: 'pagingtoolbar',
                                afterPageText: 'із {0}',
                                beforePageText: 'Сторінка',
                                displayInfo: true,
                                displayMsg: 'Показано {0} - {1} із {2}',
                                emptyMsg: 'Записи відсутні',
                                firstText: 'Перша сторінка',
                                lastText: 'Остання сторінка',
                                nextText: 'Наступна сторінка',
                                prependButtons: true,
                                prevText: 'Попередня сторінка',
                                refreshText: 'Оновити',
								store: CallsStore,
                                dock: 'bottom'
                            }
                        ]
                       						
                    }
                ]
            }
        ];
        me.callParent(arguments);
    }
});

function removeCall(){
	
		
		var cr = Ext.getCmp(GridName).getSelectionModel().selected;
		var strNomer = cr.items[0].data.ID;
		
		Ext.Ajax.request({
			url:'/php/removeCall.php?action=RemoveData',
			params: {strID: strNomer},
			success:function(responce, action) {
				var MyGrid = Ext.getCmp(GridName).getView();
				MyGrid.getStore().load();
			},
			failure: function(form, action) {
			alert('Помилка при виделенні дзвінку');
			}
		});
    }
	
	function checkCalls(){
	
		Ext.Ajax.request({
			url:'/php/CheckCalls.php',

			success:function(responce, action) {
				var MyGrid = Ext.getCmp(GridName).getView();
				MyGrid.getStore().load();
			},
			failure: function(form, action) {
			alert('Помилка при виделенні дзвінку');
			}
		});
    }
	
	
	
	
	
	function addCall(){
		var strkudy = Ext.getCmp("kudyField").getValue();
		var strcontactPerson = Ext.getCmp("contactPersonField").getValue();
		var strkontragentField = Ext.getCmp("kontragentField").getValue();
		var strcontacts = Ext.getCmp("contactsField").getValue();
		var stremail = Ext.getCmp("emailField").getValue();
		var strtelefon = Ext.getCmp("telefonField1").getValue()+" "+Ext.getCmp("telefonField2").getValue()+" "+Ext.getCmp("telefonField3").getValue();
		
		var strnextCall = Ext.getCmp("nextCallField").getValue();
		var strprymitka = Ext.getCmp("prymitkaField").getValue();
		

		Ext.Ajax.request(
				{
					url: './php/addCall.php',
					params: {
						kudy:strkudy,
						contactPerson:strcontactPerson,
						kontragentField:strkontragentField,
						contacts:strcontacts,
						email:stremail,
						telefon:strtelefon,
						nextCall:strnextCall,
						prymitka:strprymitka
					},
					success: function()
					{
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
				var MyGrid = Ext.getCmp(GridName).getView();
				MyGrid.getStore().load();
    }
	
	function UpdateRequest(){
	
		var jsonData = new Array();       
		var cr = Ext.getCmp(GridName).getSelectionModel().selected;
		var Slenght = Ext.getCmp(GridName).getSelectionModel().selected.length;
		
				var ID = cr.items[0].data.ID;
				var destination = cr.items[0].data.destination;
				var phone = cr.items[0].data.phone;
				var email = cr.items[0].data.email;
				var contactPerson = cr.items[0].data.contactPerson;
				var contacts = cr.items[0].data.contacts;
				var kontragent = cr.items[0].data.kontragent;
				var nextCallDate = cr.items[0].data.nextCallDate;
				var status = cr.items[0].data.status;
				var prymitka = cr.items[0].data.prymitka;
				var priority = cr.items[0].data.priority;

				Ext.Ajax.request(
				{
					url: './php/updateCall.php',
					params: {
						ID:ID,
						destination:destination,
						phone:phone,
						email:email,
						contactPerson:contactPerson,
						contacts:contacts,
						kontragent:kontragent,
						nextCallDate:nextCallDate,
						status:status,
						priority:priority,
						prymitka:prymitka
					},
					success: function()
					{
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
				var MyGrid = Ext.getCmp(GridName).getView();
				MyGrid.getStore().load();
				
	}

	function GreenGrtayColor (v, params, record) { 
		
		if(v == 'Новий') { 
			var textcolor = 'black';
			var bgcolor = 'white';
		};
		
		if(v == 'Перспективний') { 
			var textcolor = 'SeaGreen';
			var bgcolor = 'white';
		};
		
		if(v == 'Подзвонити_в_майбутньому') { 
			var textcolor = 'blue';
			var bgcolor = 'white';
		};
		
		if(v == 'Прострочений') { 
			var textcolor = 'black';
			var bgcolor = 'red';
		};

		if(v == 'Результативний_дзвінок') { 
			var textcolor = 'orange';
			var bgcolor = 'white';
		};
		if(v == 'Безрезультатно') { 
			var textcolor = 'gray';
			var bgcolor = 'white';
		};		
		
		if(v == 'Недодзвонилися') { 
			var textcolor = 'red';
			var bgcolor = 'white';
			
		};	
		
		
		
		





		if(record.data.Stan_objektu	 == '0') { 
			var textcolor = 'gray'; 
		};
		return '<span style="color:' + textcolor + '; background-color:'+bgcolor+'">' + v + '</span>';
	}
	
	function getCount(){
	var jsonObj = { };
	  var MyGrid = Ext.getCmp(GridName).getView();
	  var ColumnSizeArray=new Array(); 
	  var ColumnVisibleArray=new Array(); 
	  var columns = MyGrid.getGridColumns();
	  var columnsLength = MyGrid.getGridColumns().length;
	  var columnsState = MyGrid.getHeaderCt().getGridColumns();
	  for(var i = 0; i < columnsLength; i++){
			ColumnSizeArray[i]=MyGrid.getHeaderAtIndex(i).el.dom.firstChild.scrollWidth;
			jsonObj[ColumnSizeArray[i].id] = ColumnSizeArray[i].value;
			ColumnVisibleArray[i]=columnsState[i].hidden;
	  }	

		var JsonColumnSize = array1dToJson(ColumnSizeArray, 'data', 'size');
		var JsonColumnVisible = array1dToJson(ColumnVisibleArray, 'data', 'hidden');
  
		Ext.Ajax.request(
				{
					url: './php/SaveColumnSize.php',
					params: {
						GridName: GridName,
						JsonColumnSize: JsonColumnSize,
						JsonColumnVisible: JsonColumnVisible
						
					},
					success: function()
					{
					Ext.MessageBox.alert('Виконано', 'Стан колонок успішно збережений');
					},
					failure: function(response)
					{
						Ext.MessageBox.alert('Помилка', 'Неможливо доступитися до бази даних');
					}
				})
		
		/*function array2dToJson(a, p, nl) {
		  var i, j, s = '{"' + p + '":[';
		  nl = nl || '';
		  for (i = 0; i < a.length; ++i) {
			s += nl + array1dToJson(a[i]);
			if (i < a.length - 1) {	
			  s += ',';
			}
		  }
		  s += nl + ']}';
		  return s;
		}*/
		
		function array1dToJson(a, p, value) {
		  var i, s = '[';
		  for (i = 0; i < a.length; ++i) {
			if (typeof a[i] == 'string') {
			  s += '"' + a[i] + '"';
			}
			else { // assume number type
			  s += "{\""+value+"\": "+a[i]+"}";
			}
			if (i < a.length - 1) {
			  s += ',';
			}
		  }
		  s += ']';
		  if (p) {
			return '{"' + p + '":' + s + '}';
		  }
		  return s;
		}
}

ColumnSizeStore = Ext.create('Ext.data.JsonStore', {
	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnSizeStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnSize.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'size'
		}
	],
	listeners: {
				load: function() {
					
					var StoreLength = ColumnSizeStore.data.length;
					for(var i = 0; i < StoreLength; i++){
					//ColumnSizes[i] = ColumnSizeStore.data.items[i].data.size;
					Ext.getCmp(GridName).columns[i].setWidth(ColumnSizeStore.data.items[i].data.size);
					};
				}
			}
});	

ColumnStateStore = Ext.create('Ext.data.JsonStore', {

	autoLoad: true,
	autoSync: true,
	storeId: 'ColumnStateStore',
	proxy: {
		type: 'ajax',
		url: './php/SelectColumnState.php?GridName='+GridName,
		reader: {
			type: 'json',
			root: 'data'
		}
	},
	fields: [
		{
			name: 'hidden'
		}
	],
	listeners: {
				load: function() {
					var StoreLength1 = ColumnStateStore.data.length;
					for(var i = 0; i < StoreLength1; i++){
					//ColumnSizes[i] = ColumnStateStore.data.items[i].data.hidden;
					Ext.getCmp(GridName).columns[i].setVisible(!(ColumnStateStore.data.items[i].data.hidden));//працює на FF, але не на IE
					};
				}
			}
			
});

	function dateFunction(val){ 
		var dateArray = val.split("-");
		var dateArray2 = dateArray[2].split(" ");
		dateArray[2] = dateArray2[0] 
		MyDate = dateArray[2]+"/"+dateArray[1]+"/"+dateArray[0]+" "+dateArray2[1];
		return MyDate;
	}
editor.on('afteredit', UpdateRequest); 